

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Apr 20 14:13:56 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    53                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    55  0000                     
    56                           ; Version 2.20
    57                           ; Generated 12/02/2020 GMT
    58                           ; 
    59                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F4520 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     
    91                           	psect	idataCOMRAM
    92  002324                     __pidataCOMRAM:
    93                           	callstack 0
    94                           
    95                           ;initializer for _INCREMENT
    96  002324  0A                 	db	10
    97                           
    98                           ;initializer for _filter_bt_min_lv2_incr
    99  002325  000A               	dw	10
   100                           
   101                           ;initializer for _filter_bt_min_lv1_incr
   102  002327  000A               	dw	10
   103                           
   104                           ;initializer for _filter_bt_on_off_pump
   105  002329  000A               	dw	10
   106                           
   107                           ;initializer for _filter_bt_operation_mode
   108  00232B  000A               	dw	10
   109                           
   110                           	psect	smallconst
   111  000600                     __psmallconst:
   112                           	callstack 0
   113  000600  00                 	db	0
   114  000601                     _dpowers:
   115                           	callstack 0
   116  000601  0001               	dw	1
   117  000603  000A               	dw	10
   118  000605  0064               	dw	100
   119  000607  03E8               	dw	1000
   120  000609  2710               	dw	10000
   121  00060B                     __end_of_dpowers:
   122                           	callstack 0
   123  0000                     _TMR0	set	4054
   124  0000                     _ADRESL	set	4035
   125  0000                     _ADRESH	set	4036
   126  0000                     _ADCON0bits	set	4034
   127  0000                     _ADCON2	set	4032
   128  0000                     _ADCON0	set	4034
   129  0000                     _ADCON1	set	4033
   130  0000                     _LATE	set	3981
   131  0000                     _PORTE	set	3972
   132  0000                     _LATD	set	3980
   133  0000                     _PORTD	set	3971
   134  0000                     _LATB	set	3978
   135  0000                     _TRISE	set	3990
   136  0000                     _TRISD	set	3989
   137  0000                     _TRISC	set	3988
   138  0000                     _TRISB	set	3987
   139  0000                     _INTCON2bits	set	4081
   140  0000                     _T0CON	set	4053
   141  0000                     _PORTC	set	3970
   142  0000                     _LATDbits	set	3980
   143  0000                     _PORTB	set	3969
   144  0000                     _INTCONbits	set	4082
   145  0000                     _PORTEbits	set	3972
   146  0000                     _PORTDbits	set	3971
   147  0000                     _TRISEbits	set	3990
   148  0000                     _TRISDbits	set	3989
   149  0000                     _LATC	set	3979
   150  00060B                     STR_1:
   151  00060B  43                 	db	67	;'C'
   152  00060C  55                 	db	85	;'U'
   153  00060D  52                 	db	82	;'R'
   154  00060E  52                 	db	82	;'R'
   155  00060F  45                 	db	69	;'E'
   156  000610  4E                 	db	78	;'N'
   157  000611  54                 	db	84	;'T'
   158  000612  20                 	db	32
   159  000613  4C                 	db	76	;'L'
   160  000614  56                 	db	86	;'V'
   161  000615  31                 	db	49	;'1'
   162  000616  3A                 	db	58	;':'
   163  000617  20                 	db	32
   164  000618  25                 	db	37
   165  000619  64                 	db	100	;'d'
   166  00061A  25                 	db	37
   167  00061B  25                 	db	37
   168  00061C  20                 	db	32
   169  00061D  20                 	db	32
   170  00061E  00                 	db	0
   171  00061F                     STR_2:
   172  00061F  43                 	db	67	;'C'
   173  000620  55                 	db	85	;'U'
   174  000621  52                 	db	82	;'R'
   175  000622  52                 	db	82	;'R'
   176  000623  45                 	db	69	;'E'
   177  000624  4E                 	db	78	;'N'
   178  000625  54                 	db	84	;'T'
   179  000626  20                 	db	32
   180  000627  4C                 	db	76	;'L'
   181  000628  56                 	db	86	;'V'
   182  000629  32                 	db	50	;'2'
   183  00062A  3A                 	db	58	;':'
   184  00062B  20                 	db	32
   185  00062C  25                 	db	37
   186  00062D  64                 	db	100	;'d'
   187  00062E  25                 	db	37
   188  00062F  25                 	db	37
   189  000630  20                 	db	32
   190  000631  20                 	db	32
   191  000632  00                 	db	0
   192  000633                     STR_6:
   193  000633  4C                 	db	76	;'L'
   194  000634  56                 	db	86	;'V'
   195  000635  5F                 	db	95	;'_'
   196  000636  4D                 	db	77	;'M'
   197  000637  49                 	db	73	;'I'
   198  000638  4E                 	db	78	;'N'
   199  000639  5F                 	db	95	;'_'
   200  00063A  31                 	db	49	;'1'
   201  00063B  3A                 	db	58	;':'
   202  00063C  20                 	db	32
   203  00063D  25                 	db	37
   204  00063E  64                 	db	100	;'d'
   205  00063F  25                 	db	37
   206  000640  25                 	db	37
   207  000641  20                 	db	32
   208  000642  20                 	db	32
   209  000643  20                 	db	32
   210  000644  00                 	db	0
   211  000645                     STR_7:
   212  000645  4C                 	db	76	;'L'
   213  000646  56                 	db	86	;'V'
   214  000647  5F                 	db	95	;'_'
   215  000648  4D                 	db	77	;'M'
   216  000649  49                 	db	73	;'I'
   217  00064A  4E                 	db	78	;'N'
   218  00064B  5F                 	db	95	;'_'
   219  00064C  32                 	db	50	;'2'
   220  00064D  3A                 	db	58	;':'
   221  00064E  20                 	db	32
   222  00064F  25                 	db	37
   223  000650  64                 	db	100	;'d'
   224  000651  25                 	db	37
   225  000652  25                 	db	37
   226  000653  20                 	db	32
   227  000654  20                 	db	32
   228  000655  20                 	db	32
   229  000656  00                 	db	0
   230  000657                     STR_3:
   231  000657  4F                 	db	79	;'O'
   232  000658  50                 	db	80	;'P'
   233  000659  45                 	db	69	;'E'
   234  00065A  52                 	db	82	;'R'
   235  00065B  41                 	db	65	;'A'
   236  00065C  54                 	db	84	;'T'
   237  00065D  49                 	db	73	;'I'
   238  00065E  4F                 	db	79	;'O'
   239  00065F  4E                 	db	78	;'N'
   240  000660  20                 	db	32
   241  000661  4D                 	db	77	;'M'
   242  000662  4F                 	db	79	;'O'
   243  000663  44                 	db	68	;'D'
   244  000664  45                 	db	69	;'E'
   245  000665  3A                 	db	58	;':'
   246  000666  20                 	db	32
   247  000667  00                 	db	0
   248  000668                     STR_5:
   249  000668  4D                 	db	77	;'M'
   250  000669  41                 	db	65	;'A'
   251  00066A  4E                 	db	78	;'N'
   252  00066B  55                 	db	85	;'U'
   253  00066C  41                 	db	65	;'A'
   254  00066D  4C                 	db	76	;'L'
   255  00066E  20                 	db	32
   256  00066F  20                 	db	32
   257  000670  20                 	db	32
   258  000671  20                 	db	32
   259  000672  20                 	db	32
   260  000673  20                 	db	32
   261  000674  20                 	db	32
   262  000675  20                 	db	32
   263  000676  20                 	db	32
   264  000677  00                 	db	0
   265  000678                     STR_4:
   266  000678  41                 	db	65	;'A'
   267  000679  55                 	db	85	;'U'
   268  00067A  54                 	db	84	;'T'
   269  00067B  4F                 	db	79	;'O'
   270  00067C  4D                 	db	77	;'M'
   271  00067D  41                 	db	65	;'A'
   272  00067E  54                 	db	84	;'T'
   273  00067F  49                 	db	73	;'I'
   274  000680  43                 	db	67	;'C'
   275  000681  20                 	db	32
   276  000682  20                 	db	32
   277  000683  20                 	db	32
   278  000684  20                 	db	32
   279  000685  20                 	db	32
   280  000686  20                 	db	32
   281  000687  00                 	db	0
   282  000688  00                 	db	0	; dummy byte at the end
   283  0000                     
   284                           ; #config settings
   285                           
   286                           	psect	cinit
   287  0020F8                     __pcinit:
   288                           	callstack 0
   289  0020F8                     start_initialization:
   290                           	callstack 0
   291  0020F8                     __initialization:
   292                           	callstack 0
   293                           
   294                           ; Initialize objects allocated to COMRAM (9 bytes)
   295                           ; load TBLPTR registers with __pidataCOMRAM
   296  0020F8  0E24               	movlw	low __pidataCOMRAM
   297  0020FA  6EF6               	movwf	tblptrl,c
   298  0020FC  0E23               	movlw	high __pidataCOMRAM
   299  0020FE  6EF7               	movwf	tblptrh,c
   300  002100  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   301  002102  6EF8               	movwf	tblptru,c
   302  002104  EE00  F05B         	lfsr	0,__pdataCOMRAM
   303  002108  EE10 F009          	lfsr	1,9
   304  00210C                     copy_data0:
   305  00210C  0009               	tblrd		*+
   306  00210E  CFF5 FFEE          	movff	tablat,postinc0
   307  002112  50E5               	movf	postdec1,w,c
   308  002114  50E1               	movf	fsr1l,w,c
   309  002116  E1FA               	bnz	copy_data0
   310                           
   311                           ; Clear objects allocated to BANK0 (32 bytes)
   312  002118  EE00  F080         	lfsr	0,__pbssBANK0
   313  00211C  0E20               	movlw	32
   314  00211E                     clear_0:
   315  00211E  6AEE               	clrf	postinc0,c
   316  002120  06E8               	decf	wreg,f,c
   317  002122  E1FD               	bnz	clear_0
   318                           
   319                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   320  002124  6A64               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   321                           
   322                           ; Clear objects allocated to COMRAM (38 bytes)
   323  002126  EE00  F035         	lfsr	0,__pbssCOMRAM
   324  00212A  0E26               	movlw	38
   325  00212C                     clear_1:
   326  00212C  6AEE               	clrf	postinc0,c
   327  00212E  06E8               	decf	wreg,f,c
   328  002130  E1FD               	bnz	clear_1
   329  002132                     end_of_initialization:
   330                           	callstack 0
   331  002132                     __end_of__initialization:
   332                           	callstack 0
   333  002132  9065               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   334  002134  9265               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   335  002136  0E00               	movlw	low (__Lmediumconst shr (0+16))
   336  002138  6EF8               	movwf	tblptru,c
   337  00213A  0100               	movlb	0
   338  00213C  EF03  F00D         	goto	_main	;jump to C main() function
   339                           
   340                           	psect	bitbssCOMRAM
   341  000320                     __pbitbssCOMRAM:
   342                           	callstack 0
   343  000320                     _refresh_display:
   344                           	callstack 0
   345  000320                     	ds	1
   346                           
   347                           	psect	bssCOMRAM
   348  000035                     __pbssCOMRAM:
   349                           	callstack 0
   350  000035                     _tank2:
   351                           	callstack 0
   352  000035                     	ds	12
   353  000041                     _tank1:
   354                           	callstack 0
   355  000041                     	ds	12
   356  00004D                     _count_refresh_display:
   357                           	callstack 0
   358  00004D                     	ds	2
   359  00004F                     _count_screen:
   360                           	callstack 0
   361  00004F                     	ds	2
   362  000051                     _screen:
   363                           	callstack 0
   364  000051                     	ds	1
   365  000052                     _operation:
   366                           	callstack 0
   367  000052                     	ds	1
   368  000053                     _bt_min_lv2_incr_press:
   369                           	callstack 0
   370  000053                     	ds	2
   371  000055                     _bt_min_lv1_incr_press:
   372                           	callstack 0
   373  000055                     	ds	2
   374  000057                     _bt_on_off_pump_press:
   375                           	callstack 0
   376  000057                     	ds	2
   377  000059                     _bt_operation_mode_press:
   378                           	callstack 0
   379  000059                     	ds	2
   380                           
   381                           	psect	dataCOMRAM
   382  00005B                     __pdataCOMRAM:
   383                           	callstack 0
   384  00005B                     _INCREMENT:
   385                           	callstack 0
   386  00005B                     	ds	1
   387  00005C                     _filter_bt_min_lv2_incr:
   388                           	callstack 0
   389  00005C                     	ds	2
   390  00005E                     _filter_bt_min_lv1_incr:
   391                           	callstack 0
   392  00005E                     	ds	2
   393  000060                     _filter_bt_on_off_pump:
   394                           	callstack 0
   395  000060                     	ds	2
   396  000062                     _filter_bt_operation_mode:
   397                           	callstack 0
   398  000062                     	ds	2
   399                           
   400                           	psect	bssBANK0
   401  000080                     __pbssBANK0:
   402                           	callstack 0
   403  000080                     _display:
   404                           	callstack 0
   405  000080                     	ds	32
   406                           
   407                           	psect	cstackCOMRAM
   408  000001                     __pcstackCOMRAM:
   409                           	callstack 0
   410  000001                     ??_Lcd_Cmd:
   411  000001                     ??_Lcd_Chr_CP:
   412  000001                     ?_CheckBit:
   413                           	callstack 0
   414  000001                     ?_adc_amostra:
   415                           	callstack 0
   416  000001                     ?___lwdiv:
   417                           	callstack 0
   418  000001                     ?___fladd:
   419                           	callstack 0
   420  000001                     ?___fltol:
   421                           	callstack 0
   422  000001                     ?___xxtofl:
   423                           	callstack 0
   424  000001                     SetBit@port:
   425                           	callstack 0
   426  000001                     ClearBit@port:
   427                           	callstack 0
   428  000001                     TougleBit@port:
   429                           	callstack 0
   430  000001                     CheckBit@port:
   431                           	callstack 0
   432  000001                     ___lwdiv@dividend:
   433                           	callstack 0
   434  000001                     strcpy@to:
   435                           	callstack 0
   436  000001                     ___fltol@f1:
   437                           	callstack 0
   438  000001                     ___fladd@b:
   439                           	callstack 0
   440  000001                     ___xxtofl@val:
   441                           	callstack 0
   442                           
   443                           ; 4 bytes @ 0x0
   444  000001                     	ds	2
   445  000003                     ??_adc_amostra:
   446  000003                     Lcd_Chr_CP@data:
   447                           	callstack 0
   448  000003                     Lcd_Cmd@data:
   449                           	callstack 0
   450  000003                     SetBit@pin:
   451                           	callstack 0
   452  000003                     ClearBit@pin:
   453                           	callstack 0
   454  000003                     TougleBit@pin:
   455                           	callstack 0
   456  000003                     CheckBit@pin:
   457                           	callstack 0
   458  000003                     ___lwdiv@divisor:
   459                           	callstack 0
   460  000003                     strcpy@from:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x2
   464  000003                     	ds	1
   465  000004                     ??_Lcd_Init:
   466  000004                     Lcd_Out@x:
   467                           	callstack 0
   468                           
   469                           ; 1 bytes @ 0x3
   470  000004                     	ds	1
   471  000005                     ??_TougleBit:
   472  000005                     ??_CheckBit:
   473  000005                     ??_ClearBit:
   474  000005                     ??_SetBit:
   475  000005                     ??___fltol:
   476  000005                     ??___xxtofl:
   477  000005                     Lcd_Init@data:
   478                           	callstack 0
   479  000005                     Lcd_Out@buffer:
   480                           	callstack 0
   481  000005                     ___lwdiv@quotient:
   482                           	callstack 0
   483  000005                     strcpy@cp:
   484                           	callstack 0
   485  000005                     ___fladd@a:
   486                           	callstack 0
   487                           
   488                           ; 4 bytes @ 0x4
   489  000005                     	ds	2
   490  000007                     Lcd_Out@y:
   491                           	callstack 0
   492  000007                     adc_amostra@canal:
   493                           	callstack 0
   494  000007                     ___lwdiv@counter:
   495                           	callstack 0
   496                           
   497                           ; 1 bytes @ 0x6
   498  000007                     	ds	1
   499  000008                     ?___lwmod:
   500                           	callstack 0
   501  000008                     Lcd_Out@data:
   502                           	callstack 0
   503  000008                     ___lwmod@dividend:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x7
   507  000008                     	ds	1
   508  000009                     ??___fladd:
   509  000009                     ___fltol@sign1:
   510                           	callstack 0
   511  000009                     ___xxtofl@sign:
   512                           	callstack 0
   513  000009                     Show_Display@display:
   514                           	callstack 0
   515                           
   516                           ; 32 bytes @ 0x8
   517  000009                     	ds	1
   518  00000A                     ??_Change_Mode:
   519  00000A                     ___fltol@exp1:
   520                           	callstack 0
   521  00000A                     ___xxtofl@exp:
   522                           	callstack 0
   523  00000A                     ___lwmod@divisor:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x9
   527  00000A                     	ds	1
   528  00000B                     ___xxtofl@arg:
   529                           	callstack 0
   530                           
   531                           ; 4 bytes @ 0xA
   532  00000B                     	ds	1
   533  00000C                     ___lwmod@counter:
   534                           	callstack 0
   535                           
   536                           ; 1 bytes @ 0xB
   537  00000C                     	ds	1
   538  00000D                     ?_sprintf:
   539                           	callstack 0
   540  00000D                     ___fladd@signs:
   541                           	callstack 0
   542  00000D                     sprintf@sp:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0xC
   546  00000D                     	ds	1
   547  00000E                     ___fladd@aexp:
   548                           	callstack 0
   549                           
   550                           ; 1 bytes @ 0xD
   551  00000E                     	ds	1
   552  00000F                     ?___fldiv:
   553                           	callstack 0
   554  00000F                     ___fladd@bexp:
   555                           	callstack 0
   556  00000F                     sprintf@f:
   557                           	callstack 0
   558  00000F                     ___fldiv@b:
   559                           	callstack 0
   560                           
   561                           ; 4 bytes @ 0xE
   562  00000F                     	ds	1
   563  000010                     ___fladd@grs:
   564                           	callstack 0
   565                           
   566                           ; 1 bytes @ 0xF
   567  000010                     	ds	1
   568  000011                     ___flge@ff1:
   569                           	callstack 0
   570                           
   571                           ; 4 bytes @ 0x10
   572  000011                     	ds	2
   573  000013                     ??_sprintf:
   574  000013                     ___fldiv@a:
   575                           	callstack 0
   576                           
   577                           ; 4 bytes @ 0x12
   578  000013                     	ds	1
   579  000014                     sprintf@ap:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x13
   583  000014                     	ds	1
   584  000015                     ___flge@ff2:
   585                           	callstack 0
   586                           
   587                           ; 4 bytes @ 0x14
   588  000015                     	ds	1
   589  000016                     sprintf@flag:
   590                           	callstack 0
   591                           
   592                           ; 1 bytes @ 0x15
   593  000016                     	ds	1
   594  000017                     ??___fldiv:
   595  000017                     sprintf@prec:
   596                           	callstack 0
   597                           
   598                           ; 1 bytes @ 0x16
   599  000017                     	ds	1
   600  000018                     sprintf@val:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x17
   604  000018                     	ds	1
   605  000019                     ??___flge:
   606                           
   607                           ; 1 bytes @ 0x18
   608  000019                     	ds	1
   609  00001A                     sprintf@c:
   610                           	callstack 0
   611                           
   612                           ; 1 bytes @ 0x19
   613  00001A                     	ds	1
   614  00001B                     _Set_Display_Message$604:
   615                           	callstack 0
   616  00001B                     ___fldiv@rem:
   617                           	callstack 0
   618                           
   619                           ; 4 bytes @ 0x1A
   620  00001B                     	ds	2
   621  00001D                     Automatic_Mode@isFull:
   622                           	callstack 0
   623                           
   624                           ; 1 bytes @ 0x1C
   625  00001D                     	ds	2
   626  00001F                     ___fldiv@sign:
   627                           	callstack 0
   628                           
   629                           ; 1 bytes @ 0x1E
   630  00001F                     	ds	1
   631  000020                     ___fldiv@new_exp:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x1F
   635  000020                     	ds	2
   636  000022                     ___fldiv@grs:
   637                           	callstack 0
   638                           
   639                           ; 4 bytes @ 0x21
   640  000022                     	ds	4
   641  000026                     ___fldiv@bexp:
   642                           	callstack 0
   643                           
   644                           ; 1 bytes @ 0x25
   645  000026                     	ds	1
   646  000027                     ___fldiv@aexp:
   647                           	callstack 0
   648                           
   649                           ; 1 bytes @ 0x26
   650  000027                     	ds	1
   651  000028                     Read_Level@adcTank1:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x27
   655  000028                     	ds	1
   656  000029                     Debounce@port:
   657                           	callstack 0
   658                           
   659                           ; 2 bytes @ 0x28
   660  000029                     	ds	1
   661  00002A                     Read_Level@adcTank2:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0x29
   665  00002A                     	ds	1
   666  00002B                     Debounce@pin:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x2A
   670  00002B                     	ds	2
   671  00002D                     Debounce@bt_press:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x2C
   675  00002D                     	ds	2
   676  00002F                     Debounce@filter:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x2E
   680  00002F                     	ds	2
   681  000031                     Debounce@ptr_f:
   682                           	callstack 0
   683                           
   684                           ; 2 bytes @ 0x30
   685  000031                     	ds	2
   686  000033                     
   687                           ; 1 bytes @ 0x32
   688  000033                     	ds	2
   689  000035                     
   690                           ; 1 bytes @ 0x34
   691 ;;
   692 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   693 ;;
   694 ;; *************** function _main *****************
   695 ;; Defined at:
   696 ;;		line 130 in file "main.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;		None
   699 ;; Auto vars:     Size  Location     Type
   700 ;;		None
   701 ;; Return value:  Size  Location     Type
   702 ;;                  1    wreg      void 
   703 ;; Registers used:
   704 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   710 ;;      Params:         0       0       0       0       0       0       0
   711 ;;      Locals:         0       0       0       0       0       0       0
   712 ;;      Temps:          0       0       0       0       0       0       0
   713 ;;      Totals:         0       0       0       0       0       0       0
   714 ;;Total ram usage:        0 bytes
   715 ;; Hardware stack levels required when called: 8
   716 ;; This function calls:
   717 ;;		_Automatic_Mode
   718 ;;		_Configure_Registers
   719 ;;		_Debounce
   720 ;;		_Initialize_Tanks
   721 ;;		_Lcd_Cmd
   722 ;;		_Lcd_Init
   723 ;;		_Manual_Mode
   724 ;;		_Read_Level
   725 ;;		_Refresh_Screen
   726 ;;		_adc_init
   727 ;; This function is called by:
   728 ;;		Startup code after reset
   729 ;; This function uses a non-reentrant model
   730 ;;
   731                           
   732                           	psect	text0
   733  001A06                     __ptext0:
   734                           	callstack 0
   735  001A06                     _main:
   736                           	callstack 23
   737  001A06                     
   738                           ;main.c: 131: Configure_Registers();
   739  001A06  ECA0  F010         	call	_Configure_Registers	;wreg free
   740                           
   741                           ;main.c: 132: adc_init();
   742  001A0A  EC8B  F011         	call	_adc_init	;wreg free
   743  001A0E                     
   744                           ;main.c: 133: Lcd_Init();
   745  001A0E  ECF0  F00A         	call	_Lcd_Init	;wreg free
   746  001A12                     
   747                           ;main.c: 134: Lcd_Cmd(12);
   748  001A12  0E0C               	movlw	12
   749  001A14  EC5A  F00A         	call	_Lcd_Cmd
   750                           
   751                           ;main.c: 135: Initialize_Tanks();
   752  001A18  EC4B  F010         	call	_Initialize_Tanks	;wreg free
   753  001A1C                     l171:
   754  001A1C  0004               	clrwdt		;# 
   755  001A1E                     
   756                           ;main.c: 141: Read_Level();
   757  001A1E  EC81  F00E         	call	_Read_Level	;wreg free
   758  001A22                     
   759                           ;main.c: 143: Debounce(PORTB, 0, &bt_operation_mode_press, &filter_bt_operation_mode, Ch
      +                          ange_Mode);
   760  001A22  CF81 F029          	movff	3969,Debounce@port	;volatile
   761  001A26  6A2A               	clrf	(Debounce@port+1)^0,c
   762  001A28  0E00               	movlw	0
   763  001A2A  6E2C               	movwf	(Debounce@pin+1)^0,c
   764  001A2C  0E00               	movlw	0
   765  001A2E  6E2B               	movwf	Debounce@pin^0,c
   766  001A30  0E59               	movlw	low _bt_operation_mode_press
   767  001A32  6E2D               	movwf	Debounce@bt_press^0,c
   768  001A34  0E00               	movlw	high _bt_operation_mode_press
   769  001A36  6E2E               	movwf	(Debounce@bt_press+1)^0,c
   770  001A38  0E62               	movlw	low _filter_bt_operation_mode
   771  001A3A  6E2F               	movwf	Debounce@filter^0,c
   772  001A3C  0E00               	movlw	high _filter_bt_operation_mode
   773  001A3E  6E30               	movwf	(Debounce@filter+1)^0,c
   774  001A40  0E42               	movlw	low _Change_Mode
   775  001A42  6E31               	movwf	Debounce@ptr_f^0,c
   776  001A44  0E1E               	movlw	high _Change_Mode
   777  001A46  6E32               	movwf	(Debounce@ptr_f+1)^0,c
   778  001A48  EC6B  F00D         	call	_Debounce	;wreg free
   779  001A4C                     
   780                           ;main.c: 145: if (operation == AUTOMATIC) Automatic_Mode(); else Manual_Mode();
   781  001A4C  5052               	movf	_operation^0,w,c	;volatile
   782  001A4E  A4D8               	btfss	status,2,c
   783  001A50  EF2C  F00D         	goto	u2751
   784  001A54  EF2E  F00D         	goto	u2750
   785  001A58                     u2751:
   786  001A58  EF32  F00D         	goto	l2832
   787  001A5C                     u2750:
   788  001A5C  EC78  F00B         	call	_Automatic_Mode	;wreg free
   789  001A60  EF34  F00D         	goto	l173
   790  001A64                     l2832:
   791  001A64  EC2B  F011         	call	_Manual_Mode	;wreg free
   792  001A68                     l173:
   793                           
   794                           ;main.c: 147: Debounce(PORTB, 3, &bt_min_lv1_incr_press, &filter_bt_min_lv1_incr, Min_Lv
      +                          1_Incr);
   795  001A68  CF81 F029          	movff	3969,Debounce@port	;volatile
   796  001A6C  6A2A               	clrf	(Debounce@port+1)^0,c
   797  001A6E  0E00               	movlw	0
   798  001A70  6E2C               	movwf	(Debounce@pin+1)^0,c
   799  001A72  0E03               	movlw	3
   800  001A74  6E2B               	movwf	Debounce@pin^0,c
   801  001A76  0E55               	movlw	low _bt_min_lv1_incr_press
   802  001A78  6E2D               	movwf	Debounce@bt_press^0,c
   803  001A7A  0E00               	movlw	high _bt_min_lv1_incr_press
   804  001A7C  6E2E               	movwf	(Debounce@bt_press+1)^0,c
   805  001A7E  0E5E               	movlw	low _filter_bt_min_lv1_incr
   806  001A80  6E2F               	movwf	Debounce@filter^0,c
   807  001A82  0E00               	movlw	high _filter_bt_min_lv1_incr
   808  001A84  6E30               	movwf	(Debounce@filter+1)^0,c
   809  001A86  0E4A               	movlw	low _Min_Lv1_Incr
   810  001A88  6E31               	movwf	Debounce@ptr_f^0,c
   811  001A8A  0E1C               	movlw	high _Min_Lv1_Incr
   812  001A8C  6E32               	movwf	(Debounce@ptr_f+1)^0,c
   813  001A8E  EC6B  F00D         	call	_Debounce	;wreg free
   814                           
   815                           ;main.c: 148: Debounce(PORTB, 4, &bt_min_lv2_incr_press, &filter_bt_min_lv2_incr, Min_Lv
      +                          2_Incr);
   816  001A92  CF81 F029          	movff	3969,Debounce@port	;volatile
   817  001A96  6A2A               	clrf	(Debounce@port+1)^0,c
   818  001A98  0E00               	movlw	0
   819  001A9A  6E2C               	movwf	(Debounce@pin+1)^0,c
   820  001A9C  0E04               	movlw	4
   821  001A9E  6E2B               	movwf	Debounce@pin^0,c
   822  001AA0  0E53               	movlw	low _bt_min_lv2_incr_press
   823  001AA2  6E2D               	movwf	Debounce@bt_press^0,c
   824  001AA4  0E00               	movlw	high _bt_min_lv2_incr_press
   825  001AA6  6E2E               	movwf	(Debounce@bt_press+1)^0,c
   826  001AA8  0E5C               	movlw	low _filter_bt_min_lv2_incr
   827  001AAA  6E2F               	movwf	Debounce@filter^0,c
   828  001AAC  0E00               	movlw	high _filter_bt_min_lv2_incr
   829  001AAE  6E30               	movwf	(Debounce@filter+1)^0,c
   830  001AB0  0E92               	movlw	low _Min_Lv2_Incr
   831  001AB2  6E31               	movwf	Debounce@ptr_f^0,c
   832  001AB4  0E1B               	movlw	high _Min_Lv2_Incr
   833  001AB6  6E32               	movwf	(Debounce@ptr_f+1)^0,c
   834  001AB8  EC6B  F00D         	call	_Debounce	;wreg free
   835  001ABC                     
   836                           ;main.c: 150: if (refresh_display) Refresh_Screen();
   837  001ABC  A064               	btfss	(_refresh_display/(0+8))^0,_refresh_display& (0+7),c	;volatile
   838  001ABE  EF63  F00D         	goto	u2761
   839  001AC2  EF65  F00D         	goto	u2760
   840  001AC6                     u2761:
   841  001AC6  EF0E  F00D         	goto	l171
   842  001ACA                     u2760:
   843  001ACA  EC68  F011         	call	_Refresh_Screen	;wreg free
   844  001ACE  EF0E  F00D         	goto	l171
   845  001AD2  EF07  F000         	goto	start
   846  001AD6                     __end_of_main:
   847                           	callstack 0
   848                           
   849 ;; *************** function _adc_init *****************
   850 ;; Defined at:
   851 ;;		line 30 in file "adc.c"
   852 ;; Parameters:    Size  Location     Type
   853 ;;		None
   854 ;; Auto vars:     Size  Location     Type
   855 ;;		None
   856 ;; Return value:  Size  Location     Type
   857 ;;                  1    wreg      void 
   858 ;; Registers used:
   859 ;;		wreg, status,2
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   865 ;;      Params:         0       0       0       0       0       0       0
   866 ;;      Locals:         0       0       0       0       0       0       0
   867 ;;      Temps:          0       0       0       0       0       0       0
   868 ;;      Totals:         0       0       0       0       0       0       0
   869 ;;Total ram usage:        0 bytes
   870 ;; Hardware stack levels used: 1
   871 ;; Hardware stack levels required when called: 1
   872 ;; This function calls:
   873 ;;		Nothing
   874 ;; This function is called by:
   875 ;;		_main
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           
   879                           	psect	text1
   880  002316                     __ptext1:
   881                           	callstack 0
   882  002316                     _adc_init:
   883                           	callstack 29
   884  002316                     
   885                           ;adc.c: 36: ADCON0=0x01;
   886  002316  0E01               	movlw	1
   887  002318  6EC2               	movwf	194,c	;volatile
   888                           
   889                           ;adc.c: 37: ADCON1=0x0B;
   890  00231A  0E0B               	movlw	11
   891  00231C  6EC1               	movwf	193,c	;volatile
   892                           
   893                           ;adc.c: 38: ADCON2=0x01;
   894  00231E  0E01               	movlw	1
   895  002320  6EC0               	movwf	192,c	;volatile
   896  002322  0012               	return		;funcret
   897  002324                     __end_of_adc_init:
   898                           	callstack 0
   899                           
   900 ;; *************** function _Read_Level *****************
   901 ;; Defined at:
   902 ;;		line 230 in file "main.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;		None
   905 ;; Auto vars:     Size  Location     Type
   906 ;;  adcTank2        2   41[COMRAM] int 
   907 ;;  adcTank1        2   39[COMRAM] int 
   908 ;; Return value:  Size  Location     Type
   909 ;;                  1    wreg      void 
   910 ;; Registers used:
   911 ;;		wreg, status,2, status,0, cstack
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   917 ;;      Params:         0       0       0       0       0       0       0
   918 ;;      Locals:         4       0       0       0       0       0       0
   919 ;;      Temps:          0       0       0       0       0       0       0
   920 ;;      Totals:         4       0       0       0       0       0       0
   921 ;;Total ram usage:        4 bytes
   922 ;; Hardware stack levels used: 1
   923 ;; Hardware stack levels required when called: 2
   924 ;; This function calls:
   925 ;;		___fldiv
   926 ;;		___xxtofl
   927 ;;		_adc_amostra
   928 ;; This function is called by:
   929 ;;		_main
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           	psect	text2
   934  001D02                     __ptext2:
   935                           	callstack 0
   936  001D02                     _Read_Level:
   937                           	callstack 28
   938  001D02                     
   939                           ;main.c: 232: int adcTank1 = adc_amostra(0);
   940  001D02  0E00               	movlw	0
   941  001D04  EC64  F00F         	call	_adc_amostra
   942  001D08  C001  F028         	movff	?_adc_amostra,Read_Level@adcTank1
   943  001D0C  C002  F029         	movff	?_adc_amostra+1,Read_Level@adcTank1+1
   944                           
   945                           ;main.c: 233: int adcTank2 = adc_amostra(1);
   946  001D10  0E01               	movlw	1
   947  001D12  EC64  F00F         	call	_adc_amostra
   948  001D16  C001  F02A         	movff	?_adc_amostra,Read_Level@adcTank2
   949  001D1A  C002  F02B         	movff	?_adc_amostra+1,Read_Level@adcTank2+1
   950                           
   951                           ;main.c: 235: tank1.level = (adcTank1 / 10.23);
   952  001D1E  C028  F001         	movff	Read_Level@adcTank1,___xxtofl@val
   953  001D22  C029  F002         	movff	Read_Level@adcTank1+1,___xxtofl@val+1
   954  001D26  0E00               	movlw	0
   955  001D28  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
   956  001D2A  0EFF               	movlw	-1
   957  001D2C  6E03               	movwf	(___xxtofl@val+2)^0,c
   958  001D2E  6E04               	movwf	(___xxtofl@val+3)^0,c
   959  001D30  0E01               	movlw	1
   960  001D32  EC72  F007         	call	___xxtofl
   961  001D36  C001  F00F         	movff	?___xxtofl,___fldiv@b
   962  001D3A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
   963  001D3E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
   964  001D42  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
   965  001D46  0E14               	movlw	20
   966  001D48  6E13               	movwf	___fldiv@a^0,c
   967  001D4A  0EAE               	movlw	174
   968  001D4C  6E14               	movwf	(___fldiv@a+1)^0,c
   969  001D4E  0E23               	movlw	35
   970  001D50  6E15               	movwf	(___fldiv@a+2)^0,c
   971  001D52  0E41               	movlw	65
   972  001D54  6E16               	movwf	(___fldiv@a+3)^0,c
   973  001D56  ECA5  F005         	call	___fldiv	;wreg free
   974  001D5A  C00F  F041         	movff	?___fldiv,_tank1	;volatile
   975  001D5E  C010  F042         	movff	?___fldiv+1,_tank1+1	;volatile
   976  001D62  C011  F043         	movff	?___fldiv+2,_tank1+2	;volatile
   977  001D66  C012  F044         	movff	?___fldiv+3,_tank1+3	;volatile
   978                           
   979                           ;main.c: 236: tank2.level = (adcTank2 / 10.23);
   980  001D6A  C02A  F001         	movff	Read_Level@adcTank2,___xxtofl@val
   981  001D6E  C02B  F002         	movff	Read_Level@adcTank2+1,___xxtofl@val+1
   982  001D72  0E00               	movlw	0
   983  001D74  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
   984  001D76  0EFF               	movlw	-1
   985  001D78  6E03               	movwf	(___xxtofl@val+2)^0,c
   986  001D7A  6E04               	movwf	(___xxtofl@val+3)^0,c
   987  001D7C  0E01               	movlw	1
   988  001D7E  EC72  F007         	call	___xxtofl
   989  001D82  C001  F00F         	movff	?___xxtofl,___fldiv@b
   990  001D86  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
   991  001D8A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
   992  001D8E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
   993  001D92  0E14               	movlw	20
   994  001D94  6E13               	movwf	___fldiv@a^0,c
   995  001D96  0EAE               	movlw	174
   996  001D98  6E14               	movwf	(___fldiv@a+1)^0,c
   997  001D9A  0E23               	movlw	35
   998  001D9C  6E15               	movwf	(___fldiv@a+2)^0,c
   999  001D9E  0E41               	movlw	65
  1000  001DA0  6E16               	movwf	(___fldiv@a+3)^0,c
  1001  001DA2  ECA5  F005         	call	___fldiv	;wreg free
  1002  001DA6  C00F  F035         	movff	?___fldiv,_tank2	;volatile
  1003  001DAA  C010  F036         	movff	?___fldiv+1,_tank2+1	;volatile
  1004  001DAE  C011  F037         	movff	?___fldiv+2,_tank2+2	;volatile
  1005  001DB2  C012  F038         	movff	?___fldiv+3,_tank2+3	;volatile
  1006  001DB6  0012               	return		;funcret
  1007  001DB8                     __end_of_Read_Level:
  1008                           	callstack 0
  1009                           
  1010 ;; *************** function _adc_amostra *****************
  1011 ;; Defined at:
  1012 ;;		line 44 in file "adc.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;  canal           1    wreg     unsigned char 
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;  canal           1    6[COMRAM] unsigned char 
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  2    0[COMRAM] unsigned int 
  1019 ;; Registers used:
  1020 ;;		wreg, status,2, status,0
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1026 ;;      Params:         2       0       0       0       0       0       0
  1027 ;;      Locals:         1       0       0       0       0       0       0
  1028 ;;      Temps:          4       0       0       0       0       0       0
  1029 ;;      Totals:         7       0       0       0       0       0       0
  1030 ;;Total ram usage:        7 bytes
  1031 ;; Hardware stack levels used: 1
  1032 ;; Hardware stack levels required when called: 1
  1033 ;; This function calls:
  1034 ;;		Nothing
  1035 ;; This function is called by:
  1036 ;;		_Read_Level
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           	psect	text3
  1041  001EC8                     __ptext3:
  1042                           	callstack 0
  1043  001EC8                     _adc_amostra:
  1044                           	callstack 28
  1045                           
  1046                           ;incstack = 0
  1047                           ;adc_amostra@canal stored from wreg
  1048  001EC8  6E07               	movwf	adc_amostra@canal^0,c
  1049  001ECA                     
  1050                           ;adc.c: 62: switch(canal)
  1051  001ECA  EF73  F00F         	goto	l2534
  1052  001ECE                     l2526:
  1053                           
  1054                           ;adc.c: 65: ADCON0=0x01;
  1055  001ECE  0E01               	movlw	1
  1056  001ED0  6EC2               	movwf	194,c	;volatile
  1057                           
  1058                           ;adc.c: 66: break;
  1059  001ED2  EF82  F00F         	goto	l282
  1060  001ED6                     l2528:
  1061                           
  1062                           ;adc.c: 68: ADCON0=0x09;
  1063  001ED6  0E09               	movlw	9
  1064  001ED8  6EC2               	movwf	194,c	;volatile
  1065                           
  1066                           ;adc.c: 69: break;
  1067  001EDA  EF82  F00F         	goto	l282
  1068  001EDE                     l2530:
  1069                           
  1070                           ;adc.c: 71: ADCON0=0x11;
  1071  001EDE  0E11               	movlw	17
  1072  001EE0  6EC2               	movwf	194,c	;volatile
  1073                           
  1074                           ;adc.c: 72: break;
  1075  001EE2  EF82  F00F         	goto	l282
  1076  001EE6                     l2534:
  1077  001EE6  5007               	movf	adc_amostra@canal^0,w,c
  1078                           
  1079                           ; Switch size 1, requested type "simple"
  1080                           ; Number of cases is 3, Range of values is 0 to 2
  1081                           ; switch strategies available:
  1082                           ; Name         Instructions Cycles
  1083                           ; simple_byte           10     6 (average)
  1084                           ;	Chosen strategy is simple_byte
  1085  001EE8  0A00               	xorlw	0	; case 0
  1086  001EEA  B4D8               	btfsc	status,2,c
  1087  001EEC  EF67  F00F         	goto	l2526
  1088  001EF0  0A01               	xorlw	1	; case 1
  1089  001EF2  B4D8               	btfsc	status,2,c
  1090  001EF4  EF6B  F00F         	goto	l2528
  1091  001EF8  0A03               	xorlw	3	; case 2
  1092  001EFA  B4D8               	btfsc	status,2,c
  1093  001EFC  EF6F  F00F         	goto	l2530
  1094  001F00  EF82  F00F         	goto	l282
  1095  001F04                     l282:
  1096                           
  1097                           ;adc.c: 77: ADCON0bits.GO=1;
  1098  001F04  82C2               	bsf	194,1,c	;volatile
  1099  001F06                     l285:
  1100  001F06  B2C2               	btfsc	194,1,c	;volatile
  1101  001F08  EF88  F00F         	goto	u2321
  1102  001F0C  EF8A  F00F         	goto	u2320
  1103  001F10                     u2321:
  1104  001F10  EF83  F00F         	goto	l285
  1105  001F14                     u2320:
  1106  001F14                     
  1107                           ;adc.c: 80: return ((((unsigned int)ADRESH)<<2)|(ADRESL>>6));
  1108  001F14  CFC3 F003          	movff	4035,??_adc_amostra	;volatile
  1109  001F18  0E06               	movlw	6
  1110  001F1A  6E04               	movwf	(??_adc_amostra+1)^0,c
  1111  001F1C                     u2335:
  1112  001F1C  90D8               	bcf	status,0,c
  1113  001F1E  3203               	rrcf	??_adc_amostra^0,f,c
  1114  001F20  2E04               	decfsz	(??_adc_amostra+1)^0,f,c
  1115  001F22  EF8E  F00F         	goto	u2335
  1116  001F26  5003               	movf	??_adc_amostra^0,w,c
  1117  001F28  CFC4 F005          	movff	4036,??_adc_amostra+2	;volatile
  1118  001F2C  6A06               	clrf	(??_adc_amostra+3)^0,c
  1119  001F2E  90D8               	bcf	status,0,c
  1120  001F30  3605               	rlcf	(??_adc_amostra+2)^0,f,c
  1121  001F32  3606               	rlcf	(??_adc_amostra+3)^0,f,c
  1122  001F34  90D8               	bcf	status,0,c
  1123  001F36  3605               	rlcf	(??_adc_amostra+2)^0,f,c
  1124  001F38  3606               	rlcf	(??_adc_amostra+3)^0,f,c
  1125  001F3A  1005               	iorwf	(??_adc_amostra+2)^0,w,c
  1126  001F3C  6E01               	movwf	?_adc_amostra^0,c
  1127  001F3E  5006               	movf	(??_adc_amostra+3)^0,w,c
  1128  001F40  6E02               	movwf	(?_adc_amostra+1)^0,c
  1129  001F42  0012               	return		;funcret
  1130  001F44                     __end_of_adc_amostra:
  1131                           	callstack 0
  1132                           
  1133 ;; *************** function ___xxtofl *****************
  1134 ;; Defined at:
  1135 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;  sign            1    wreg     unsigned char 
  1138 ;;  val             4    0[COMRAM] long 
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;  sign            1    8[COMRAM] unsigned char 
  1141 ;;  arg             4   10[COMRAM] unsigned long 
  1142 ;;  exp             1    9[COMRAM] unsigned char 
  1143 ;; Return value:  Size  Location     Type
  1144 ;;                  4    0[COMRAM] unsigned char 
  1145 ;; Registers used:
  1146 ;;		wreg, status,2, status,0
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1152 ;;      Params:         4       0       0       0       0       0       0
  1153 ;;      Locals:         6       0       0       0       0       0       0
  1154 ;;      Temps:          4       0       0       0       0       0       0
  1155 ;;      Totals:        14       0       0       0       0       0       0
  1156 ;;Total ram usage:       14 bytes
  1157 ;; Hardware stack levels used: 1
  1158 ;; Hardware stack levels required when called: 1
  1159 ;; This function calls:
  1160 ;;		Nothing
  1161 ;; This function is called by:
  1162 ;;		_Min_Lv1_Incr
  1163 ;;		_Min_Lv2_Incr
  1164 ;;		_Read_Level
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           	psect	text4
  1169  000EE4                     __ptext4:
  1170                           	callstack 0
  1171  000EE4                     ___xxtofl:
  1172                           	callstack 28
  1173                           
  1174                           ;incstack = 0
  1175                           ;___xxtofl@sign stored from wreg
  1176  000EE4  6E09               	movwf	___xxtofl@sign^0,c
  1177  000EE6  5009               	movf	___xxtofl@sign^0,w,c
  1178  000EE8  B4D8               	btfsc	status,2,c
  1179  000EEA  EF79  F007         	goto	u2571
  1180  000EEE  EF7B  F007         	goto	u2570
  1181  000EF2                     u2571:
  1182  000EF2  EF9D  F007         	goto	l962
  1183  000EF6                     u2570:
  1184  000EF6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  1185  000EF8  EF82  F007         	goto	u2580
  1186  000EFC  EF80  F007         	goto	u2581
  1187  000F00                     u2581:
  1188  000F00  EF9D  F007         	goto	l962
  1189  000F04                     u2580:
  1190  000F04  C001  F005         	movff	___xxtofl@val,??___xxtofl
  1191  000F08  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  1192  000F0C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  1193  000F10  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  1194  000F14  1E05               	comf	??___xxtofl^0,f,c
  1195  000F16  1E06               	comf	(??___xxtofl+1)^0,f,c
  1196  000F18  1E07               	comf	(??___xxtofl+2)^0,f,c
  1197  000F1A  1E08               	comf	(??___xxtofl+3)^0,f,c
  1198  000F1C  2A05               	incf	??___xxtofl^0,f,c
  1199  000F1E  0E00               	movlw	0
  1200  000F20  2206               	addwfc	(??___xxtofl+1)^0,f,c
  1201  000F22  2207               	addwfc	(??___xxtofl+2)^0,f,c
  1202  000F24  2208               	addwfc	(??___xxtofl+3)^0,f,c
  1203  000F26  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  1204  000F2A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  1205  000F2E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  1206  000F32  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  1207  000F36  EFA5  F007         	goto	l2684
  1208  000F3A                     l962:
  1209  000F3A  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  1210  000F3E  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1211  000F42  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1212  000F46  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1213  000F4A                     l2684:
  1214  000F4A  5001               	movf	___xxtofl@val^0,w,c
  1215  000F4C  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  1216  000F4E  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  1217  000F50  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  1218  000F52  A4D8               	btfss	status,2,c
  1219  000F54  EFAE  F007         	goto	u2591
  1220  000F58  EFB0  F007         	goto	u2590
  1221  000F5C                     u2591:
  1222  000F5C  EFBA  F007         	goto	l2690
  1223  000F60                     u2590:
  1224  000F60  0E00               	movlw	0
  1225  000F62  6E01               	movwf	?___xxtofl^0,c
  1226  000F64  0E00               	movlw	0
  1227  000F66  6E02               	movwf	(?___xxtofl+1)^0,c
  1228  000F68  0E00               	movlw	0
  1229  000F6A  6E03               	movwf	(?___xxtofl+2)^0,c
  1230  000F6C  0E00               	movlw	0
  1231  000F6E  6E04               	movwf	(?___xxtofl+3)^0,c
  1232  000F70  EF4B  F008         	goto	l965
  1233  000F74                     l2690:
  1234  000F74  0E96               	movlw	150
  1235  000F76  6E0A               	movwf	___xxtofl@exp^0,c
  1236  000F78  EFC4  F007         	goto	l2694
  1237  000F7C                     l2692:
  1238  000F7C  2A0A               	incf	___xxtofl@exp^0,f,c
  1239  000F7E  90D8               	bcf	status,0,c
  1240  000F80  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  1241  000F82  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  1242  000F84  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  1243  000F86  320B               	rrcf	___xxtofl@arg^0,f,c
  1244  000F88                     l2694:
  1245  000F88  0E00               	movlw	0
  1246  000F8A  140B               	andwf	___xxtofl@arg^0,w,c
  1247  000F8C  6E05               	movwf	??___xxtofl^0,c
  1248  000F8E  0E00               	movlw	0
  1249  000F90  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  1250  000F92  6E06               	movwf	(??___xxtofl+1)^0,c
  1251  000F94  0E00               	movlw	0
  1252  000F96  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  1253  000F98  6E07               	movwf	(??___xxtofl+2)^0,c
  1254  000F9A  0EFE               	movlw	254
  1255  000F9C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  1256  000F9E  6E08               	movwf	(??___xxtofl+3)^0,c
  1257  000FA0  5005               	movf	??___xxtofl^0,w,c
  1258  000FA2  1006               	iorwf	(??___xxtofl+1)^0,w,c
  1259  000FA4  1007               	iorwf	(??___xxtofl+2)^0,w,c
  1260  000FA6  1008               	iorwf	(??___xxtofl+3)^0,w,c
  1261  000FA8  A4D8               	btfss	status,2,c
  1262  000FAA  EFD9  F007         	goto	u2601
  1263  000FAE  EFDB  F007         	goto	u2600
  1264  000FB2                     u2601:
  1265  000FB2  EFBE  F007         	goto	l2692
  1266  000FB6                     u2600:
  1267  000FB6  EFE9  F007         	goto	l969
  1268  000FBA                     l2696:
  1269  000FBA  2A0A               	incf	___xxtofl@exp^0,f,c
  1270  000FBC  0E01               	movlw	1
  1271  000FBE  260B               	addwf	___xxtofl@arg^0,f,c
  1272  000FC0  0E00               	movlw	0
  1273  000FC2  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  1274  000FC4  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  1275  000FC6  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  1276  000FC8  90D8               	bcf	status,0,c
  1277  000FCA  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  1278  000FCC  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  1279  000FCE  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  1280  000FD0  320B               	rrcf	___xxtofl@arg^0,f,c
  1281  000FD2                     l969:
  1282  000FD2  0E00               	movlw	0
  1283  000FD4  140B               	andwf	___xxtofl@arg^0,w,c
  1284  000FD6  6E05               	movwf	??___xxtofl^0,c
  1285  000FD8  0E00               	movlw	0
  1286  000FDA  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  1287  000FDC  6E06               	movwf	(??___xxtofl+1)^0,c
  1288  000FDE  0E00               	movlw	0
  1289  000FE0  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  1290  000FE2  6E07               	movwf	(??___xxtofl+2)^0,c
  1291  000FE4  0EFF               	movlw	255
  1292  000FE6  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  1293  000FE8  6E08               	movwf	(??___xxtofl+3)^0,c
  1294  000FEA  5005               	movf	??___xxtofl^0,w,c
  1295  000FEC  1006               	iorwf	(??___xxtofl+1)^0,w,c
  1296  000FEE  1007               	iorwf	(??___xxtofl+2)^0,w,c
  1297  000FF0  1008               	iorwf	(??___xxtofl+3)^0,w,c
  1298  000FF2  A4D8               	btfss	status,2,c
  1299  000FF4  EFFE  F007         	goto	u2611
  1300  000FF8  EF00  F008         	goto	u2610
  1301  000FFC                     u2611:
  1302  000FFC  EFDD  F007         	goto	l2696
  1303  001000                     u2610:
  1304  001000  EF08  F008         	goto	l2704
  1305  001004                     l2702:
  1306  001004  060A               	decf	___xxtofl@exp^0,f,c
  1307  001006  90D8               	bcf	status,0,c
  1308  001008  360B               	rlcf	___xxtofl@arg^0,f,c
  1309  00100A  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  1310  00100C  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  1311  00100E  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  1312  001010                     l2704:
  1313  001010  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  1314  001012  EF0D  F008         	goto	u2621
  1315  001016  EF0F  F008         	goto	u2620
  1316  00101A                     u2621:
  1317  00101A  EF17  F008         	goto	l976
  1318  00101E                     u2620:
  1319  00101E  0E02               	movlw	2
  1320  001020  600A               	cpfslt	___xxtofl@exp^0,c
  1321  001022  EF15  F008         	goto	u2631
  1322  001026  EF17  F008         	goto	u2630
  1323  00102A                     u2631:
  1324  00102A  EF02  F008         	goto	l2702
  1325  00102E                     u2630:
  1326  00102E                     l976:
  1327  00102E  B00A               	btfsc	___xxtofl@exp^0,0,c
  1328  001030  EF1C  F008         	goto	u2641
  1329  001034  EF1E  F008         	goto	u2640
  1330  001038                     u2641:
  1331  001038  EF1F  F008         	goto	l2710
  1332  00103C                     u2640:
  1333  00103C  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  1334  00103E                     l2710:
  1335  00103E  90D8               	bcf	status,0,c
  1336  001040  320A               	rrcf	___xxtofl@exp^0,f,c
  1337  001042  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  1338  001046  6A06               	clrf	(??___xxtofl+1)^0,c
  1339  001048  6A07               	clrf	(??___xxtofl+2)^0,c
  1340  00104A  6A08               	clrf	(??___xxtofl+3)^0,c
  1341  00104C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  1342  001050  6A07               	clrf	(??___xxtofl+2)^0,c
  1343  001052  6A06               	clrf	(??___xxtofl+1)^0,c
  1344  001054  6A05               	clrf	??___xxtofl^0,c
  1345  001056  5005               	movf	??___xxtofl^0,w,c
  1346  001058  120B               	iorwf	___xxtofl@arg^0,f,c
  1347  00105A  5006               	movf	(??___xxtofl+1)^0,w,c
  1348  00105C  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  1349  00105E  5007               	movf	(??___xxtofl+2)^0,w,c
  1350  001060  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  1351  001062  5008               	movf	(??___xxtofl+3)^0,w,c
  1352  001064  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  1353  001066  5009               	movf	___xxtofl@sign^0,w,c
  1354  001068  B4D8               	btfsc	status,2,c
  1355  00106A  EF39  F008         	goto	u2651
  1356  00106E  EF3B  F008         	goto	u2650
  1357  001072                     u2651:
  1358  001072  EF43  F008         	goto	l2720
  1359  001076                     u2650:
  1360  001076  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  1361  001078  EF42  F008         	goto	u2660
  1362  00107C  EF40  F008         	goto	u2661
  1363  001080                     u2661:
  1364  001080  EF43  F008         	goto	l2720
  1365  001084                     u2660:
  1366  001084  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  1367  001086                     l2720:
  1368  001086  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  1369  00108A  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  1370  00108E  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  1371  001092  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  1372  001096                     l965:
  1373  001096  0012               	return		;funcret
  1374  001098                     __end_of___xxtofl:
  1375                           	callstack 0
  1376                           
  1377 ;; *************** function ___fldiv *****************
  1378 ;; Defined at:
  1379 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcdiv.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;  b               4   14[COMRAM] unsigned char 
  1382 ;;  a               4   18[COMRAM] unsigned char 
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;  grs             4   33[COMRAM] unsigned long 
  1385 ;;  rem             4   26[COMRAM] unsigned long 
  1386 ;;  new_exp         2   31[COMRAM] int 
  1387 ;;  aexp            1   38[COMRAM] unsigned char 
  1388 ;;  bexp            1   37[COMRAM] unsigned char 
  1389 ;;  sign            1   30[COMRAM] unsigned char 
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  4   14[COMRAM] unsigned char 
  1392 ;; Registers used:
  1393 ;;		wreg, status,2, status,0
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1399 ;;      Params:         8       0       0       0       0       0       0
  1400 ;;      Locals:        13       0       0       0       0       0       0
  1401 ;;      Temps:          4       0       0       0       0       0       0
  1402 ;;      Totals:        25       0       0       0       0       0       0
  1403 ;;Total ram usage:       25 bytes
  1404 ;; Hardware stack levels used: 1
  1405 ;; Hardware stack levels required when called: 1
  1406 ;; This function calls:
  1407 ;;		Nothing
  1408 ;; This function is called by:
  1409 ;;		_Read_Level
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           	psect	text5
  1414  000B4A                     __ptext5:
  1415                           	callstack 0
  1416  000B4A                     ___fldiv:
  1417                           	callstack 28
  1418  000B4A  5012               	movf	(___fldiv@b+3)^0,w,c
  1419  000B4C  0B80               	andlw	128
  1420  000B4E  6E1F               	movwf	___fldiv@sign^0,c
  1421  000B50  5012               	movf	(___fldiv@b+3)^0,w,c
  1422  000B52  2412               	addwf	(___fldiv@b+3)^0,w,c
  1423  000B54  6E26               	movwf	___fldiv@bexp^0,c
  1424  000B56  AE11               	btfss	(___fldiv@b+2)^0,7,c
  1425  000B58  EFB0  F005         	goto	u2341
  1426  000B5C  EFB2  F005         	goto	u2340
  1427  000B60                     u2341:
  1428  000B60  EFB3  F005         	goto	l2546
  1429  000B64                     u2340:
  1430  000B64  8026               	bsf	___fldiv@bexp^0,0,c
  1431  000B66                     l2546:
  1432  000B66  5026               	movf	___fldiv@bexp^0,w,c
  1433  000B68  B4D8               	btfsc	status,2,c
  1434  000B6A  EFB9  F005         	goto	u2351
  1435  000B6E  EFBB  F005         	goto	u2350
  1436  000B72                     u2351:
  1437  000B72  EFD0  F005         	goto	l2556
  1438  000B76                     u2350:
  1439  000B76  2826               	incf	___fldiv@bexp^0,w,c
  1440  000B78  A4D8               	btfss	status,2,c
  1441  000B7A  EFC1  F005         	goto	u2361
  1442  000B7E  EFC3  F005         	goto	u2360
  1443  000B82                     u2361:
  1444  000B82  EFCB  F005         	goto	l2552
  1445  000B86                     u2360:
  1446  000B86  0E00               	movlw	0
  1447  000B88  6E0F               	movwf	___fldiv@b^0,c
  1448  000B8A  0E00               	movlw	0
  1449  000B8C  6E10               	movwf	(___fldiv@b+1)^0,c
  1450  000B8E  0E00               	movlw	0
  1451  000B90  6E11               	movwf	(___fldiv@b+2)^0,c
  1452  000B92  0E00               	movlw	0
  1453  000B94  6E12               	movwf	(___fldiv@b+3)^0,c
  1454  000B96                     l2552:
  1455  000B96  8E11               	bsf	(___fldiv@b+2)^0,7,c
  1456  000B98  0E00               	movlw	0
  1457  000B9A  6E12               	movwf	(___fldiv@b+3)^0,c
  1458  000B9C  EFD8  F005         	goto	l2558
  1459  000BA0                     l2556:
  1460  000BA0  0E00               	movlw	0
  1461  000BA2  6E0F               	movwf	___fldiv@b^0,c
  1462  000BA4  0E00               	movlw	0
  1463  000BA6  6E10               	movwf	(___fldiv@b+1)^0,c
  1464  000BA8  0E00               	movlw	0
  1465  000BAA  6E11               	movwf	(___fldiv@b+2)^0,c
  1466  000BAC  0E00               	movlw	0
  1467  000BAE  6E12               	movwf	(___fldiv@b+3)^0,c
  1468  000BB0                     l2558:
  1469  000BB0  5016               	movf	(___fldiv@a+3)^0,w,c
  1470  000BB2  0B80               	andlw	128
  1471  000BB4  1A1F               	xorwf	___fldiv@sign^0,f,c
  1472  000BB6  5016               	movf	(___fldiv@a+3)^0,w,c
  1473  000BB8  2416               	addwf	(___fldiv@a+3)^0,w,c
  1474  000BBA  6E27               	movwf	___fldiv@aexp^0,c
  1475  000BBC  AE15               	btfss	(___fldiv@a+2)^0,7,c
  1476  000BBE  EFE3  F005         	goto	u2371
  1477  000BC2  EFE5  F005         	goto	u2370
  1478  000BC6                     u2371:
  1479  000BC6  EFE6  F005         	goto	l2566
  1480  000BCA                     u2370:
  1481  000BCA  8027               	bsf	___fldiv@aexp^0,0,c
  1482  000BCC                     l2566:
  1483  000BCC  5027               	movf	___fldiv@aexp^0,w,c
  1484  000BCE  B4D8               	btfsc	status,2,c
  1485  000BD0  EFEC  F005         	goto	u2381
  1486  000BD4  EFEE  F005         	goto	u2380
  1487  000BD8                     u2381:
  1488  000BD8  EF03  F006         	goto	l2576
  1489  000BDC                     u2380:
  1490  000BDC  2827               	incf	___fldiv@aexp^0,w,c
  1491  000BDE  A4D8               	btfss	status,2,c
  1492  000BE0  EFF4  F005         	goto	u2391
  1493  000BE4  EFF6  F005         	goto	u2390
  1494  000BE8                     u2391:
  1495  000BE8  EFFE  F005         	goto	l2572
  1496  000BEC                     u2390:
  1497  000BEC  0E00               	movlw	0
  1498  000BEE  6E13               	movwf	___fldiv@a^0,c
  1499  000BF0  0E00               	movlw	0
  1500  000BF2  6E14               	movwf	(___fldiv@a+1)^0,c
  1501  000BF4  0E00               	movlw	0
  1502  000BF6  6E15               	movwf	(___fldiv@a+2)^0,c
  1503  000BF8  0E00               	movlw	0
  1504  000BFA  6E16               	movwf	(___fldiv@a+3)^0,c
  1505  000BFC                     l2572:
  1506  000BFC  8E15               	bsf	(___fldiv@a+2)^0,7,c
  1507  000BFE  0E00               	movlw	0
  1508  000C00  6E16               	movwf	(___fldiv@a+3)^0,c
  1509  000C02  EF0B  F006         	goto	l2578
  1510  000C06                     l2576:
  1511  000C06  0E00               	movlw	0
  1512  000C08  6E13               	movwf	___fldiv@a^0,c
  1513  000C0A  0E00               	movlw	0
  1514  000C0C  6E14               	movwf	(___fldiv@a+1)^0,c
  1515  000C0E  0E00               	movlw	0
  1516  000C10  6E15               	movwf	(___fldiv@a+2)^0,c
  1517  000C12  0E00               	movlw	0
  1518  000C14  6E16               	movwf	(___fldiv@a+3)^0,c
  1519  000C16                     l2578:
  1520  000C16  5013               	movf	___fldiv@a^0,w,c
  1521  000C18  1014               	iorwf	(___fldiv@a+1)^0,w,c
  1522  000C1A  1015               	iorwf	(___fldiv@a+2)^0,w,c
  1523  000C1C  1016               	iorwf	(___fldiv@a+3)^0,w,c
  1524  000C1E  A4D8               	btfss	status,2,c
  1525  000C20  EF14  F006         	goto	u2401
  1526  000C24  EF16  F006         	goto	u2400
  1527  000C28                     u2401:
  1528  000C28  EF2E  F006         	goto	l2590
  1529  000C2C                     u2400:
  1530  000C2C  0E00               	movlw	0
  1531  000C2E  6E0F               	movwf	___fldiv@b^0,c
  1532  000C30  0E00               	movlw	0
  1533  000C32  6E10               	movwf	(___fldiv@b+1)^0,c
  1534  000C34  0E00               	movlw	0
  1535  000C36  6E11               	movwf	(___fldiv@b+2)^0,c
  1536  000C38  0E00               	movlw	0
  1537  000C3A  6E12               	movwf	(___fldiv@b+3)^0,c
  1538  000C3C  0E80               	movlw	128
  1539  000C3E  1211               	iorwf	(___fldiv@b+2)^0,f,c
  1540  000C40  0E7F               	movlw	127
  1541  000C42  1212               	iorwf	(___fldiv@b+3)^0,f,c
  1542  000C44                     l2584:
  1543  000C44  501F               	movf	___fldiv@sign^0,w,c
  1544  000C46  1212               	iorwf	(___fldiv@b+3)^0,f,c
  1545  000C48  C00F  F00F         	movff	___fldiv@b,?___fldiv
  1546  000C4C  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  1547  000C50  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  1548  000C54  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  1549  000C58  EF71  F007         	goto	l889
  1550  000C5C                     l2590:
  1551  000C5C  5026               	movf	___fldiv@bexp^0,w,c
  1552  000C5E  A4D8               	btfss	status,2,c
  1553  000C60  EF34  F006         	goto	u2411
  1554  000C64  EF36  F006         	goto	u2410
  1555  000C68                     u2411:
  1556  000C68  EF40  F006         	goto	l2598
  1557  000C6C                     u2410:
  1558  000C6C  0E00               	movlw	0
  1559  000C6E  6E0F               	movwf	?___fldiv^0,c
  1560  000C70  0E00               	movlw	0
  1561  000C72  6E10               	movwf	(?___fldiv+1)^0,c
  1562  000C74  0E00               	movlw	0
  1563  000C76  6E11               	movwf	(?___fldiv+2)^0,c
  1564  000C78  0E00               	movlw	0
  1565  000C7A  6E12               	movwf	(?___fldiv+3)^0,c
  1566  000C7C  EF71  F007         	goto	l889
  1567  000C80                     l2598:
  1568  000C80  5027               	movf	___fldiv@aexp^0,w,c
  1569  000C82  C026  F017         	movff	___fldiv@bexp,??___fldiv
  1570  000C86  6A18               	clrf	(??___fldiv+1)^0,c
  1571  000C88  5E17               	subwf	??___fldiv^0,f,c
  1572  000C8A  0E00               	movlw	0
  1573  000C8C  5A18               	subwfb	(??___fldiv+1)^0,f,c
  1574  000C8E  0E7F               	movlw	127
  1575  000C90  2417               	addwf	??___fldiv^0,w,c
  1576  000C92  6E20               	movwf	___fldiv@new_exp^0,c
  1577  000C94  0E00               	movlw	0
  1578  000C96  2018               	addwfc	(??___fldiv+1)^0,w,c
  1579  000C98  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  1580  000C9A  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  1581  000C9E  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  1582  000CA2  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  1583  000CA6  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  1584  000CAA  0E00               	movlw	0
  1585  000CAC  6E0F               	movwf	___fldiv@b^0,c
  1586  000CAE  0E00               	movlw	0
  1587  000CB0  6E10               	movwf	(___fldiv@b+1)^0,c
  1588  000CB2  0E00               	movlw	0
  1589  000CB4  6E11               	movwf	(___fldiv@b+2)^0,c
  1590  000CB6  0E00               	movlw	0
  1591  000CB8  6E12               	movwf	(___fldiv@b+3)^0,c
  1592  000CBA  0E00               	movlw	0
  1593  000CBC  6E22               	movwf	___fldiv@grs^0,c
  1594  000CBE  0E00               	movlw	0
  1595  000CC0  6E23               	movwf	(___fldiv@grs+1)^0,c
  1596  000CC2  0E00               	movlw	0
  1597  000CC4  6E24               	movwf	(___fldiv@grs+2)^0,c
  1598  000CC6  0E00               	movlw	0
  1599  000CC8  6E25               	movwf	(___fldiv@grs+3)^0,c
  1600  000CCA  0E00               	movlw	0
  1601  000CCC  6E27               	movwf	___fldiv@aexp^0,c
  1602  000CCE  EFA1  F006         	goto	l891
  1603  000CD2                     l2608:
  1604  000CD2  5027               	movf	___fldiv@aexp^0,w,c
  1605  000CD4  B4D8               	btfsc	status,2,c
  1606  000CD6  EF6F  F006         	goto	u2421
  1607  000CDA  EF71  F006         	goto	u2420
  1608  000CDE                     u2421:
  1609  000CDE  EF88  F006         	goto	l2616
  1610  000CE2                     u2420:
  1611  000CE2  90D8               	bcf	status,0,c
  1612  000CE4  361B               	rlcf	___fldiv@rem^0,f,c
  1613  000CE6  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  1614  000CE8  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  1615  000CEA  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  1616  000CEC  90D8               	bcf	status,0,c
  1617  000CEE  360F               	rlcf	___fldiv@b^0,f,c
  1618  000CF0  3610               	rlcf	(___fldiv@b+1)^0,f,c
  1619  000CF2  3611               	rlcf	(___fldiv@b+2)^0,f,c
  1620  000CF4  3612               	rlcf	(___fldiv@b+3)^0,f,c
  1621  000CF6  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  1622  000CF8  EF80  F006         	goto	u2431
  1623  000CFC  EF82  F006         	goto	u2430
  1624  000D00                     u2431:
  1625  000D00  EF83  F006         	goto	l894
  1626  000D04                     u2430:
  1627  000D04  800F               	bsf	___fldiv@b^0,0,c
  1628  000D06                     l894:
  1629  000D06  90D8               	bcf	status,0,c
  1630  000D08  3622               	rlcf	___fldiv@grs^0,f,c
  1631  000D0A  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  1632  000D0C  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  1633  000D0E  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  1634  000D10                     l2616:
  1635  000D10  5013               	movf	___fldiv@a^0,w,c
  1636  000D12  5C1B               	subwf	___fldiv@rem^0,w,c
  1637  000D14  5014               	movf	(___fldiv@a+1)^0,w,c
  1638  000D16  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  1639  000D18  5015               	movf	(___fldiv@a+2)^0,w,c
  1640  000D1A  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  1641  000D1C  5016               	movf	(___fldiv@a+3)^0,w,c
  1642  000D1E  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  1643  000D20  A0D8               	btfss	status,0,c
  1644  000D22  EF95  F006         	goto	u2441
  1645  000D26  EF97  F006         	goto	u2440
  1646  000D2A                     u2441:
  1647  000D2A  EFA0  F006         	goto	l2622
  1648  000D2E                     u2440:
  1649  000D2E  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  1650  000D30  5013               	movf	___fldiv@a^0,w,c
  1651  000D32  5E1B               	subwf	___fldiv@rem^0,f,c
  1652  000D34  5014               	movf	(___fldiv@a+1)^0,w,c
  1653  000D36  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  1654  000D38  5015               	movf	(___fldiv@a+2)^0,w,c
  1655  000D3A  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  1656  000D3C  5016               	movf	(___fldiv@a+3)^0,w,c
  1657  000D3E  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  1658  000D40                     l2622:
  1659  000D40  2A27               	incf	___fldiv@aexp^0,f,c
  1660  000D42                     l891:
  1661  000D42  0E19               	movlw	25
  1662  000D44  6427               	cpfsgt	___fldiv@aexp^0,c
  1663  000D46  EFA7  F006         	goto	u2451
  1664  000D4A  EFA9  F006         	goto	u2450
  1665  000D4E                     u2451:
  1666  000D4E  EF69  F006         	goto	l2608
  1667  000D52                     u2450:
  1668  000D52  501B               	movf	___fldiv@rem^0,w,c
  1669  000D54  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  1670  000D56  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  1671  000D58  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  1672  000D5A  B4D8               	btfsc	status,2,c
  1673  000D5C  EFB2  F006         	goto	u2461
  1674  000D60  EFB4  F006         	goto	u2460
  1675  000D64                     u2461:
  1676  000D64  EFCC  F006         	goto	l2634
  1677  000D68                     u2460:
  1678  000D68  8022               	bsf	___fldiv@grs^0,0,c
  1679  000D6A  EFCC  F006         	goto	l2634
  1680  000D6E                     l2628:
  1681  000D6E  90D8               	bcf	status,0,c
  1682  000D70  360F               	rlcf	___fldiv@b^0,f,c
  1683  000D72  3610               	rlcf	(___fldiv@b+1)^0,f,c
  1684  000D74  3611               	rlcf	(___fldiv@b+2)^0,f,c
  1685  000D76  3612               	rlcf	(___fldiv@b+3)^0,f,c
  1686  000D78  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  1687  000D7A  EFC1  F006         	goto	u2471
  1688  000D7E  EFC3  F006         	goto	u2470
  1689  000D82                     u2471:
  1690  000D82  EFC4  F006         	goto	l900
  1691  000D86                     u2470:
  1692  000D86  800F               	bsf	___fldiv@b^0,0,c
  1693  000D88                     l900:
  1694  000D88  90D8               	bcf	status,0,c
  1695  000D8A  3622               	rlcf	___fldiv@grs^0,f,c
  1696  000D8C  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  1697  000D8E  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  1698  000D90  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  1699  000D92  0620               	decf	___fldiv@new_exp^0,f,c
  1700  000D94  A0D8               	btfss	status,0,c
  1701  000D96  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  1702  000D98                     l2634:
  1703  000D98  AE11               	btfss	(___fldiv@b+2)^0,7,c
  1704  000D9A  EFD1  F006         	goto	u2481
  1705  000D9E  EFD3  F006         	goto	u2480
  1706  000DA2                     u2481:
  1707  000DA2  EFB7  F006         	goto	l2628
  1708  000DA6                     u2480:
  1709  000DA6  0E00               	movlw	0
  1710  000DA8  6E27               	movwf	___fldiv@aexp^0,c
  1711  000DAA  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  1712  000DAC  EFDA  F006         	goto	u2491
  1713  000DB0  EFDC  F006         	goto	u2490
  1714  000DB4                     u2491:
  1715  000DB4  EF00  F007         	goto	l902
  1716  000DB8                     u2490:
  1717  000DB8  0EFF               	movlw	255
  1718  000DBA  1422               	andwf	___fldiv@grs^0,w,c
  1719  000DBC  6E17               	movwf	??___fldiv^0,c
  1720  000DBE  0EFF               	movlw	255
  1721  000DC0  1423               	andwf	(___fldiv@grs+1)^0,w,c
  1722  000DC2  6E18               	movwf	(??___fldiv+1)^0,c
  1723  000DC4  0EFF               	movlw	255
  1724  000DC6  1424               	andwf	(___fldiv@grs+2)^0,w,c
  1725  000DC8  6E19               	movwf	(??___fldiv+2)^0,c
  1726  000DCA  0E7F               	movlw	127
  1727  000DCC  1425               	andwf	(___fldiv@grs+3)^0,w,c
  1728  000DCE  6E1A               	movwf	(??___fldiv+3)^0,c
  1729  000DD0  5017               	movf	??___fldiv^0,w,c
  1730  000DD2  1018               	iorwf	(??___fldiv+1)^0,w,c
  1731  000DD4  1019               	iorwf	(??___fldiv+2)^0,w,c
  1732  000DD6  101A               	iorwf	(??___fldiv+3)^0,w,c
  1733  000DD8  B4D8               	btfsc	status,2,c
  1734  000DDA  EFF1  F006         	goto	u2501
  1735  000DDE  EFF3  F006         	goto	u2500
  1736  000DE2                     u2501:
  1737  000DE2  EFF7  F006         	goto	l903
  1738  000DE6                     u2500:
  1739  000DE6                     l2642:
  1740  000DE6  0E01               	movlw	1
  1741  000DE8  6E27               	movwf	___fldiv@aexp^0,c
  1742  000DEA  EF00  F007         	goto	l902
  1743  000DEE                     l903:
  1744  000DEE  A00F               	btfss	___fldiv@b^0,0,c
  1745  000DF0  EFFC  F006         	goto	u2511
  1746  000DF4  EFFE  F006         	goto	u2510
  1747  000DF8                     u2511:
  1748  000DF8  EF00  F007         	goto	l902
  1749  000DFC                     u2510:
  1750  000DFC  EFF3  F006         	goto	l2642
  1751  000E00                     l902:
  1752  000E00  5027               	movf	___fldiv@aexp^0,w,c
  1753  000E02  B4D8               	btfsc	status,2,c
  1754  000E04  EF06  F007         	goto	u2521
  1755  000E08  EF08  F007         	goto	u2520
  1756  000E0C                     u2521:
  1757  000E0C  EF2C  F007         	goto	l2654
  1758  000E10                     u2520:
  1759  000E10  0E01               	movlw	1
  1760  000E12  260F               	addwf	___fldiv@b^0,f,c
  1761  000E14  0E00               	movlw	0
  1762  000E16  2210               	addwfc	(___fldiv@b+1)^0,f,c
  1763  000E18  2211               	addwfc	(___fldiv@b+2)^0,f,c
  1764  000E1A  2212               	addwfc	(___fldiv@b+3)^0,f,c
  1765  000E1C  A012               	btfss	(___fldiv@b+3)^0,0,c
  1766  000E1E  EF13  F007         	goto	u2531
  1767  000E22  EF15  F007         	goto	u2530
  1768  000E26                     u2531:
  1769  000E26  EF2C  F007         	goto	l2654
  1770  000E2A                     u2530:
  1771  000E2A  C00F  F017         	movff	___fldiv@b,??___fldiv
  1772  000E2E  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  1773  000E32  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  1774  000E36  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  1775  000E3A  341A               	rlcf	(??___fldiv+3)^0,w,c
  1776  000E3C  321A               	rrcf	(??___fldiv+3)^0,f,c
  1777  000E3E  3219               	rrcf	(??___fldiv+2)^0,f,c
  1778  000E40  3218               	rrcf	(??___fldiv+1)^0,f,c
  1779  000E42  3217               	rrcf	??___fldiv^0,f,c
  1780  000E44  C017  F00F         	movff	??___fldiv,___fldiv@b
  1781  000E48  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  1782  000E4C  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  1783  000E50  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  1784  000E54  4A20               	infsnz	___fldiv@new_exp^0,f,c
  1785  000E56  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  1786  000E58                     l2654:
  1787  000E58  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  1788  000E5A  EF37  F007         	goto	u2541
  1789  000E5E  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  1790  000E60  E108               	bnz	u2540
  1791  000E62  2820               	incf	___fldiv@new_exp^0,w,c
  1792  000E64  A0D8               	btfss	status,0,c
  1793  000E66  EF37  F007         	goto	u2541
  1794  000E6A  EF39  F007         	goto	u2540
  1795  000E6E                     u2541:
  1796  000E6E  EF44  F007         	goto	l2658
  1797  000E72                     u2540:
  1798  000E72  0E00               	movlw	0
  1799  000E74  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  1800  000E76  6820               	setf	___fldiv@new_exp^0,c
  1801  000E78  0E00               	movlw	0
  1802  000E7A  6E0F               	movwf	___fldiv@b^0,c
  1803  000E7C  0E00               	movlw	0
  1804  000E7E  6E10               	movwf	(___fldiv@b+1)^0,c
  1805  000E80  0E00               	movlw	0
  1806  000E82  6E11               	movwf	(___fldiv@b+2)^0,c
  1807  000E84  0E00               	movlw	0
  1808  000E86  6E12               	movwf	(___fldiv@b+3)^0,c
  1809  000E88                     l2658:
  1810  000E88  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  1811  000E8A  EF51  F007         	goto	u2550
  1812  000E8E  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  1813  000E90  E106               	bnz	u2551
  1814  000E92  0420               	decf	___fldiv@new_exp^0,w,c
  1815  000E94  B0D8               	btfsc	status,0,c
  1816  000E96  EF4F  F007         	goto	u2551
  1817  000E9A  EF51  F007         	goto	u2550
  1818  000E9E                     u2551:
  1819  000E9E  EF5F  F007         	goto	l2662
  1820  000EA2                     u2550:
  1821  000EA2  0E00               	movlw	0
  1822  000EA4  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  1823  000EA6  0E00               	movlw	0
  1824  000EA8  6E20               	movwf	___fldiv@new_exp^0,c
  1825  000EAA  0E00               	movlw	0
  1826  000EAC  6E0F               	movwf	___fldiv@b^0,c
  1827  000EAE  0E00               	movlw	0
  1828  000EB0  6E10               	movwf	(___fldiv@b+1)^0,c
  1829  000EB2  0E00               	movlw	0
  1830  000EB4  6E11               	movwf	(___fldiv@b+2)^0,c
  1831  000EB6  0E00               	movlw	0
  1832  000EB8  6E12               	movwf	(___fldiv@b+3)^0,c
  1833  000EBA  0E00               	movlw	0
  1834  000EBC  6E1F               	movwf	___fldiv@sign^0,c
  1835  000EBE                     l2662:
  1836  000EBE  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  1837  000EC2  A026               	btfss	___fldiv@bexp^0,0,c
  1838  000EC4  EF66  F007         	goto	u2561
  1839  000EC8  EF68  F007         	goto	u2560
  1840  000ECC                     u2561:
  1841  000ECC  EF6B  F007         	goto	l2668
  1842  000ED0                     u2560:
  1843  000ED0  8E11               	bsf	(___fldiv@b+2)^0,7,c
  1844  000ED2  EF6C  F007         	goto	l2670
  1845  000ED6                     l2668:
  1846  000ED6  9E11               	bcf	(___fldiv@b+2)^0,7,c
  1847  000ED8                     l2670:
  1848  000ED8  90D8               	bcf	status,0,c
  1849  000EDA  3026               	rrcf	___fldiv@bexp^0,w,c
  1850  000EDC  6E12               	movwf	(___fldiv@b+3)^0,c
  1851  000EDE  EF22  F006         	goto	l2584
  1852  000EE2                     l889:
  1853  000EE2  0012               	return		;funcret
  1854  000EE4                     __end_of___fldiv:
  1855                           	callstack 0
  1856                           
  1857 ;; *************** function _Manual_Mode *****************
  1858 ;; Defined at:
  1859 ;;		line 225 in file "main.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;		None
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;		None
  1864 ;; Return value:  Size  Location     Type
  1865 ;;                  1    wreg      void 
  1866 ;; Registers used:
  1867 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1873 ;;      Params:         0       0       0       0       0       0       0
  1874 ;;      Locals:         0       0       0       0       0       0       0
  1875 ;;      Temps:          0       0       0       0       0       0       0
  1876 ;;      Totals:         0       0       0       0       0       0       0
  1877 ;;Total ram usage:        0 bytes
  1878 ;; Hardware stack levels used: 1
  1879 ;; Hardware stack levels required when called: 7
  1880 ;; This function calls:
  1881 ;;		_Debounce
  1882 ;; This function is called by:
  1883 ;;		_main
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887                           	psect	text6
  1888  002256                     __ptext6:
  1889                           	callstack 0
  1890  002256                     _Manual_Mode:
  1891                           	callstack 23
  1892  002256                     
  1893                           ;main.c: 227: Debounce(PORTB, 1, &bt_on_off_pump_press, &filter_bt_on_off_pump, Tougle_P
      +                          ump);
  1894  002256  CF81 F029          	movff	3969,Debounce@port	;volatile
  1895  00225A  6A2A               	clrf	(Debounce@port+1)^0,c
  1896  00225C  0E00               	movlw	0
  1897  00225E  6E2C               	movwf	(Debounce@pin+1)^0,c
  1898  002260  0E01               	movlw	1
  1899  002262  6E2B               	movwf	Debounce@pin^0,c
  1900  002264  0E57               	movlw	low _bt_on_off_pump_press
  1901  002266  6E2D               	movwf	Debounce@bt_press^0,c
  1902  002268  0E00               	movlw	high _bt_on_off_pump_press
  1903  00226A  6E2E               	movwf	(Debounce@bt_press+1)^0,c
  1904  00226C  0E60               	movlw	low _filter_bt_on_off_pump
  1905  00226E  6E2F               	movwf	Debounce@filter^0,c
  1906  002270  0E00               	movlw	high _filter_bt_on_off_pump
  1907  002272  6E30               	movwf	(Debounce@filter+1)^0,c
  1908  002274  0EEE               	movlw	low _Tougle_Pump
  1909  002276  6E31               	movwf	Debounce@ptr_f^0,c
  1910  002278  0E22               	movlw	high _Tougle_Pump
  1911  00227A  6E32               	movwf	(Debounce@ptr_f+1)^0,c
  1912  00227C  EC6B  F00D         	call	_Debounce	;wreg free
  1913  002280  0012               	return		;funcret
  1914  002282                     __end_of_Manual_Mode:
  1915                           	callstack 0
  1916                           
  1917 ;; *************** function _Debounce *****************
  1918 ;; Defined at:
  1919 ;;		line 3 in file "debounce.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;  port            2   40[COMRAM] unsigned int 
  1922 ;;  pin             2   42[COMRAM] unsigned int 
  1923 ;;  bt_press        2   44[COMRAM] PTR unsigned int 
  1924 ;;		 -> bt_on_off_pump_press(2), bt_min_lv2_incr_press(2), bt_min_lv1_incr_press(2), bt_operation_mode_press(2), 
  1925 ;;  filter          2   46[COMRAM] PTR unsigned int 
  1926 ;;		 -> filter_bt_on_off_pump(2), filter_bt_min_lv2_incr(2), filter_bt_min_lv1_incr(2), filter_bt_operation_mode(2), 
  1927 ;;  ptr_f           2   48[COMRAM] PTR FTN()void 
  1928 ;;		 -> Tougle_Pump(1), Min_Lv2_Incr(1), Min_Lv1_Incr(1), Change_Mode(1), 
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;		None
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  1    wreg      void 
  1933 ;; Registers used:
  1934 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1940 ;;      Params:        10       0       0       0       0       0       0
  1941 ;;      Locals:         0       0       0       0       0       0       0
  1942 ;;      Temps:          2       0       0       0       0       0       0
  1943 ;;      Totals:        12       0       0       0       0       0       0
  1944 ;;Total ram usage:       12 bytes
  1945 ;; Hardware stack levels used: 1
  1946 ;; Hardware stack levels required when called: 6
  1947 ;; This function calls:
  1948 ;;		_Change_Mode
  1949 ;;		_CheckBit
  1950 ;;		_Min_Lv1_Incr
  1951 ;;		_Min_Lv2_Incr
  1952 ;;		_Tougle_Pump
  1953 ;; This function is called by:
  1954 ;;		_main
  1955 ;;		_Manual_Mode
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           	psect	text7
  1960  001AD6                     __ptext7:
  1961                           	callstack 0
  1962  001AD6                     _Debounce:
  1963                           	callstack 23
  1964  001AD6                     
  1965                           ;debounce.c: 5: if (!CheckBit(port, pin))
  1966  001AD6  C029  F001         	movff	Debounce@port,CheckBit@port
  1967  001ADA  C02A  F002         	movff	Debounce@port+1,CheckBit@port+1
  1968  001ADE  C02B  F003         	movff	Debounce@pin,CheckBit@pin
  1969  001AE2  C02C  F004         	movff	Debounce@pin+1,CheckBit@pin+1
  1970  001AE6  EC41  F011         	call	_CheckBit	;wreg free
  1971  001AEA  5001               	movf	?_CheckBit^0,w,c
  1972  001AEC  1002               	iorwf	(?_CheckBit+1)^0,w,c
  1973  001AEE  A4D8               	btfss	status,2,c
  1974  001AF0  EF7C  F00D         	goto	u2271
  1975  001AF4  EF7E  F00D         	goto	u2270
  1976  001AF8                     u2271:
  1977  001AF8  EFB8  F00D         	goto	l2520
  1978  001AFC                     u2270:
  1979  001AFC                     
  1980                           ;debounce.c: 6: {;debounce.c: 8: if (!(*bt_press))
  1981  001AFC  C02D  FFD9         	movff	Debounce@bt_press,fsr2l
  1982  001B00  C02E  FFDA         	movff	Debounce@bt_press+1,fsr2h
  1983  001B04  50DE               	movf	postinc2,w,c
  1984  001B06  10DE               	iorwf	postinc2,w,c
  1985  001B08  A4D8               	btfss	status,2,c
  1986  001B0A  EF89  F00D         	goto	u2281
  1987  001B0E  EF8B  F00D         	goto	u2280
  1988  001B12                     u2281:
  1989  001B12  EFC8  F00D         	goto	l262
  1990  001B16                     u2280:
  1991  001B16                     
  1992                           ;debounce.c: 9: {;debounce.c: 10: if (*filter > 0)
  1993  001B16  C02F  FFD9         	movff	Debounce@filter,fsr2l
  1994  001B1A  C030  FFDA         	movff	Debounce@filter+1,fsr2h
  1995  001B1E  50DE               	movf	postinc2,w,c
  1996  001B20  10DE               	iorwf	postinc2,w,c
  1997  001B22  B4D8               	btfsc	status,2,c
  1998  001B24  EF96  F00D         	goto	u2291
  1999  001B28  EF98  F00D         	goto	u2290
  2000  001B2C                     u2291:
  2001  001B2C  EFA1  F00D         	goto	l2516
  2002  001B30                     u2290:
  2003  001B30                     
  2004                           ;debounce.c: 11: {;debounce.c: 12: (*filter)--;
  2005  001B30  C02F  FFD9         	movff	Debounce@filter,fsr2l
  2006  001B34  C030  FFDA         	movff	Debounce@filter+1,fsr2h
  2007  001B38  06DE               	decf	postinc2,f,c
  2008  001B3A  0E00               	movlw	0
  2009  001B3C  5ADD               	subwfb	postdec2,f,c
  2010                           
  2011                           ;debounce.c: 13: }
  2012  001B3E  EFC8  F00D         	goto	l262
  2013  001B42                     l2516:
  2014                           
  2015                           ;debounce.c: 14: else;debounce.c: 15: {;debounce.c: 16: *bt_press = 1;
  2016  001B42  C02D  FFD9         	movff	Debounce@bt_press,fsr2l
  2017  001B46  C02E  FFDA         	movff	Debounce@bt_press+1,fsr2h
  2018  001B4A  0E01               	movlw	1
  2019  001B4C  6EDE               	movwf	postinc2,c
  2020  001B4E  0E00               	movlw	0
  2021  001B50  6EDD               	movwf	postdec2,c
  2022  001B52                     
  2023                           ;debounce.c: 17: ptr_f();
  2024  001B52  D802               	call	u2308
  2025  001B54  EFB6  F00D         	goto	u2309
  2026  001B58                     u2308:
  2027  001B58  0005               	push	
  2028  001B5A  6EFA               	movwf	pclath,c
  2029  001B5C  5031               	movf	Debounce@ptr_f^0,w,c
  2030  001B5E  6EFD               	movwf	tosl,c
  2031  001B60  5032               	movf	(Debounce@ptr_f+1)^0,w,c
  2032  001B62  6EFE               	movwf	tosh,c
  2033  001B64  50F8               	movf	tblptru,w,c
  2034  001B66  6EFF               	movwf	tosu,c
  2035  001B68  50FA               	movf	pclath,w,c
  2036  001B6A  0012               	return		;indir
  2037  001B6C                     u2309:
  2038  001B6C  EFC8  F00D         	goto	l262
  2039  001B70                     l2520:
  2040                           
  2041                           ;debounce.c: 21: else;debounce.c: 22: {;debounce.c: 23: *filter = 10;;
  2042  001B70  C02F  FFD9         	movff	Debounce@filter,fsr2l
  2043  001B74  C030  FFDA         	movff	Debounce@filter+1,fsr2h
  2044  001B78  0E0A               	movlw	10
  2045  001B7A  6EDE               	movwf	postinc2,c
  2046  001B7C  0E00               	movlw	0
  2047  001B7E  6EDD               	movwf	postdec2,c
  2048                           
  2049                           ;debounce.c: 24: *bt_press = 0;
  2050  001B80  C02D  FFD9         	movff	Debounce@bt_press,fsr2l
  2051  001B84  C02E  FFDA         	movff	Debounce@bt_press+1,fsr2h
  2052  001B88  0E00               	movlw	0
  2053  001B8A  6EDE               	movwf	postinc2,c
  2054  001B8C  0E00               	movlw	0
  2055  001B8E  6EDD               	movwf	postdec2,c
  2056  001B90                     l262:
  2057  001B90  0012               	return		;funcret
  2058  001B92                     __end_of_Debounce:
  2059                           	callstack 0
  2060                           
  2061 ;; *************** function _Min_Lv2_Incr *****************
  2062 ;; Defined at:
  2063 ;;		line 189 in file "main.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;		None
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;		None
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      void 
  2070 ;; Registers used:
  2071 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2077 ;;      Params:         0       0       0       0       0       0       0
  2078 ;;      Locals:         0       0       0       0       0       0       0
  2079 ;;      Temps:          0       0       0       0       0       0       0
  2080 ;;      Totals:         0       0       0       0       0       0       0
  2081 ;;Total ram usage:        0 bytes
  2082 ;; Hardware stack levels used: 1
  2083 ;; Hardware stack levels required when called: 5
  2084 ;; This function calls:
  2085 ;;		_Refresh_Screen
  2086 ;;		___fladd
  2087 ;;		___flge
  2088 ;; This function is called by:
  2089 ;;		_main
  2090 ;;		_Debounce
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           	psect	text8
  2095  001B92                     __ptext8:
  2096                           	callstack 0
  2097  001B92                     _Min_Lv2_Incr:
  2098                           	callstack 23
  2099  001B92                     
  2100                           ;main.c: 191: screen = MIN_LEVEL;
  2101  001B92  0E02               	movlw	2
  2102  001B94  6E51               	movwf	_screen^0,c	;volatile
  2103  001B96                     
  2104                           ;main.c: 192: Refresh_Screen();
  2105  001B96  EC68  F011         	call	_Refresh_Screen	;wreg free
  2106  001B9A                     
  2107                           ;main.c: 193: TMR0 = 131;
  2108  001B9A  0E00               	movlw	0
  2109  001B9C  6ED7               	movwf	215,c	;volatile
  2110  001B9E  0E83               	movlw	131
  2111  001BA0  6ED6               	movwf	214,c	;volatile
  2112  001BA2                     
  2113                           ;main.c: 194: count_screen = -250;
  2114  001BA2  0EFF               	movlw	255
  2115  001BA4  6E50               	movwf	(_count_screen+1)^0,c	;volatile
  2116  001BA6  0E06               	movlw	6
  2117  001BA8  6E4F               	movwf	_count_screen^0,c	;volatile
  2118  001BAA                     
  2119                           ;main.c: 196: if ((tank2.min_level + INCREMENT) <= 100) tank2.min_level += INCREMENT;
  2120  001BAA  0E00               	movlw	0
  2121  001BAC  6E11               	movwf	___flge@ff1^0,c
  2122  001BAE  0E00               	movlw	0
  2123  001BB0  6E12               	movwf	(___flge@ff1+1)^0,c
  2124  001BB2  0EC8               	movlw	200
  2125  001BB4  6E13               	movwf	(___flge@ff1+2)^0,c
  2126  001BB6  0E42               	movlw	66
  2127  001BB8  6E14               	movwf	(___flge@ff1+3)^0,c
  2128  001BBA  0E00               	movlw	0
  2129  001BBC  6E05               	movwf	___fladd@a^0,c
  2130  001BBE  0E00               	movlw	0
  2131  001BC0  6E06               	movwf	(___fladd@a+1)^0,c
  2132  001BC2  0E20               	movlw	32
  2133  001BC4  6E07               	movwf	(___fladd@a+2)^0,c
  2134  001BC6  0E41               	movlw	65
  2135  001BC8  6E08               	movwf	(___fladd@a+3)^0,c
  2136  001BCA  C039  F001         	movff	_tank2+4,___fladd@b	;volatile
  2137  001BCE  C03A  F002         	movff	_tank2+5,___fladd@b+1	;volatile
  2138  001BD2  C03B  F003         	movff	_tank2+6,___fladd@b+2	;volatile
  2139  001BD6  C03C  F004         	movff	_tank2+7,___fladd@b+3	;volatile
  2140  001BDA  EC45  F003         	call	___fladd	;wreg free
  2141  001BDE  C001  F015         	movff	?___fladd,___flge@ff2
  2142  001BE2  C002  F016         	movff	?___fladd+1,___flge@ff2+1
  2143  001BE6  C003  F017         	movff	?___fladd+2,___flge@ff2+2
  2144  001BEA  C004  F018         	movff	?___fladd+3,___flge@ff2+3
  2145  001BEE  EC81  F00C         	call	___flge	;wreg free
  2146  001BF2  A0D8               	btfss	status,0,c
  2147  001BF4  EFFE  F00D         	goto	u2221
  2148  001BF8  EF00  F00E         	goto	u2220
  2149  001BFC                     u2221:
  2150  001BFC  EF1C  F00E         	goto	l2490
  2151  001C00                     u2220:
  2152  001C00  C039  F001         	movff	_tank2+4,___fladd@b	;volatile
  2153  001C04  C03A  F002         	movff	_tank2+5,___fladd@b+1	;volatile
  2154  001C08  C03B  F003         	movff	_tank2+6,___fladd@b+2	;volatile
  2155  001C0C  C03C  F004         	movff	_tank2+7,___fladd@b+3	;volatile
  2156  001C10  0E00               	movlw	0
  2157  001C12  6E05               	movwf	___fladd@a^0,c
  2158  001C14  0E00               	movlw	0
  2159  001C16  6E06               	movwf	(___fladd@a+1)^0,c
  2160  001C18  0E20               	movlw	32
  2161  001C1A  6E07               	movwf	(___fladd@a+2)^0,c
  2162  001C1C  0E41               	movlw	65
  2163  001C1E  6E08               	movwf	(___fladd@a+3)^0,c
  2164  001C20  EC45  F003         	call	___fladd	;wreg free
  2165  001C24  C001  F039         	movff	?___fladd,_tank2+4	;volatile
  2166  001C28  C002  F03A         	movff	?___fladd+1,_tank2+5	;volatile
  2167  001C2C  C003  F03B         	movff	?___fladd+2,_tank2+6	;volatile
  2168  001C30  C004  F03C         	movff	?___fladd+3,_tank2+7	;volatile
  2169  001C34  EF24  F00E         	goto	l199
  2170  001C38                     l2490:
  2171                           
  2172                           ;main.c: 197: else tank2.min_level = 0;
  2173  001C38  0E00               	movlw	0
  2174  001C3A  6E39               	movwf	(_tank2+4)^0,c	;volatile
  2175  001C3C  0E00               	movlw	0
  2176  001C3E  6E3A               	movwf	(_tank2+5)^0,c	;volatile
  2177  001C40  0E00               	movlw	0
  2178  001C42  6E3B               	movwf	(_tank2+6)^0,c	;volatile
  2179  001C44  0E00               	movlw	0
  2180  001C46  6E3C               	movwf	(_tank2+7)^0,c	;volatile
  2181  001C48                     l199:
  2182  001C48  0012               	return		;funcret
  2183  001C4A                     __end_of_Min_Lv2_Incr:
  2184                           	callstack 0
  2185                           
  2186 ;; *************** function _Min_Lv1_Incr *****************
  2187 ;; Defined at:
  2188 ;;		line 178 in file "main.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;		None
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;		None
  2193 ;; Return value:  Size  Location     Type
  2194 ;;                  1    wreg      void 
  2195 ;; Registers used:
  2196 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2202 ;;      Params:         0       0       0       0       0       0       0
  2203 ;;      Locals:         0       0       0       0       0       0       0
  2204 ;;      Temps:          0       0       0       0       0       0       0
  2205 ;;      Totals:         0       0       0       0       0       0       0
  2206 ;;Total ram usage:        0 bytes
  2207 ;; Hardware stack levels used: 1
  2208 ;; Hardware stack levels required when called: 5
  2209 ;; This function calls:
  2210 ;;		_Refresh_Screen
  2211 ;;		___fladd
  2212 ;;		___flge
  2213 ;; This function is called by:
  2214 ;;		_main
  2215 ;;		_Debounce
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           	psect	text9
  2220  001C4A                     __ptext9:
  2221                           	callstack 0
  2222  001C4A                     _Min_Lv1_Incr:
  2223                           	callstack 23
  2224  001C4A                     
  2225                           ;main.c: 180: screen = MIN_LEVEL;
  2226  001C4A  0E02               	movlw	2
  2227  001C4C  6E51               	movwf	_screen^0,c	;volatile
  2228  001C4E                     
  2229                           ;main.c: 181: Refresh_Screen();
  2230  001C4E  EC68  F011         	call	_Refresh_Screen	;wreg free
  2231  001C52                     
  2232                           ;main.c: 182: TMR0 = 131;
  2233  001C52  0E00               	movlw	0
  2234  001C54  6ED7               	movwf	215,c	;volatile
  2235  001C56  0E83               	movlw	131
  2236  001C58  6ED6               	movwf	214,c	;volatile
  2237  001C5A                     
  2238                           ;main.c: 183: count_screen = -250;
  2239  001C5A  0EFF               	movlw	255
  2240  001C5C  6E50               	movwf	(_count_screen+1)^0,c	;volatile
  2241  001C5E  0E06               	movlw	6
  2242  001C60  6E4F               	movwf	_count_screen^0,c	;volatile
  2243  001C62                     
  2244                           ;main.c: 185: if ((tank1.min_level + INCREMENT) <= 100) tank1.min_level += INCREMENT;
  2245  001C62  0E00               	movlw	0
  2246  001C64  6E11               	movwf	___flge@ff1^0,c
  2247  001C66  0E00               	movlw	0
  2248  001C68  6E12               	movwf	(___flge@ff1+1)^0,c
  2249  001C6A  0EC8               	movlw	200
  2250  001C6C  6E13               	movwf	(___flge@ff1+2)^0,c
  2251  001C6E  0E42               	movlw	66
  2252  001C70  6E14               	movwf	(___flge@ff1+3)^0,c
  2253  001C72  0E00               	movlw	0
  2254  001C74  6E05               	movwf	___fladd@a^0,c
  2255  001C76  0E00               	movlw	0
  2256  001C78  6E06               	movwf	(___fladd@a+1)^0,c
  2257  001C7A  0E20               	movlw	32
  2258  001C7C  6E07               	movwf	(___fladd@a+2)^0,c
  2259  001C7E  0E41               	movlw	65
  2260  001C80  6E08               	movwf	(___fladd@a+3)^0,c
  2261  001C82  C045  F001         	movff	_tank1+4,___fladd@b	;volatile
  2262  001C86  C046  F002         	movff	_tank1+5,___fladd@b+1	;volatile
  2263  001C8A  C047  F003         	movff	_tank1+6,___fladd@b+2	;volatile
  2264  001C8E  C048  F004         	movff	_tank1+7,___fladd@b+3	;volatile
  2265  001C92  EC45  F003         	call	___fladd	;wreg free
  2266  001C96  C001  F015         	movff	?___fladd,___flge@ff2
  2267  001C9A  C002  F016         	movff	?___fladd+1,___flge@ff2+1
  2268  001C9E  C003  F017         	movff	?___fladd+2,___flge@ff2+2
  2269  001CA2  C004  F018         	movff	?___fladd+3,___flge@ff2+3
  2270  001CA6  EC81  F00C         	call	___flge	;wreg free
  2271  001CAA  A0D8               	btfss	status,0,c
  2272  001CAC  EF5A  F00E         	goto	u2211
  2273  001CB0  EF5C  F00E         	goto	u2210
  2274  001CB4                     u2211:
  2275  001CB4  EF78  F00E         	goto	l2476
  2276  001CB8                     u2210:
  2277  001CB8  C045  F001         	movff	_tank1+4,___fladd@b	;volatile
  2278  001CBC  C046  F002         	movff	_tank1+5,___fladd@b+1	;volatile
  2279  001CC0  C047  F003         	movff	_tank1+6,___fladd@b+2	;volatile
  2280  001CC4  C048  F004         	movff	_tank1+7,___fladd@b+3	;volatile
  2281  001CC8  0E00               	movlw	0
  2282  001CCA  6E05               	movwf	___fladd@a^0,c
  2283  001CCC  0E00               	movlw	0
  2284  001CCE  6E06               	movwf	(___fladd@a+1)^0,c
  2285  001CD0  0E20               	movlw	32
  2286  001CD2  6E07               	movwf	(___fladd@a+2)^0,c
  2287  001CD4  0E41               	movlw	65
  2288  001CD6  6E08               	movwf	(___fladd@a+3)^0,c
  2289  001CD8  EC45  F003         	call	___fladd	;wreg free
  2290  001CDC  C001  F045         	movff	?___fladd,_tank1+4	;volatile
  2291  001CE0  C002  F046         	movff	?___fladd+1,_tank1+5	;volatile
  2292  001CE4  C003  F047         	movff	?___fladd+2,_tank1+6	;volatile
  2293  001CE8  C004  F048         	movff	?___fladd+3,_tank1+7	;volatile
  2294  001CEC  EF80  F00E         	goto	l194
  2295  001CF0                     l2476:
  2296                           
  2297                           ;main.c: 186: else tank1.min_level = 0;
  2298  001CF0  0E00               	movlw	0
  2299  001CF2  6E45               	movwf	(_tank1+4)^0,c	;volatile
  2300  001CF4  0E00               	movlw	0
  2301  001CF6  6E46               	movwf	(_tank1+5)^0,c	;volatile
  2302  001CF8  0E00               	movlw	0
  2303  001CFA  6E47               	movwf	(_tank1+6)^0,c	;volatile
  2304  001CFC  0E00               	movlw	0
  2305  001CFE  6E48               	movwf	(_tank1+7)^0,c	;volatile
  2306  001D00                     l194:
  2307  001D00  0012               	return		;funcret
  2308  001D02                     __end_of_Min_Lv1_Incr:
  2309                           	callstack 0
  2310                           
  2311 ;; *************** function _Change_Mode *****************
  2312 ;; Defined at:
  2313 ;;		line 205 in file "main.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;		None
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;		None
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  1    wreg      void 
  2320 ;; Registers used:
  2321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2327 ;;      Params:         0       0       0       0       0       0       0
  2328 ;;      Locals:         0       0       0       0       0       0       0
  2329 ;;      Temps:          1       0       0       0       0       0       0
  2330 ;;      Totals:         1       0       0       0       0       0       0
  2331 ;;Total ram usage:        1 bytes
  2332 ;; Hardware stack levels used: 1
  2333 ;; Hardware stack levels required when called: 2
  2334 ;; This function calls:
  2335 ;;		_CheckBit
  2336 ;;		_ClearBit
  2337 ;; This function is called by:
  2338 ;;		_main
  2339 ;;		_Debounce
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343                           	psect	text10
  2344  001E42                     __ptext10:
  2345                           	callstack 0
  2346  001E42                     _Change_Mode:
  2347                           	callstack 26
  2348  001E42                     
  2349                           ;main.c: 207: LATDbits.LATD0 = ~LATDbits.LATD0;
  2350  001E42  B08C               	btfsc	140,0,c	;volatile
  2351  001E44  EF26  F00F         	goto	u2231
  2352  001E48  EF29  F00F         	goto	u2230
  2353  001E4C                     u2231:
  2354  001E4C  0E01               	movlw	1
  2355  001E4E  EF2A  F00F         	goto	u2236
  2356  001E52                     u2230:
  2357  001E52  0E00               	movlw	0
  2358  001E54                     u2236:
  2359  001E54  0AFF               	xorlw	255
  2360  001E56  6E0A               	movwf	??_Change_Mode^0,c
  2361  001E58  508C               	movf	140,w,c	;volatile
  2362  001E5A  180A               	xorwf	??_Change_Mode^0,w,c
  2363  001E5C  0BFE               	andlw	-2
  2364  001E5E  180A               	xorwf	??_Change_Mode^0,w,c
  2365  001E60  6E8C               	movwf	140,c	;volatile
  2366  001E62                     
  2367                           ;main.c: 208: if (operation == AUTOMATIC) operation = MANUAL; else operation = AUTOMATIC
      +                          ;
  2368  001E62  5052               	movf	_operation^0,w,c	;volatile
  2369  001E64  A4D8               	btfss	status,2,c
  2370  001E66  EF37  F00F         	goto	u2241
  2371  001E6A  EF39  F00F         	goto	u2240
  2372  001E6E                     u2241:
  2373  001E6E  EF3D  F00F         	goto	l2500
  2374  001E72                     u2240:
  2375  001E72  0E01               	movlw	1
  2376  001E74  6E52               	movwf	_operation^0,c	;volatile
  2377  001E76  EF3F  F00F         	goto	l2502
  2378  001E7A                     l2500:
  2379  001E7A  0E00               	movlw	0
  2380  001E7C  6E52               	movwf	_operation^0,c	;volatile
  2381  001E7E                     l2502:
  2382                           
  2383                           ;main.c: 209: if ((operation == MANUAL) && (CheckBit(PORTC, 0) == 1)) ClearBit(&LATC, 0)
      +                          ;
  2384  001E7E  0452               	decf	_operation^0,w,c	;volatile
  2385  001E80  A4D8               	btfss	status,2,c
  2386  001E82  EF45  F00F         	goto	u2251
  2387  001E86  EF47  F00F         	goto	u2250
  2388  001E8A                     u2251:
  2389  001E8A  EF63  F00F         	goto	l208
  2390  001E8E                     u2250:
  2391  001E8E  CF82 F001          	movff	3970,CheckBit@port	;volatile
  2392  001E92  6A02               	clrf	(CheckBit@port+1)^0,c
  2393  001E94  0E00               	movlw	0
  2394  001E96  6E04               	movwf	(CheckBit@pin+1)^0,c
  2395  001E98  0E00               	movlw	0
  2396  001E9A  6E03               	movwf	CheckBit@pin^0,c
  2397  001E9C  EC41  F011         	call	_CheckBit	;wreg free
  2398  001EA0  0401               	decf	?_CheckBit^0,w,c
  2399  001EA2  1002               	iorwf	(?_CheckBit+1)^0,w,c
  2400  001EA4  A4D8               	btfss	status,2,c
  2401  001EA6  EF57  F00F         	goto	u2261
  2402  001EAA  EF59  F00F         	goto	u2260
  2403  001EAE                     u2261:
  2404  001EAE  EF63  F00F         	goto	l208
  2405  001EB2                     u2260:
  2406  001EB2  0E8B               	movlw	139
  2407  001EB4  6E01               	movwf	ClearBit@port^0,c
  2408  001EB6  0E0F               	movlw	15
  2409  001EB8  6E02               	movwf	(ClearBit@port+1)^0,c
  2410  001EBA  0E00               	movlw	0
  2411  001EBC  6E04               	movwf	(ClearBit@pin+1)^0,c
  2412  001EBE  0E00               	movlw	0
  2413  001EC0  6E03               	movwf	ClearBit@pin^0,c
  2414  001EC2  ECDF  F010         	call	_ClearBit	;wreg free
  2415  001EC6                     l208:
  2416  001EC6  0012               	return		;funcret
  2417  001EC8                     __end_of_Change_Mode:
  2418                           	callstack 0
  2419                           
  2420 ;; *************** function _Tougle_Pump *****************
  2421 ;; Defined at:
  2422 ;;		line 200 in file "main.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;		None
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;		None
  2427 ;; Return value:  Size  Location     Type
  2428 ;;                  1    wreg      void 
  2429 ;; Registers used:
  2430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2431 ;; Tracked objects:
  2432 ;;		On entry : 0/0
  2433 ;;		On exit  : 0/0
  2434 ;;		Unchanged: 0/0
  2435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2436 ;;      Params:         0       0       0       0       0       0       0
  2437 ;;      Locals:         0       0       0       0       0       0       0
  2438 ;;      Temps:          0       0       0       0       0       0       0
  2439 ;;      Totals:         0       0       0       0       0       0       0
  2440 ;;Total ram usage:        0 bytes
  2441 ;; Hardware stack levels used: 1
  2442 ;; Hardware stack levels required when called: 2
  2443 ;; This function calls:
  2444 ;;		_TougleBit
  2445 ;; This function is called by:
  2446 ;;		_Manual_Mode
  2447 ;;		_Debounce
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           	psect	text11
  2452  0022EE                     __ptext11:
  2453                           	callstack 0
  2454  0022EE                     _Tougle_Pump:
  2455                           	callstack 26
  2456  0022EE                     
  2457                           ;main.c: 202: TougleBit(&LATC, 0);
  2458  0022EE  0E8B               	movlw	139
  2459  0022F0  6E01               	movwf	TougleBit@port^0,c
  2460  0022F2  0E0F               	movlw	15
  2461  0022F4  6E02               	movwf	(TougleBit@port+1)^0,c
  2462  0022F6  0E00               	movlw	0
  2463  0022F8  6E04               	movwf	(TougleBit@pin+1)^0,c
  2464  0022FA  0E00               	movlw	0
  2465  0022FC  6E03               	movwf	TougleBit@pin^0,c
  2466  0022FE  ECFB  F010         	call	_TougleBit	;wreg free
  2467  002302  0012               	return		;funcret
  2468  002304                     __end_of_Tougle_Pump:
  2469                           	callstack 0
  2470                           
  2471 ;; *************** function _TougleBit *****************
  2472 ;; Defined at:
  2473 ;;		line 13 in file "regoperations.c"
  2474 ;; Parameters:    Size  Location     Type
  2475 ;;  port            2    0[COMRAM] PTR unsigned int 
  2476 ;;		 -> LATC(1), 
  2477 ;;  pin             2    2[COMRAM] unsigned int 
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;		None
  2480 ;; Return value:  Size  Location     Type
  2481 ;;                  1    wreg      void 
  2482 ;; Registers used:
  2483 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2484 ;; Tracked objects:
  2485 ;;		On entry : 0/0
  2486 ;;		On exit  : 0/0
  2487 ;;		Unchanged: 0/0
  2488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2489 ;;      Params:         4       0       0       0       0       0       0
  2490 ;;      Locals:         0       0       0       0       0       0       0
  2491 ;;      Temps:          3       0       0       0       0       0       0
  2492 ;;      Totals:         7       0       0       0       0       0       0
  2493 ;;Total ram usage:        7 bytes
  2494 ;; Hardware stack levels used: 1
  2495 ;; Hardware stack levels required when called: 1
  2496 ;; This function calls:
  2497 ;;		Nothing
  2498 ;; This function is called by:
  2499 ;;		_Tougle_Pump
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           	psect	text12
  2504  0021F6                     __ptext12:
  2505                           	callstack 0
  2506  0021F6                     _TougleBit:
  2507                           	callstack 26
  2508  0021F6                     
  2509                           ;regoperations.c: 15: (*port) ^= (1UL << pin);
  2510  0021F6  C003  F005         	movff	TougleBit@pin,??_TougleBit
  2511  0021FA  0E01               	movlw	1
  2512  0021FC  6E06               	movwf	(??_TougleBit+1)^0,c
  2513  0021FE  0E00               	movlw	0
  2514  002200  6E07               	movwf	(??_TougleBit+2)^0,c
  2515  002202  2A05               	incf	??_TougleBit^0,f,c
  2516  002204  EF07  F011         	goto	u1744
  2517  002208                     u1745:
  2518  002208  90D8               	bcf	status,0,c
  2519  00220A  3606               	rlcf	(??_TougleBit+1)^0,f,c
  2520  00220C  3607               	rlcf	(??_TougleBit+2)^0,f,c
  2521  00220E                     u1744:
  2522  00220E  2E05               	decfsz	??_TougleBit^0,f,c
  2523  002210  EF04  F011         	goto	u1745
  2524  002214  C001  FFD9         	movff	TougleBit@port,fsr2l
  2525  002218  C002  FFDA         	movff	TougleBit@port+1,fsr2h
  2526  00221C  5006               	movf	(??_TougleBit+1)^0,w,c
  2527  00221E  1ADE               	xorwf	postinc2,f,c
  2528  002220  5007               	movf	(??_TougleBit+2)^0,w,c
  2529  002222  1ADD               	xorwf	postdec2,f,c
  2530  002224  0012               	return		;funcret
  2531  002226                     __end_of_TougleBit:
  2532                           	callstack 0
  2533                           
  2534 ;; *************** function ___fladd *****************
  2535 ;; Defined at:
  2536 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;  b               4    0[COMRAM] void 
  2539 ;;  a               4    4[COMRAM] void 
  2540 ;; Auto vars:     Size  Location     Type
  2541 ;;  grs             1   15[COMRAM] unsigned char 
  2542 ;;  bexp            1   14[COMRAM] unsigned char 
  2543 ;;  aexp            1   13[COMRAM] unsigned char 
  2544 ;;  signs           1   12[COMRAM] unsigned char 
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  4    0[COMRAM] unsigned char 
  2547 ;; Registers used:
  2548 ;;		wreg, status,2, status,0
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2554 ;;      Params:         8       0       0       0       0       0       0
  2555 ;;      Locals:         4       0       0       0       0       0       0
  2556 ;;      Temps:          4       0       0       0       0       0       0
  2557 ;;      Totals:        16       0       0       0       0       0       0
  2558 ;;Total ram usage:       16 bytes
  2559 ;; Hardware stack levels used: 1
  2560 ;; Hardware stack levels required when called: 1
  2561 ;; This function calls:
  2562 ;;		Nothing
  2563 ;; This function is called by:
  2564 ;;		_Min_Lv1_Incr
  2565 ;;		_Min_Lv2_Incr
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           	psect	text13
  2570  00068A                     __ptext13:
  2571                           	callstack 0
  2572  00068A                     ___fladd:
  2573                           	callstack 26
  2574  00068A  5004               	movf	(___fladd@b+3)^0,w,c
  2575  00068C  0B80               	andlw	128
  2576  00068E  6E0D               	movwf	___fladd@signs^0,c
  2577  000690  5004               	movf	(___fladd@b+3)^0,w,c
  2578  000692  2404               	addwf	(___fladd@b+3)^0,w,c
  2579  000694  6E0F               	movwf	___fladd@bexp^0,c
  2580  000696  AE03               	btfss	(___fladd@b+2)^0,7,c
  2581  000698  EF50  F003         	goto	u1771
  2582  00069C  EF52  F003         	goto	u1770
  2583  0006A0                     u1771:
  2584  0006A0  EF53  F003         	goto	l2246
  2585  0006A4                     u1770:
  2586  0006A4  800F               	bsf	___fladd@bexp^0,0,c
  2587  0006A6                     l2246:
  2588  0006A6  500F               	movf	___fladd@bexp^0,w,c
  2589  0006A8  B4D8               	btfsc	status,2,c
  2590  0006AA  EF59  F003         	goto	u1781
  2591  0006AE  EF5B  F003         	goto	u1780
  2592  0006B2                     u1781:
  2593  0006B2  EF70  F003         	goto	l2256
  2594  0006B6                     u1780:
  2595  0006B6  280F               	incf	___fladd@bexp^0,w,c
  2596  0006B8  A4D8               	btfss	status,2,c
  2597  0006BA  EF61  F003         	goto	u1791
  2598  0006BE  EF63  F003         	goto	u1790
  2599  0006C2                     u1791:
  2600  0006C2  EF6B  F003         	goto	l2252
  2601  0006C6                     u1790:
  2602  0006C6  0E00               	movlw	0
  2603  0006C8  6E01               	movwf	___fladd@b^0,c
  2604  0006CA  0E00               	movlw	0
  2605  0006CC  6E02               	movwf	(___fladd@b+1)^0,c
  2606  0006CE  0E00               	movlw	0
  2607  0006D0  6E03               	movwf	(___fladd@b+2)^0,c
  2608  0006D2  0E00               	movlw	0
  2609  0006D4  6E04               	movwf	(___fladd@b+3)^0,c
  2610  0006D6                     l2252:
  2611  0006D6  8E03               	bsf	(___fladd@b+2)^0,7,c
  2612  0006D8  0E00               	movlw	0
  2613  0006DA  6E04               	movwf	(___fladd@b+3)^0,c
  2614  0006DC  EF78  F003         	goto	l2258
  2615  0006E0                     l2256:
  2616  0006E0  0E00               	movlw	0
  2617  0006E2  6E01               	movwf	___fladd@b^0,c
  2618  0006E4  0E00               	movlw	0
  2619  0006E6  6E02               	movwf	(___fladd@b+1)^0,c
  2620  0006E8  0E00               	movlw	0
  2621  0006EA  6E03               	movwf	(___fladd@b+2)^0,c
  2622  0006EC  0E00               	movlw	0
  2623  0006EE  6E04               	movwf	(___fladd@b+3)^0,c
  2624  0006F0                     l2258:
  2625  0006F0  5008               	movf	(___fladd@a+3)^0,w,c
  2626  0006F2  0B80               	andlw	128
  2627  0006F4  6E0E               	movwf	___fladd@aexp^0,c
  2628  0006F6  500D               	movf	___fladd@signs^0,w,c
  2629  0006F8  180E               	xorwf	___fladd@aexp^0,w,c
  2630  0006FA  B4D8               	btfsc	status,2,c
  2631  0006FC  EF82  F003         	goto	u1801
  2632  000700  EF84  F003         	goto	u1800
  2633  000704                     u1801:
  2634  000704  EF85  F003         	goto	l2264
  2635  000708                     u1800:
  2636  000708  8C0D               	bsf	___fladd@signs^0,6,c
  2637  00070A                     l2264:
  2638  00070A  5008               	movf	(___fladd@a+3)^0,w,c
  2639  00070C  2408               	addwf	(___fladd@a+3)^0,w,c
  2640  00070E  6E0E               	movwf	___fladd@aexp^0,c
  2641  000710  AE07               	btfss	(___fladd@a+2)^0,7,c
  2642  000712  EF8D  F003         	goto	u1811
  2643  000716  EF8F  F003         	goto	u1810
  2644  00071A                     u1811:
  2645  00071A  EF90  F003         	goto	l2270
  2646  00071E                     u1810:
  2647  00071E  800E               	bsf	___fladd@aexp^0,0,c
  2648  000720                     l2270:
  2649  000720  500E               	movf	___fladd@aexp^0,w,c
  2650  000722  B4D8               	btfsc	status,2,c
  2651  000724  EF96  F003         	goto	u1821
  2652  000728  EF98  F003         	goto	u1820
  2653  00072C                     u1821:
  2654  00072C  EFAD  F003         	goto	l2280
  2655  000730                     u1820:
  2656  000730  280E               	incf	___fladd@aexp^0,w,c
  2657  000732  A4D8               	btfss	status,2,c
  2658  000734  EF9E  F003         	goto	u1831
  2659  000738  EFA0  F003         	goto	u1830
  2660  00073C                     u1831:
  2661  00073C  EFA8  F003         	goto	l2276
  2662  000740                     u1830:
  2663  000740  0E00               	movlw	0
  2664  000742  6E05               	movwf	___fladd@a^0,c
  2665  000744  0E00               	movlw	0
  2666  000746  6E06               	movwf	(___fladd@a+1)^0,c
  2667  000748  0E00               	movlw	0
  2668  00074A  6E07               	movwf	(___fladd@a+2)^0,c
  2669  00074C  0E00               	movlw	0
  2670  00074E  6E08               	movwf	(___fladd@a+3)^0,c
  2671  000750                     l2276:
  2672  000750  8E07               	bsf	(___fladd@a+2)^0,7,c
  2673  000752  0E00               	movlw	0
  2674  000754  6E08               	movwf	(___fladd@a+3)^0,c
  2675  000756  EFB5  F003         	goto	l2282
  2676  00075A                     l2280:
  2677  00075A  0E00               	movlw	0
  2678  00075C  6E05               	movwf	___fladd@a^0,c
  2679  00075E  0E00               	movlw	0
  2680  000760  6E06               	movwf	(___fladd@a+1)^0,c
  2681  000762  0E00               	movlw	0
  2682  000764  6E07               	movwf	(___fladd@a+2)^0,c
  2683  000766  0E00               	movlw	0
  2684  000768  6E08               	movwf	(___fladd@a+3)^0,c
  2685  00076A                     l2282:
  2686  00076A  500F               	movf	___fladd@bexp^0,w,c
  2687  00076C  5C0E               	subwf	___fladd@aexp^0,w,c
  2688  00076E  B0D8               	btfsc	status,0,c
  2689  000770  EFBC  F003         	goto	u1841
  2690  000774  EFBE  F003         	goto	u1840
  2691  000778                     u1841:
  2692  000778  EFE5  F003         	goto	l2318
  2693  00077C                     u1840:
  2694  00077C  AC0D               	btfss	___fladd@signs^0,6,c
  2695  00077E  EFC3  F003         	goto	u1851
  2696  000782  EFC5  F003         	goto	u1850
  2697  000786                     u1851:
  2698  000786  EFC7  F003         	goto	l2288
  2699  00078A                     u1850:
  2700  00078A  0E80               	movlw	128
  2701  00078C  1A0D               	xorwf	___fladd@signs^0,f,c
  2702  00078E                     l2288:
  2703  00078E  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  2704  000792  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  2705  000796  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  2706  00079A  C001  F010         	movff	___fladd@b,___fladd@grs
  2707  00079E  C005  F001         	movff	___fladd@a,___fladd@b
  2708  0007A2  C010  F005         	movff	___fladd@grs,___fladd@a
  2709  0007A6  C002  F010         	movff	___fladd@b+1,___fladd@grs
  2710  0007AA  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  2711  0007AE  C010  F006         	movff	___fladd@grs,___fladd@a+1
  2712  0007B2  C003  F010         	movff	___fladd@b+2,___fladd@grs
  2713  0007B6  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  2714  0007BA  C010  F007         	movff	___fladd@grs,___fladd@a+2
  2715  0007BE  C004  F010         	movff	___fladd@b+3,___fladd@grs
  2716  0007C2  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  2717  0007C6  C010  F008         	movff	___fladd@grs,___fladd@a+3
  2718  0007CA                     l2318:
  2719  0007CA  0E00               	movlw	0
  2720  0007CC  6E10               	movwf	___fladd@grs^0,c
  2721  0007CE  500F               	movf	___fladd@bexp^0,w,c
  2722  0007D0  C00E  F009         	movff	___fladd@aexp,??___fladd
  2723  0007D4  6A0A               	clrf	(??___fladd+1)^0,c
  2724  0007D6  5E09               	subwf	??___fladd^0,f,c
  2725  0007D8  0E00               	movlw	0
  2726  0007DA  5A0A               	subwfb	(??___fladd+1)^0,f,c
  2727  0007DC  BE0A               	btfsc	(??___fladd+1)^0,7,c
  2728  0007DE  EFFA  F003         	goto	u1861
  2729  0007E2  500A               	movf	(??___fladd+1)^0,w,c
  2730  0007E4  E109               	bnz	u1860
  2731  0007E6  0E1A               	movlw	26
  2732  0007E8  5C09               	subwf	??___fladd^0,w,c
  2733  0007EA  A0D8               	btfss	status,0,c
  2734  0007EC  EFFA  F003         	goto	u1861
  2735  0007F0  EFFC  F003         	goto	u1860
  2736  0007F4                     u1861:
  2737  0007F4  EF33  F004         	goto	l836
  2738  0007F8                     u1860:
  2739  0007F8  5001               	movf	___fladd@b^0,w,c
  2740  0007FA  1002               	iorwf	(___fladd@b+1)^0,w,c
  2741  0007FC  1003               	iorwf	(___fladd@b+2)^0,w,c
  2742  0007FE  1004               	iorwf	(___fladd@b+3)^0,w,c
  2743  000800  A4D8               	btfss	status,2,c
  2744  000802  EF05  F004         	goto	u1871
  2745  000806  EF08  F004         	goto	u1870
  2746  00080A                     u1871:
  2747  00080A  0E01               	movlw	1
  2748  00080C  EF09  F004         	goto	u1880
  2749  000810                     u1870:
  2750  000810  0E00               	movlw	0
  2751  000812                     u1880:
  2752  000812  6E10               	movwf	___fladd@grs^0,c
  2753  000814  0E00               	movlw	0
  2754  000816  6E01               	movwf	___fladd@b^0,c
  2755  000818  0E00               	movlw	0
  2756  00081A  6E02               	movwf	(___fladd@b+1)^0,c
  2757  00081C  0E00               	movlw	0
  2758  00081E  6E03               	movwf	(___fladd@b+2)^0,c
  2759  000820  0E00               	movlw	0
  2760  000822  6E04               	movwf	(___fladd@b+3)^0,c
  2761  000824  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  2762  000828  EF3C  F004         	goto	l835
  2763  00082C                     l837:
  2764  00082C  A010               	btfss	___fladd@grs^0,0,c
  2765  00082E  EF1B  F004         	goto	u1891
  2766  000832  EF1D  F004         	goto	u1890
  2767  000836                     u1891:
  2768  000836  EF23  F004         	goto	l2330
  2769  00083A                     u1890:
  2770  00083A  90D8               	bcf	status,0,c
  2771  00083C  3010               	rrcf	___fladd@grs^0,w,c
  2772  00083E  0901               	iorlw	1
  2773  000840  6E10               	movwf	___fladd@grs^0,c
  2774  000842  EF25  F004         	goto	l2332
  2775  000846                     l2330:
  2776  000846  90D8               	bcf	status,0,c
  2777  000848  3210               	rrcf	___fladd@grs^0,f,c
  2778  00084A                     l2332:
  2779  00084A  A001               	btfss	___fladd@b^0,0,c
  2780  00084C  EF2A  F004         	goto	u1901
  2781  000850  EF2C  F004         	goto	u1900
  2782  000854                     u1901:
  2783  000854  EF2D  F004         	goto	l2336
  2784  000858                     u1900:
  2785  000858  8E10               	bsf	___fladd@grs^0,7,c
  2786  00085A                     l2336:
  2787  00085A  3404               	rlcf	(___fladd@b+3)^0,w,c
  2788  00085C  3204               	rrcf	(___fladd@b+3)^0,f,c
  2789  00085E  3203               	rrcf	(___fladd@b+2)^0,f,c
  2790  000860  3202               	rrcf	(___fladd@b+1)^0,f,c
  2791  000862  3201               	rrcf	___fladd@b^0,f,c
  2792  000864  2A0F               	incf	___fladd@bexp^0,f,c
  2793  000866                     l836:
  2794  000866  500E               	movf	___fladd@aexp^0,w,c
  2795  000868  5C0F               	subwf	___fladd@bexp^0,w,c
  2796  00086A  A0D8               	btfss	status,0,c
  2797  00086C  EF3A  F004         	goto	u1911
  2798  000870  EF3C  F004         	goto	u1910
  2799  000874                     u1911:
  2800  000874  EF16  F004         	goto	l837
  2801  000878                     u1910:
  2802  000878                     l835:
  2803  000878  BC0D               	btfsc	___fladd@signs^0,6,c
  2804  00087A  EF41  F004         	goto	u1921
  2805  00087E  EF43  F004         	goto	u1920
  2806  000882                     u1921:
  2807  000882  EF83  F004         	goto	l2364
  2808  000886                     u1920:
  2809  000886  500F               	movf	___fladd@bexp^0,w,c
  2810  000888  A4D8               	btfss	status,2,c
  2811  00088A  EF49  F004         	goto	u1931
  2812  00088E  EF4B  F004         	goto	u1930
  2813  000892                     u1931:
  2814  000892  EF55  F004         	goto	l2346
  2815  000896                     u1930:
  2816  000896  0E00               	movlw	0
  2817  000898  6E01               	movwf	?___fladd^0,c
  2818  00089A  0E00               	movlw	0
  2819  00089C  6E02               	movwf	(?___fladd+1)^0,c
  2820  00089E  0E00               	movlw	0
  2821  0008A0  6E03               	movwf	(?___fladd+2)^0,c
  2822  0008A2  0E00               	movlw	0
  2823  0008A4  6E04               	movwf	(?___fladd+3)^0,c
  2824  0008A6  EFA4  F005         	goto	l844
  2825  0008AA                     l2346:
  2826  0008AA  5005               	movf	___fladd@a^0,w,c
  2827  0008AC  2601               	addwf	___fladd@b^0,f,c
  2828  0008AE  5006               	movf	(___fladd@a+1)^0,w,c
  2829  0008B0  2202               	addwfc	(___fladd@b+1)^0,f,c
  2830  0008B2  5007               	movf	(___fladd@a+2)^0,w,c
  2831  0008B4  2203               	addwfc	(___fladd@b+2)^0,f,c
  2832  0008B6  5008               	movf	(___fladd@a+3)^0,w,c
  2833  0008B8  2204               	addwfc	(___fladd@b+3)^0,f,c
  2834  0008BA  A004               	btfss	(___fladd@b+3)^0,0,c
  2835  0008BC  EF62  F004         	goto	u1941
  2836  0008C0  EF64  F004         	goto	u1940
  2837  0008C4                     u1941:
  2838  0008C4  EF10  F005         	goto	l2400
  2839  0008C8                     u1940:
  2840  0008C8  A010               	btfss	___fladd@grs^0,0,c
  2841  0008CA  EF69  F004         	goto	u1951
  2842  0008CE  EF6B  F004         	goto	u1950
  2843  0008D2                     u1951:
  2844  0008D2  EF71  F004         	goto	l2354
  2845  0008D6                     u1950:
  2846  0008D6  90D8               	bcf	status,0,c
  2847  0008D8  3010               	rrcf	___fladd@grs^0,w,c
  2848  0008DA  0901               	iorlw	1
  2849  0008DC  6E10               	movwf	___fladd@grs^0,c
  2850  0008DE  EF73  F004         	goto	l2356
  2851  0008E2                     l2354:
  2852  0008E2  90D8               	bcf	status,0,c
  2853  0008E4  3210               	rrcf	___fladd@grs^0,f,c
  2854  0008E6                     l2356:
  2855  0008E6  A001               	btfss	___fladd@b^0,0,c
  2856  0008E8  EF78  F004         	goto	u1961
  2857  0008EC  EF7A  F004         	goto	u1960
  2858  0008F0                     u1961:
  2859  0008F0  EF7B  F004         	goto	l2360
  2860  0008F4                     u1960:
  2861  0008F4  8E10               	bsf	___fladd@grs^0,7,c
  2862  0008F6                     l2360:
  2863  0008F6  3404               	rlcf	(___fladd@b+3)^0,w,c
  2864  0008F8  3204               	rrcf	(___fladd@b+3)^0,f,c
  2865  0008FA  3203               	rrcf	(___fladd@b+2)^0,f,c
  2866  0008FC  3202               	rrcf	(___fladd@b+1)^0,f,c
  2867  0008FE  3201               	rrcf	___fladd@b^0,f,c
  2868  000900  2A0F               	incf	___fladd@bexp^0,f,c
  2869  000902  EF10  F005         	goto	l2400
  2870  000906                     l2364:
  2871  000906  5005               	movf	___fladd@a^0,w,c
  2872  000908  5C01               	subwf	___fladd@b^0,w,c
  2873  00090A  5006               	movf	(___fladd@a+1)^0,w,c
  2874  00090C  5802               	subwfb	(___fladd@b+1)^0,w,c
  2875  00090E  5007               	movf	(___fladd@a+2)^0,w,c
  2876  000910  5803               	subwfb	(___fladd@b+2)^0,w,c
  2877  000912  5004               	movf	(___fladd@b+3)^0,w,c
  2878  000914  0A80               	xorlw	128
  2879  000916  6E09               	movwf	??___fladd^0,c
  2880  000918  5008               	movf	(___fladd@a+3)^0,w,c
  2881  00091A  0A80               	xorlw	128
  2882  00091C  5809               	subwfb	??___fladd^0,w,c
  2883  00091E  B0D8               	btfsc	status,0,c
  2884  000920  EF94  F004         	goto	u1971
  2885  000924  EF96  F004         	goto	u1970
  2886  000928                     u1971:
  2887  000928  EFC1  F004         	goto	l2374
  2888  00092C                     u1970:
  2889  00092C  5001               	movf	___fladd@b^0,w,c
  2890  00092E  5C05               	subwf	___fladd@a^0,w,c
  2891  000930  6E09               	movwf	??___fladd^0,c
  2892  000932  5002               	movf	(___fladd@b+1)^0,w,c
  2893  000934  5806               	subwfb	(___fladd@a+1)^0,w,c
  2894  000936  6E0A               	movwf	(??___fladd+1)^0,c
  2895  000938  5003               	movf	(___fladd@b+2)^0,w,c
  2896  00093A  5807               	subwfb	(___fladd@a+2)^0,w,c
  2897  00093C  6E0B               	movwf	(??___fladd+2)^0,c
  2898  00093E  5004               	movf	(___fladd@b+3)^0,w,c
  2899  000940  5808               	subwfb	(___fladd@a+3)^0,w,c
  2900  000942  6E0C               	movwf	(??___fladd+3)^0,c
  2901  000944  0EFF               	movlw	255
  2902  000946  2409               	addwf	??___fladd^0,w,c
  2903  000948  6E01               	movwf	___fladd@b^0,c
  2904  00094A  0EFF               	movlw	255
  2905  00094C  200A               	addwfc	(??___fladd+1)^0,w,c
  2906  00094E  6E02               	movwf	(___fladd@b+1)^0,c
  2907  000950  0EFF               	movlw	255
  2908  000952  200B               	addwfc	(??___fladd+2)^0,w,c
  2909  000954  6E03               	movwf	(___fladd@b+2)^0,c
  2910  000956  0EFF               	movlw	255
  2911  000958  200C               	addwfc	(??___fladd+3)^0,w,c
  2912  00095A  6E04               	movwf	(___fladd@b+3)^0,c
  2913  00095C  0E80               	movlw	128
  2914  00095E  1A0D               	xorwf	___fladd@signs^0,f,c
  2915  000960  6C10               	negf	___fladd@grs^0,c
  2916  000962  5010               	movf	___fladd@grs^0,w,c
  2917  000964  A4D8               	btfss	status,2,c
  2918  000966  EFB7  F004         	goto	u1981
  2919  00096A  EFB9  F004         	goto	u1980
  2920  00096E                     u1981:
  2921  00096E  EFC9  F004         	goto	l852
  2922  000972                     u1980:
  2923  000972  0E01               	movlw	1
  2924  000974  2601               	addwf	___fladd@b^0,f,c
  2925  000976  0E00               	movlw	0
  2926  000978  2202               	addwfc	(___fladd@b+1)^0,f,c
  2927  00097A  2203               	addwfc	(___fladd@b+2)^0,f,c
  2928  00097C  2204               	addwfc	(___fladd@b+3)^0,f,c
  2929  00097E  EFC9  F004         	goto	l852
  2930  000982                     l2374:
  2931  000982  5005               	movf	___fladd@a^0,w,c
  2932  000984  5E01               	subwf	___fladd@b^0,f,c
  2933  000986  5006               	movf	(___fladd@a+1)^0,w,c
  2934  000988  5A02               	subwfb	(___fladd@b+1)^0,f,c
  2935  00098A  5007               	movf	(___fladd@a+2)^0,w,c
  2936  00098C  5A03               	subwfb	(___fladd@b+2)^0,f,c
  2937  00098E  5008               	movf	(___fladd@a+3)^0,w,c
  2938  000990  5A04               	subwfb	(___fladd@b+3)^0,f,c
  2939  000992                     l852:
  2940  000992  5001               	movf	___fladd@b^0,w,c
  2941  000994  1002               	iorwf	(___fladd@b+1)^0,w,c
  2942  000996  1003               	iorwf	(___fladd@b+2)^0,w,c
  2943  000998  1004               	iorwf	(___fladd@b+3)^0,w,c
  2944  00099A  A4D8               	btfss	status,2,c
  2945  00099C  EFD2  F004         	goto	u1991
  2946  0009A0  EFD4  F004         	goto	u1990
  2947  0009A4                     u1991:
  2948  0009A4  EF09  F005         	goto	l2398
  2949  0009A8                     u1990:
  2950  0009A8  5010               	movf	___fladd@grs^0,w,c
  2951  0009AA  A4D8               	btfss	status,2,c
  2952  0009AC  EFDA  F004         	goto	u2001
  2953  0009B0  EFDC  F004         	goto	u2000
  2954  0009B4                     u2001:
  2955  0009B4  EF09  F005         	goto	l2398
  2956  0009B8                     u2000:
  2957  0009B8  0E00               	movlw	0
  2958  0009BA  6E01               	movwf	?___fladd^0,c
  2959  0009BC  0E00               	movlw	0
  2960  0009BE  6E02               	movwf	(?___fladd+1)^0,c
  2961  0009C0  0E00               	movlw	0
  2962  0009C2  6E03               	movwf	(?___fladd+2)^0,c
  2963  0009C4  0E00               	movlw	0
  2964  0009C6  6E04               	movwf	(?___fladd+3)^0,c
  2965  0009C8  EFA4  F005         	goto	l844
  2966  0009CC                     l2382:
  2967  0009CC  90D8               	bcf	status,0,c
  2968  0009CE  3601               	rlcf	___fladd@b^0,f,c
  2969  0009D0  3602               	rlcf	(___fladd@b+1)^0,f,c
  2970  0009D2  3603               	rlcf	(___fladd@b+2)^0,f,c
  2971  0009D4  3604               	rlcf	(___fladd@b+3)^0,f,c
  2972  0009D6  AE10               	btfss	___fladd@grs^0,7,c
  2973  0009D8  EFF0  F004         	goto	u2011
  2974  0009DC  EFF2  F004         	goto	u2010
  2975  0009E0                     u2011:
  2976  0009E0  EFF3  F004         	goto	l2388
  2977  0009E4                     u2010:
  2978  0009E4  8001               	bsf	___fladd@b^0,0,c
  2979  0009E6                     l2388:
  2980  0009E6  A010               	btfss	___fladd@grs^0,0,c
  2981  0009E8  EFF8  F004         	goto	u2021
  2982  0009EC  EFFA  F004         	goto	u2020
  2983  0009F0                     u2021:
  2984  0009F0  EFFE  F004         	goto	l2392
  2985  0009F4                     u2020:
  2986  0009F4  80D8               	bsf	status,0,c
  2987  0009F6  3610               	rlcf	___fladd@grs^0,f,c
  2988  0009F8  EF00  F005         	goto	l2394
  2989  0009FC                     l2392:
  2990  0009FC  90D8               	bcf	status,0,c
  2991  0009FE  3610               	rlcf	___fladd@grs^0,f,c
  2992  000A00                     l2394:
  2993  000A00  500F               	movf	___fladd@bexp^0,w,c
  2994  000A02  B4D8               	btfsc	status,2,c
  2995  000A04  EF06  F005         	goto	u2031
  2996  000A08  EF08  F005         	goto	u2030
  2997  000A0C                     u2031:
  2998  000A0C  EF09  F005         	goto	l2398
  2999  000A10                     u2030:
  3000  000A10  060F               	decf	___fladd@bexp^0,f,c
  3001  000A12                     l2398:
  3002  000A12  AE03               	btfss	(___fladd@b+2)^0,7,c
  3003  000A14  EF0E  F005         	goto	u2041
  3004  000A18  EF10  F005         	goto	u2040
  3005  000A1C                     u2041:
  3006  000A1C  EFE6  F004         	goto	l2382
  3007  000A20                     u2040:
  3008  000A20                     l2400:
  3009  000A20  0E00               	movlw	0
  3010  000A22  6E0E               	movwf	___fladd@aexp^0,c
  3011  000A24  AE10               	btfss	___fladd@grs^0,7,c
  3012  000A26  EF17  F005         	goto	u2051
  3013  000A2A  EF19  F005         	goto	u2050
  3014  000A2E                     u2051:
  3015  000A2E  EF31  F005         	goto	l861
  3016  000A32                     u2050:
  3017  000A32  C010  F009         	movff	___fladd@grs,??___fladd
  3018  000A36  0E7F               	movlw	127
  3019  000A38  1609               	andwf	??___fladd^0,f,c
  3020  000A3A  B4D8               	btfsc	status,2,c
  3021  000A3C  EF22  F005         	goto	u2061
  3022  000A40  EF24  F005         	goto	u2060
  3023  000A44                     u2061:
  3024  000A44  EF28  F005         	goto	l862
  3025  000A48                     u2060:
  3026  000A48                     l2406:
  3027  000A48  0E01               	movlw	1
  3028  000A4A  6E0E               	movwf	___fladd@aexp^0,c
  3029  000A4C  EF31  F005         	goto	l861
  3030  000A50                     l862:
  3031  000A50  A001               	btfss	___fladd@b^0,0,c
  3032  000A52  EF2D  F005         	goto	u2071
  3033  000A56  EF2F  F005         	goto	u2070
  3034  000A5A                     u2071:
  3035  000A5A  EF31  F005         	goto	l861
  3036  000A5E                     u2070:
  3037  000A5E  EF24  F005         	goto	l2406
  3038  000A62                     l861:
  3039  000A62  500E               	movf	___fladd@aexp^0,w,c
  3040  000A64  B4D8               	btfsc	status,2,c
  3041  000A66  EF37  F005         	goto	u2081
  3042  000A6A  EF39  F005         	goto	u2080
  3043  000A6E                     u2081:
  3044  000A6E  EF64  F005         	goto	l2418
  3045  000A72                     u2080:
  3046  000A72  0E01               	movlw	1
  3047  000A74  2601               	addwf	___fladd@b^0,f,c
  3048  000A76  0E00               	movlw	0
  3049  000A78  2202               	addwfc	(___fladd@b+1)^0,f,c
  3050  000A7A  2203               	addwfc	(___fladd@b+2)^0,f,c
  3051  000A7C  2204               	addwfc	(___fladd@b+3)^0,f,c
  3052  000A7E  A004               	btfss	(___fladd@b+3)^0,0,c
  3053  000A80  EF44  F005         	goto	u2091
  3054  000A84  EF46  F005         	goto	u2090
  3055  000A88                     u2091:
  3056  000A88  EF64  F005         	goto	l2418
  3057  000A8C                     u2090:
  3058  000A8C  C001  F009         	movff	___fladd@b,??___fladd
  3059  000A90  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  3060  000A94  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  3061  000A98  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  3062  000A9C  340C               	rlcf	(??___fladd+3)^0,w,c
  3063  000A9E  320C               	rrcf	(??___fladd+3)^0,f,c
  3064  000AA0  320B               	rrcf	(??___fladd+2)^0,f,c
  3065  000AA2  320A               	rrcf	(??___fladd+1)^0,f,c
  3066  000AA4  3209               	rrcf	??___fladd^0,f,c
  3067  000AA6  C009  F001         	movff	??___fladd,___fladd@b
  3068  000AAA  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  3069  000AAE  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  3070  000AB2  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  3071  000AB6  280F               	incf	___fladd@bexp^0,w,c
  3072  000AB8  B4D8               	btfsc	status,2,c
  3073  000ABA  EF61  F005         	goto	u2101
  3074  000ABE  EF63  F005         	goto	u2100
  3075  000AC2                     u2101:
  3076  000AC2  EF64  F005         	goto	l2418
  3077  000AC6                     u2100:
  3078  000AC6  2A0F               	incf	___fladd@bexp^0,f,c
  3079  000AC8                     l2418:
  3080  000AC8  280F               	incf	___fladd@bexp^0,w,c
  3081  000ACA  B4D8               	btfsc	status,2,c
  3082  000ACC  EF6A  F005         	goto	u2111
  3083  000AD0  EF6C  F005         	goto	u2110
  3084  000AD4                     u2111:
  3085  000AD4  EF74  F005         	goto	l2422
  3086  000AD8                     u2110:
  3087  000AD8  500F               	movf	___fladd@bexp^0,w,c
  3088  000ADA  A4D8               	btfss	status,2,c
  3089  000ADC  EF72  F005         	goto	u2121
  3090  000AE0  EF74  F005         	goto	u2120
  3091  000AE4                     u2121:
  3092  000AE4  EF86  F005         	goto	l2426
  3093  000AE8                     u2120:
  3094  000AE8                     l2422:
  3095  000AE8  0E00               	movlw	0
  3096  000AEA  6E01               	movwf	___fladd@b^0,c
  3097  000AEC  0E00               	movlw	0
  3098  000AEE  6E02               	movwf	(___fladd@b+1)^0,c
  3099  000AF0  0E00               	movlw	0
  3100  000AF2  6E03               	movwf	(___fladd@b+2)^0,c
  3101  000AF4  0E00               	movlw	0
  3102  000AF6  6E04               	movwf	(___fladd@b+3)^0,c
  3103  000AF8  500F               	movf	___fladd@bexp^0,w,c
  3104  000AFA  A4D8               	btfss	status,2,c
  3105  000AFC  EF82  F005         	goto	u2131
  3106  000B00  EF84  F005         	goto	u2130
  3107  000B04                     u2131:
  3108  000B04  EF86  F005         	goto	l2426
  3109  000B08                     u2130:
  3110  000B08  0E00               	movlw	0
  3111  000B0A  6E0D               	movwf	___fladd@signs^0,c
  3112  000B0C                     l2426:
  3113  000B0C  A00F               	btfss	___fladd@bexp^0,0,c
  3114  000B0E  EF8B  F005         	goto	u2141
  3115  000B12  EF8D  F005         	goto	u2140
  3116  000B16                     u2141:
  3117  000B16  EF90  F005         	goto	l2430
  3118  000B1A                     u2140:
  3119  000B1A  8E03               	bsf	(___fladd@b+2)^0,7,c
  3120  000B1C  EF91  F005         	goto	l2432
  3121  000B20                     l2430:
  3122  000B20  9E03               	bcf	(___fladd@b+2)^0,7,c
  3123  000B22                     l2432:
  3124  000B22  90D8               	bcf	status,0,c
  3125  000B24  300F               	rrcf	___fladd@bexp^0,w,c
  3126  000B26  6E04               	movwf	(___fladd@b+3)^0,c
  3127  000B28  AE0D               	btfss	___fladd@signs^0,7,c
  3128  000B2A  EF99  F005         	goto	u2151
  3129  000B2E  EF9B  F005         	goto	u2150
  3130  000B32                     u2151:
  3131  000B32  EF9C  F005         	goto	l2438
  3132  000B36                     u2150:
  3133  000B36  8E04               	bsf	(___fladd@b+3)^0,7,c
  3134  000B38                     l2438:
  3135  000B38  C001  F001         	movff	___fladd@b,?___fladd
  3136  000B3C  C002  F002         	movff	___fladd@b+1,?___fladd+1
  3137  000B40  C003  F003         	movff	___fladd@b+2,?___fladd+2
  3138  000B44  C004  F004         	movff	___fladd@b+3,?___fladd+3
  3139  000B48                     l844:
  3140  000B48  0012               	return		;funcret
  3141  000B4A                     __end_of___fladd:
  3142                           	callstack 0
  3143                           
  3144 ;; *************** function _Refresh_Screen *****************
  3145 ;; Defined at:
  3146 ;;		line 245 in file "main.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;		None
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;		None
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  1    wreg      void 
  3153 ;; Registers used:
  3154 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3160 ;;      Params:         0       0       0       0       0       0       0
  3161 ;;      Locals:         0       0       0       0       0       0       0
  3162 ;;      Temps:          0       0       0       0       0       0       0
  3163 ;;      Totals:         0       0       0       0       0       0       0
  3164 ;;Total ram usage:        0 bytes
  3165 ;; Hardware stack levels used: 1
  3166 ;; Hardware stack levels required when called: 4
  3167 ;; This function calls:
  3168 ;;		_Set_Display_Message
  3169 ;;		_Show_Display
  3170 ;; This function is called by:
  3171 ;;		_main
  3172 ;;		_Min_Lv1_Incr
  3173 ;;		_Min_Lv2_Incr
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177                           	psect	text14
  3178  0022D0                     __ptext14:
  3179                           	callstack 0
  3180  0022D0                     _Refresh_Screen:
  3181                           	callstack 26
  3182  0022D0                     
  3183                           ;main.c: 247: Set_Display_Message();
  3184  0022D0  EC1C  F009         	call	_Set_Display_Message	;wreg free
  3185  0022D4                     
  3186                           ;main.c: 248: Show_Display(display);
  3187  0022D4  EE20  F080         	lfsr	2,_display	;volatile
  3188  0022D8  EE00  F009         	lfsr	0,Show_Display@display
  3189  0022DC  0E1F               	movlw	31
  3190  0022DE                     u1731:
  3191  0022DE  CFDB FFEB          	movff	plusw2,plusw0
  3192  0022E2  06E8               	decf	wreg,f,c
  3193  0022E4  E2FC               	bc	u1731
  3194  0022E6  EC55  F011         	call	_Show_Display	;wreg free
  3195  0022EA                     
  3196                           ;main.c: 249: refresh_display = 0;
  3197  0022EA  9064               	bcf	(_refresh_display/(0+8))^0,_refresh_display& (0+7),c	;volatile
  3198  0022EC  0012               	return		;funcret
  3199  0022EE                     __end_of_Refresh_Screen:
  3200                           	callstack 0
  3201                           
  3202 ;; *************** function _Show_Display *****************
  3203 ;; Defined at:
  3204 ;;		line 239 in file "main.c"
  3205 ;; Parameters:    Size  Location     Type
  3206 ;;  display        32    8[COMRAM] struct .
  3207 ;; Auto vars:     Size  Location     Type
  3208 ;;		None
  3209 ;; Return value:  Size  Location     Type
  3210 ;;                  1    wreg      void 
  3211 ;; Registers used:
  3212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3218 ;;      Params:        32       0       0       0       0       0       0
  3219 ;;      Locals:         0       0       0       0       0       0       0
  3220 ;;      Temps:          0       0       0       0       0       0       0
  3221 ;;      Totals:        32       0       0       0       0       0       0
  3222 ;;Total ram usage:       32 bytes
  3223 ;; Hardware stack levels used: 1
  3224 ;; Hardware stack levels required when called: 3
  3225 ;; This function calls:
  3226 ;;		_Lcd_Out
  3227 ;; This function is called by:
  3228 ;;		_Refresh_Screen
  3229 ;; This function uses a non-reentrant model
  3230 ;;
  3231                           
  3232                           	psect	text15
  3233  0022AA                     __ptext15:
  3234                           	callstack 0
  3235  0022AA                     _Show_Display:
  3236                           	callstack 26
  3237  0022AA                     
  3238                           ;main.c: 241: Lcd_Out(1, 0, display.line0);
  3239  0022AA  0E00               	movlw	0
  3240  0022AC  6E04               	movwf	Lcd_Out@x^0,c
  3241  0022AE  0E09               	movlw	low Show_Display@display
  3242  0022B0  6E05               	movwf	Lcd_Out@buffer^0,c
  3243  0022B2  0E00               	movlw	high Show_Display@display
  3244  0022B4  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
  3245  0022B6  0E01               	movlw	1
  3246  0022B8  ECDC  F00E         	call	_Lcd_Out
  3247                           
  3248                           ;main.c: 242: Lcd_Out(2, 0, display.line1);
  3249  0022BC  0E00               	movlw	0
  3250  0022BE  6E04               	movwf	Lcd_Out@x^0,c
  3251  0022C0  0E19               	movlw	low (Show_Display@display+16)
  3252  0022C2  6E05               	movwf	Lcd_Out@buffer^0,c
  3253  0022C4  0E00               	movlw	high (Show_Display@display+16)
  3254  0022C6  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
  3255  0022C8  0E02               	movlw	2
  3256  0022CA  ECDC  F00E         	call	_Lcd_Out
  3257  0022CE  0012               	return		;funcret
  3258  0022D0                     __end_of_Show_Display:
  3259                           	callstack 0
  3260                           
  3261 ;; *************** function _Lcd_Out *****************
  3262 ;; Defined at:
  3263 ;;		line 96 in file "flexlcd.h"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;  y               1    wreg     unsigned char 
  3266 ;;  x               1    3[COMRAM] unsigned char 
  3267 ;;  buffer          2    4[COMRAM] PTR const unsigned char 
  3268 ;;		 -> display.line1(16), display.line0(16), Show_Display@display(32), 
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;  y               1    6[COMRAM] unsigned char 
  3271 ;;  data            1    7[COMRAM] unsigned char 
  3272 ;; Return value:  Size  Location     Type
  3273 ;;                  1    wreg      void 
  3274 ;; Registers used:
  3275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3281 ;;      Params:         3       0       0       0       0       0       0
  3282 ;;      Locals:         2       0       0       0       0       0       0
  3283 ;;      Temps:          0       0       0       0       0       0       0
  3284 ;;      Totals:         5       0       0       0       0       0       0
  3285 ;;Total ram usage:        5 bytes
  3286 ;; Hardware stack levels used: 1
  3287 ;; Hardware stack levels required when called: 2
  3288 ;; This function calls:
  3289 ;;		_Lcd_Chr_CP
  3290 ;;		_Lcd_Cmd
  3291 ;; This function is called by:
  3292 ;;		_Show_Display
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296                           	psect	text16
  3297  001DB8                     __ptext16:
  3298                           	callstack 0
  3299  001DB8                     _Lcd_Out:
  3300                           	callstack 26
  3301                           
  3302                           ;incstack = 0
  3303                           ;Lcd_Out@y stored from wreg
  3304  001DB8  6E07               	movwf	Lcd_Out@y^0,c
  3305  001DBA                     
  3306                           ;flexlcd.h: 98: unsigned char data;;flexlcd.h: 99: switch (y)
  3307  001DBA  EFF3  F00E         	goto	l2080
  3308  001DBE                     l2070:
  3309  001DBE  5004               	movf	Lcd_Out@x^0,w,c
  3310  001DC0  0F80               	addlw	128
  3311  001DC2  6E08               	movwf	Lcd_Out@data^0,c
  3312  001DC4  EF06  F00F         	goto	l2082
  3313  001DC8                     l2072:
  3314  001DC8  5004               	movf	Lcd_Out@x^0,w,c
  3315  001DCA  0FC0               	addlw	192
  3316  001DCC  6E08               	movwf	Lcd_Out@data^0,c
  3317  001DCE  EF06  F00F         	goto	l2082
  3318  001DD2                     l2074:
  3319  001DD2  5004               	movf	Lcd_Out@x^0,w,c
  3320  001DD4  0F94               	addlw	148
  3321  001DD6  6E08               	movwf	Lcd_Out@data^0,c
  3322  001DD8  EF06  F00F         	goto	l2082
  3323  001DDC                     l2076:
  3324  001DDC  5004               	movf	Lcd_Out@x^0,w,c
  3325  001DDE  0FD4               	addlw	212
  3326  001DE0  6E08               	movwf	Lcd_Out@data^0,c
  3327  001DE2  EF06  F00F         	goto	l2082
  3328  001DE6                     l2080:
  3329  001DE6  5007               	movf	Lcd_Out@y^0,w,c
  3330                           
  3331                           ; Switch size 1, requested type "simple"
  3332                           ; Number of cases is 4, Range of values is 1 to 4
  3333                           ; switch strategies available:
  3334                           ; Name         Instructions Cycles
  3335                           ; simple_byte           13     7 (average)
  3336                           ;	Chosen strategy is simple_byte
  3337  001DE8  0A01               	xorlw	1	; case 1
  3338  001DEA  B4D8               	btfsc	status,2,c
  3339  001DEC  EFDF  F00E         	goto	l2070
  3340  001DF0  0A03               	xorlw	3	; case 2
  3341  001DF2  B4D8               	btfsc	status,2,c
  3342  001DF4  EFE4  F00E         	goto	l2072
  3343  001DF8  0A01               	xorlw	1	; case 3
  3344  001DFA  B4D8               	btfsc	status,2,c
  3345  001DFC  EFE9  F00E         	goto	l2074
  3346  001E00  0A07               	xorlw	7	; case 4
  3347  001E02  B4D8               	btfsc	status,2,c
  3348  001E04  EFEE  F00E         	goto	l2076
  3349  001E08  EF06  F00F         	goto	l2082
  3350  001E0C                     l2082:
  3351                           
  3352                           ;flexlcd.h: 107: Lcd_Cmd(data);
  3353  001E0C  5008               	movf	Lcd_Out@data^0,w,c
  3354  001E0E  EC5A  F00A         	call	_Lcd_Cmd
  3355                           
  3356                           ;flexlcd.h: 108: while(*buffer)
  3357  001E12  EF14  F00F         	goto	l2088
  3358  001E16                     l2084:
  3359                           
  3360                           ;flexlcd.h: 109: {;flexlcd.h: 110: Lcd_Chr_CP(*buffer);
  3361  001E16  C005  FFD9         	movff	Lcd_Out@buffer,fsr2l
  3362  001E1A  C006  FFDA         	movff	Lcd_Out@buffer+1,fsr2h
  3363  001E1E  50DF               	movf	indf2,w,c
  3364  001E20  ECC0  F009         	call	_Lcd_Chr_CP
  3365  001E24                     
  3366                           ;flexlcd.h: 111: buffer++;
  3367  001E24  4A05               	infsnz	Lcd_Out@buffer^0,f,c
  3368  001E26  2A06               	incf	(Lcd_Out@buffer+1)^0,f,c
  3369  001E28                     l2088:
  3370  001E28  C005  FFD9         	movff	Lcd_Out@buffer,fsr2l
  3371  001E2C  C006  FFDA         	movff	Lcd_Out@buffer+1,fsr2h
  3372  001E30  50DF               	movf	indf2,w,c
  3373  001E32  A4D8               	btfss	status,2,c
  3374  001E34  EF1E  F00F         	goto	u1531
  3375  001E38  EF20  F00F         	goto	u1530
  3376  001E3C                     u1531:
  3377  001E3C  EF0B  F00F         	goto	l2084
  3378  001E40                     u1530:
  3379  001E40  0012               	return		;funcret
  3380  001E42                     __end_of_Lcd_Out:
  3381                           	callstack 0
  3382                           
  3383 ;; *************** function _Lcd_Chr_CP *****************
  3384 ;; Defined at:
  3385 ;;		line 138 in file "flexlcd.h"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;  data            1    wreg     unsigned char 
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;  data            1    2[COMRAM] unsigned char 
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  1    wreg      void 
  3392 ;; Registers used:
  3393 ;;		wreg, status,2, status,0
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3399 ;;      Params:         0       0       0       0       0       0       0
  3400 ;;      Locals:         1       0       0       0       0       0       0
  3401 ;;      Temps:          2       0       0       0       0       0       0
  3402 ;;      Totals:         3       0       0       0       0       0       0
  3403 ;;Total ram usage:        3 bytes
  3404 ;; Hardware stack levels used: 1
  3405 ;; Hardware stack levels required when called: 1
  3406 ;; This function calls:
  3407 ;;		Nothing
  3408 ;; This function is called by:
  3409 ;;		_Lcd_Out
  3410 ;;		_Lcd_Out2
  3411 ;; This function uses a non-reentrant model
  3412 ;;
  3413                           
  3414                           	psect	text17
  3415  001380                     __ptext17:
  3416                           	callstack 0
  3417  001380                     _Lcd_Chr_CP:
  3418                           	callstack 26
  3419                           
  3420                           ;incstack = 0
  3421                           ;Lcd_Chr_CP@data stored from wreg
  3422  001380  6E03               	movwf	Lcd_Chr_CP@data^0,c
  3423  001382                     
  3424                           ;flexlcd.h: 139: PORTEbits.RE1 = 0; PORTEbits.RE2 = 1;
  3425  001382  9284               	bcf	132,1,c	;volatile
  3426  001384  8484               	bsf	132,2,c	;volatile
  3427  001386                     
  3428                           ;flexlcd.h: 140: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
  3429  001386  6A01               	clrf	??_Lcd_Chr_CP^0,c
  3430  001388  AE03               	btfss	Lcd_Chr_CP@data^0,7,c
  3431  00138A  D001               	bra	u1445
  3432  00138C  2A01               	incf	??_Lcd_Chr_CP^0,f,c
  3433  00138E                     u1445:
  3434  00138E  0E01               	movlw	1
  3435  001390  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  3436  001392  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  3437  001394  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  3438  001396  5083               	movf	131,w,c	;volatile
  3439  001398  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  3440  00139A  0B7F               	andlw	-129
  3441  00139C  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  3442  00139E  6E83               	movwf	131,c	;volatile
  3443  0013A0  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  3444  0013A4  0E06               	movlw	6
  3445  0013A6  6E02               	movwf	(??_Lcd_Chr_CP+1)^0,c
  3446  0013A8                     u1455:
  3447  0013A8  90D8               	bcf	status,0,c
  3448  0013AA  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  3449  0013AC  2E02               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  3450  0013AE  EFD4  F009         	goto	u1455
  3451  0013B2  0E01               	movlw	1
  3452  0013B4  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  3453  0013B6  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  3454  0013B8  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  3455  0013BA  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  3456  0013BC  5083               	movf	131,w,c	;volatile
  3457  0013BE  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  3458  0013C0  0BBF               	andlw	-65
  3459  0013C2  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  3460  0013C4  6E83               	movwf	131,c	;volatile
  3461                           
  3462                           ;flexlcd.h: 141: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
  3463  0013C6  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  3464  0013CA  0E05               	movlw	5
  3465  0013CC  6E02               	movwf	(??_Lcd_Chr_CP+1)^0,c
  3466  0013CE                     u1465:
  3467  0013CE  90D8               	bcf	status,0,c
  3468  0013D0  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  3469  0013D2  2E02               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  3470  0013D4  EFE7  F009         	goto	u1465
  3471  0013D8  0E01               	movlw	1
  3472  0013DA  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  3473  0013DC  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  3474  0013DE  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  3475  0013E0  5083               	movf	131,w,c	;volatile
  3476  0013E2  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  3477  0013E4  0BDF               	andlw	-33
  3478  0013E6  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  3479  0013E8  6E83               	movwf	131,c	;volatile
  3480  0013EA  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  3481  0013EE  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  3482  0013F0  0E0F               	movlw	15
  3483  0013F2  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  3484  0013F4  0E01               	movlw	1
  3485  0013F6  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  3486  0013F8  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  3487  0013FA  5083               	movf	131,w,c	;volatile
  3488  0013FC  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  3489  0013FE  0BEF               	andlw	-17
  3490  001400  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  3491  001402  6E83               	movwf	131,c	;volatile
  3492  001404                     
  3493                           ;flexlcd.h: 142: _delay(10);
  3494  001404  0E03               	movlw	3
  3495  001406                     u2777:
  3496  001406  2EE8               	decfsz	wreg,f,c
  3497  001408  D7FE               	bra	u2777
  3498  00140A  F000               	nop	
  3499  00140C                     
  3500                           ;flexlcd.h: 143: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  3501  00140C  8284               	bsf	132,1,c	;volatile
  3502  00140E  0E03               	movlw	3
  3503  001410                     u2787:
  3504  001410  2EE8               	decfsz	wreg,f,c
  3505  001412  D7FE               	bra	u2787
  3506  001414  F000               	nop	
  3507  001416  9284               	bcf	132,1,c	;volatile
  3508                           
  3509                           ;flexlcd.h: 144: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
  3510  001418  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  3511  00141C  90D8               	bcf	status,0,c
  3512  00141E  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  3513  001420  90D8               	bcf	status,0,c
  3514  001422  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  3515  001424  90D8               	bcf	status,0,c
  3516  001426  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  3517  001428  0E01               	movlw	1
  3518  00142A  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  3519  00142C  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  3520  00142E  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  3521  001430  5083               	movf	131,w,c	;volatile
  3522  001432  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  3523  001434  0B7F               	andlw	-129
  3524  001436  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  3525  001438  6E83               	movwf	131,c	;volatile
  3526  00143A  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  3527  00143E  90D8               	bcf	status,0,c
  3528  001440  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  3529  001442  90D8               	bcf	status,0,c
  3530  001444  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  3531  001446  0E01               	movlw	1
  3532  001448  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  3533  00144A  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  3534  00144C  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  3535  00144E  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  3536  001450  5083               	movf	131,w,c	;volatile
  3537  001452  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  3538  001454  0BBF               	andlw	-65
  3539  001456  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  3540  001458  6E83               	movwf	131,c	;volatile
  3541                           
  3542                           ;flexlcd.h: 145: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
  3543  00145A  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  3544  00145E  90D8               	bcf	status,0,c
  3545  001460  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  3546  001462  0E01               	movlw	1
  3547  001464  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  3548  001466  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  3549  001468  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  3550  00146A  5083               	movf	131,w,c	;volatile
  3551  00146C  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  3552  00146E  0BDF               	andlw	-33
  3553  001470  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  3554  001472  6E83               	movwf	131,c	;volatile
  3555  001474  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  3556  001478  0E01               	movlw	1
  3557  00147A  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  3558  00147C  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  3559  00147E  5083               	movf	131,w,c	;volatile
  3560  001480  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  3561  001482  0BEF               	andlw	-17
  3562  001484  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  3563  001486  6E83               	movwf	131,c	;volatile
  3564  001488                     
  3565                           ;flexlcd.h: 146: _delay(10);
  3566  001488  0E03               	movlw	3
  3567  00148A                     u2797:
  3568  00148A  2EE8               	decfsz	wreg,f,c
  3569  00148C  D7FE               	bra	u2797
  3570  00148E  F000               	nop	
  3571  001490                     
  3572                           ;flexlcd.h: 147: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  3573  001490  8284               	bsf	132,1,c	;volatile
  3574  001492  0E03               	movlw	3
  3575  001494                     u2807:
  3576  001494  2EE8               	decfsz	wreg,f,c
  3577  001496  D7FE               	bra	u2807
  3578  001498  F000               	nop	
  3579  00149A  9284               	bcf	132,1,c	;volatile
  3580  00149C                     
  3581                           ;flexlcd.h: 148: _delay((unsigned long)((5)*(8000000/4000000.0))); _delay((unsigned long
      +                          )((5500)*(8000000/4000000.0)));
  3582  00149C  0E03               	movlw	3
  3583  00149E                     u2817:
  3584  00149E  2EE8               	decfsz	wreg,f,c
  3585  0014A0  D7FE               	bra	u2817
  3586  0014A2  F000               	nop	
  3587  0014A4  0E0F               	movlw	15
  3588  0014A6  6E01               	movwf	??_Lcd_Chr_CP^0,c
  3589  0014A8  0E48               	movlw	72
  3590  0014AA                     u2827:
  3591  0014AA  2EE8               	decfsz	wreg,f,c
  3592  0014AC  D7FE               	bra	u2827
  3593  0014AE  2E01               	decfsz	??_Lcd_Chr_CP^0,f,c
  3594  0014B0  D7FC               	bra	u2827
  3595  0014B2  0012               	return		;funcret
  3596  0014B4                     __end_of_Lcd_Chr_CP:
  3597                           	callstack 0
  3598                           
  3599 ;; *************** function _Set_Display_Message *****************
  3600 ;; Defined at:
  3601 ;;		line 159 in file "main.c"
  3602 ;; Parameters:    Size  Location     Type
  3603 ;;		None
  3604 ;; Auto vars:     Size  Location     Type
  3605 ;;		None
  3606 ;; Return value:  Size  Location     Type
  3607 ;;                  1    wreg      void 
  3608 ;; Registers used:
  3609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3610 ;; Tracked objects:
  3611 ;;		On entry : 0/0
  3612 ;;		On exit  : 0/0
  3613 ;;		Unchanged: 0/0
  3614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3615 ;;      Params:         0       0       0       0       0       0       0
  3616 ;;      Locals:         2       0       0       0       0       0       0
  3617 ;;      Temps:          0       0       0       0       0       0       0
  3618 ;;      Totals:         2       0       0       0       0       0       0
  3619 ;;Total ram usage:        2 bytes
  3620 ;; Hardware stack levels used: 1
  3621 ;; Hardware stack levels required when called: 3
  3622 ;; This function calls:
  3623 ;;		___fltol
  3624 ;;		_sprintf
  3625 ;;		_strcpy
  3626 ;; This function is called by:
  3627 ;;		_Refresh_Screen
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           	psect	text18
  3632  001238                     __ptext18:
  3633                           	callstack 0
  3634  001238                     _Set_Display_Message:
  3635                           	callstack 26
  3636  001238                     
  3637                           ;main.c: 161: if (screen == CURRENT_LEVEL)
  3638  001238  5051               	movf	_screen^0,w,c	;volatile
  3639  00123A  A4D8               	btfss	status,2,c
  3640  00123C  EF22  F009         	goto	u1691
  3641  001240  EF24  F009         	goto	u1690
  3642  001244                     u1691:
  3643  001244  EF56  F009         	goto	l2208
  3644  001248                     u1690:
  3645  001248                     
  3646                           ;main.c: 162: {;main.c: 163: sprintf(display.line0, "CURRENT LV1: %d%%  ", (int)tank1.le
      +                          vel);
  3647  001248  0E80               	movlw	low _display
  3648  00124A  6E0D               	movwf	sprintf@sp^0,c
  3649  00124C  0E00               	movlw	high _display
  3650  00124E  6E0E               	movwf	(sprintf@sp+1)^0,c
  3651  001250  0E0B               	movlw	low STR_1
  3652  001252  6E0F               	movwf	sprintf@f^0,c
  3653  001254  0E06               	movlw	high STR_1
  3654  001256  6E10               	movwf	(sprintf@f+1)^0,c
  3655  001258  C041  F001         	movff	_tank1,___fltol@f1	;volatile
  3656  00125C  C042  F002         	movff	_tank1+1,___fltol@f1+1	;volatile
  3657  001260  C043  F003         	movff	_tank1+2,___fltol@f1+2	;volatile
  3658  001264  C044  F004         	movff	_tank1+3,___fltol@f1+3	;volatile
  3659  001268  ECFE  F00B         	call	___fltol	;wreg free
  3660  00126C  C001  F011         	movff	?___fltol,?_sprintf+4
  3661  001270  C002  F012         	movff	?___fltol+1,?_sprintf+5
  3662  001274  EC4C  F008         	call	_sprintf	;wreg free
  3663                           
  3664                           ;main.c: 164: sprintf(display.line1, "CURRENT LV2: %d%%  ", (int)tank2.level);
  3665  001278  0E90               	movlw	low (_display+16)
  3666  00127A  6E0D               	movwf	sprintf@sp^0,c
  3667  00127C  0E00               	movlw	high (_display+16)
  3668  00127E  6E0E               	movwf	(sprintf@sp+1)^0,c
  3669  001280  0E1F               	movlw	low STR_2
  3670  001282  6E0F               	movwf	sprintf@f^0,c
  3671  001284  0E06               	movlw	high STR_2
  3672  001286  6E10               	movwf	(sprintf@f+1)^0,c
  3673  001288  C035  F001         	movff	_tank2,___fltol@f1	;volatile
  3674  00128C  C036  F002         	movff	_tank2+1,___fltol@f1+1	;volatile
  3675  001290  C037  F003         	movff	_tank2+2,___fltol@f1+2	;volatile
  3676  001294  C038  F004         	movff	_tank2+3,___fltol@f1+3	;volatile
  3677  001298  ECFE  F00B         	call	___fltol	;wreg free
  3678  00129C  C001  F011         	movff	?___fltol,?_sprintf+4
  3679  0012A0  C002  F012         	movff	?___fltol+1,?_sprintf+5
  3680  0012A4  EC4C  F008         	call	_sprintf	;wreg free
  3681                           
  3682                           ;main.c: 165: }
  3683  0012A8  EFBF  F009         	goto	l189
  3684  0012AC                     l2208:
  3685                           
  3686                           ;main.c: 166: else if (screen == OPERATION_MODE)
  3687  0012AC  0451               	decf	_screen^0,w,c	;volatile
  3688  0012AE  A4D8               	btfss	status,2,c
  3689  0012B0  EF5C  F009         	goto	u1701
  3690  0012B4  EF5E  F009         	goto	u1700
  3691  0012B8                     u1701:
  3692  0012B8  EF86  F009         	goto	l2220
  3693  0012BC                     u1700:
  3694  0012BC                     
  3695                           ;main.c: 167: {;main.c: 168: strcpy(display.line0, "OPERATION MODE: ");
  3696  0012BC  0E80               	movlw	low _display
  3697  0012BE  6E01               	movwf	strcpy@to^0,c
  3698  0012C0  0E00               	movlw	high _display
  3699  0012C2  6E02               	movwf	(strcpy@to+1)^0,c
  3700  0012C4  0E57               	movlw	low STR_3
  3701  0012C6  6E03               	movwf	strcpy@from^0,c
  3702  0012C8  0E06               	movlw	high STR_3
  3703  0012CA  6E04               	movwf	(strcpy@from+1)^0,c
  3704  0012CC  ECC1  F010         	call	_strcpy	;wreg free
  3705  0012D0                     
  3706                           ;main.c: 169: strcpy(display.line1, operation == AUTOMATIC ? "AUTOMATIC      " : "MANUAL
      +                                   ");
  3707  0012D0  5052               	movf	_operation^0,w,c	;volatile
  3708  0012D2  B4D8               	btfsc	status,2,c
  3709  0012D4  EF6E  F009         	goto	u1711
  3710  0012D8  EF70  F009         	goto	u1710
  3711  0012DC                     u1711:
  3712  0012DC  EF76  F009         	goto	l2216
  3713  0012E0                     u1710:
  3714  0012E0  0E68               	movlw	low STR_5
  3715  0012E2  6E1B               	movwf	_Set_Display_Message$604^0,c
  3716  0012E4  0E06               	movlw	high STR_5
  3717  0012E6  6E1C               	movwf	(_Set_Display_Message$604+1)^0,c
  3718  0012E8  EF7A  F009         	goto	l2218
  3719  0012EC                     l2216:
  3720  0012EC  0E78               	movlw	low STR_4
  3721  0012EE  6E1B               	movwf	_Set_Display_Message$604^0,c
  3722  0012F0  0E06               	movlw	high STR_4
  3723  0012F2  6E1C               	movwf	(_Set_Display_Message$604+1)^0,c
  3724  0012F4                     l2218:
  3725  0012F4  0E90               	movlw	low (_display+16)
  3726  0012F6  6E01               	movwf	strcpy@to^0,c
  3727  0012F8  0E00               	movlw	high (_display+16)
  3728  0012FA  6E02               	movwf	(strcpy@to+1)^0,c
  3729  0012FC  C01B  F003         	movff	_Set_Display_Message$604,strcpy@from
  3730  001300  C01C  F004         	movff	_Set_Display_Message$604+1,strcpy@from+1
  3731  001304  ECC1  F010         	call	_strcpy	;wreg free
  3732                           
  3733                           ;main.c: 170: }
  3734  001308  EFBF  F009         	goto	l189
  3735  00130C                     l2220:
  3736                           
  3737                           ;main.c: 171: else if (screen == MIN_LEVEL)
  3738  00130C  0E02               	movlw	2
  3739  00130E  1851               	xorwf	_screen^0,w,c	;volatile
  3740  001310  A4D8               	btfss	status,2,c
  3741  001312  EF8D  F009         	goto	u1721
  3742  001316  EF8F  F009         	goto	u1720
  3743  00131A                     u1721:
  3744  00131A  EFBF  F009         	goto	l189
  3745  00131E                     u1720:
  3746  00131E                     
  3747                           ;main.c: 172: {;main.c: 173: sprintf(display.line0, "LV_MIN_1: %d%%   ", (int)tank1.min_
      +                          level);
  3748  00131E  0E80               	movlw	low _display
  3749  001320  6E0D               	movwf	sprintf@sp^0,c
  3750  001322  0E00               	movlw	high _display
  3751  001324  6E0E               	movwf	(sprintf@sp+1)^0,c
  3752  001326  0E33               	movlw	low STR_6
  3753  001328  6E0F               	movwf	sprintf@f^0,c
  3754  00132A  0E06               	movlw	high STR_6
  3755  00132C  6E10               	movwf	(sprintf@f+1)^0,c
  3756  00132E  C045  F001         	movff	_tank1+4,___fltol@f1	;volatile
  3757  001332  C046  F002         	movff	_tank1+5,___fltol@f1+1	;volatile
  3758  001336  C047  F003         	movff	_tank1+6,___fltol@f1+2	;volatile
  3759  00133A  C048  F004         	movff	_tank1+7,___fltol@f1+3	;volatile
  3760  00133E  ECFE  F00B         	call	___fltol	;wreg free
  3761  001342  C001  F011         	movff	?___fltol,?_sprintf+4
  3762  001346  C002  F012         	movff	?___fltol+1,?_sprintf+5
  3763  00134A  EC4C  F008         	call	_sprintf	;wreg free
  3764                           
  3765                           ;main.c: 174: sprintf(display.line1, "LV_MIN_2: %d%%   ", (int)tank2.min_level);
  3766  00134E  0E90               	movlw	low (_display+16)
  3767  001350  6E0D               	movwf	sprintf@sp^0,c
  3768  001352  0E00               	movlw	high (_display+16)
  3769  001354  6E0E               	movwf	(sprintf@sp+1)^0,c
  3770  001356  0E45               	movlw	low STR_7
  3771  001358  6E0F               	movwf	sprintf@f^0,c
  3772  00135A  0E06               	movlw	high STR_7
  3773  00135C  6E10               	movwf	(sprintf@f+1)^0,c
  3774  00135E  C039  F001         	movff	_tank2+4,___fltol@f1	;volatile
  3775  001362  C03A  F002         	movff	_tank2+5,___fltol@f1+1	;volatile
  3776  001366  C03B  F003         	movff	_tank2+6,___fltol@f1+2	;volatile
  3777  00136A  C03C  F004         	movff	_tank2+7,___fltol@f1+3	;volatile
  3778  00136E  ECFE  F00B         	call	___fltol	;wreg free
  3779  001372  C001  F011         	movff	?___fltol,?_sprintf+4
  3780  001376  C002  F012         	movff	?___fltol+1,?_sprintf+5
  3781  00137A  EC4C  F008         	call	_sprintf	;wreg free
  3782  00137E                     l189:
  3783  00137E  0012               	return		;funcret
  3784  001380                     __end_of_Set_Display_Message:
  3785                           	callstack 0
  3786                           
  3787 ;; *************** function _strcpy *****************
  3788 ;; Defined at:
  3789 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strcpy.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;  to              2    0[COMRAM] PTR unsigned char 
  3792 ;;		 -> display.line1(16), display.line0(16), display(32), 
  3793 ;;  from            2    2[COMRAM] PTR const unsigned char 
  3794 ;;		 -> STR_5(16), STR_4(16), STR_3(17), 
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;  cp              2    4[COMRAM] PTR unsigned char 
  3797 ;;		 -> display.line1(16), display.line0(16), display(32), 
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  2    0[COMRAM] PTR unsigned char 
  3800 ;; Registers used:
  3801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3807 ;;      Params:         4       0       0       0       0       0       0
  3808 ;;      Locals:         2       0       0       0       0       0       0
  3809 ;;      Temps:          0       0       0       0       0       0       0
  3810 ;;      Totals:         6       0       0       0       0       0       0
  3811 ;;Total ram usage:        6 bytes
  3812 ;; Hardware stack levels used: 1
  3813 ;; Hardware stack levels required when called: 1
  3814 ;; This function calls:
  3815 ;;		Nothing
  3816 ;; This function is called by:
  3817 ;;		_Set_Display_Message
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           	psect	text19
  3822  002182                     __ptext19:
  3823                           	callstack 0
  3824  002182                     _strcpy:
  3825                           	callstack 27
  3826  002182  C001  F005         	movff	strcpy@to,strcpy@cp
  3827  002186  C002  F006         	movff	strcpy@to+1,strcpy@cp+1
  3828  00218A  EFCB  F010         	goto	l2158
  3829  00218E                     l2156:
  3830  00218E  4A05               	infsnz	strcpy@cp^0,f,c
  3831  002190  2A06               	incf	(strcpy@cp+1)^0,f,c
  3832  002192  4A03               	infsnz	strcpy@from^0,f,c
  3833  002194  2A04               	incf	(strcpy@from+1)^0,f,c
  3834  002196                     l2158:
  3835  002196  C003  FFF6         	movff	strcpy@from,tblptrl
  3836  00219A  C004  FFF7         	movff	strcpy@from+1,tblptrh
  3837  00219E                     	if	0	;tblptru may be non-zero
  3838  00219E                     	endif
  3839  00219E                     	if	0	;tblptru may be non-zero
  3840  00219E                     	endif
  3841  00219E  C005  FFD9         	movff	strcpy@cp,fsr2l
  3842  0021A2  C006  FFDA         	movff	strcpy@cp+1,fsr2h
  3843  0021A6  0008               	tblrd		*
  3844  0021A8  CFF5 FFDF          	movff	tablat,indf2
  3845  0021AC  50DF               	movf	indf2,w,c
  3846  0021AE  A4D8               	btfss	status,2,c
  3847  0021B0  EFDC  F010         	goto	u1611
  3848  0021B4  EFDE  F010         	goto	u1610
  3849  0021B8                     u1611:
  3850  0021B8  EFC7  F010         	goto	l2156
  3851  0021BC                     u1610:
  3852  0021BC  0012               	return		;funcret
  3853  0021BE                     __end_of_strcpy:
  3854                           	callstack 0
  3855                           
  3856 ;; *************** function _sprintf *****************
  3857 ;; Defined at:
  3858 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  3859 ;; Parameters:    Size  Location     Type
  3860 ;;  sp              2   12[COMRAM] PTR unsigned char 
  3861 ;;		 -> display.line1(16), display.line0(16), display(32), 
  3862 ;;  f               2   14[COMRAM] PTR const unsigned char 
  3863 ;;		 -> STR_7(18), STR_6(18), STR_2(20), STR_1(20), 
  3864 ;; Auto vars:     Size  Location     Type
  3865 ;;  tmpval          4    0        struct .
  3866 ;;  cp              3    0        PTR const unsigned char 
  3867 ;;  val             2   23[COMRAM] unsigned int 
  3868 ;;  ap              2   19[COMRAM] PTR void [1]
  3869 ;;		 -> ?_sprintf(2), 
  3870 ;;  len             2    0        unsigned int 
  3871 ;;  c               1   25[COMRAM] unsigned char 
  3872 ;;  prec            1   22[COMRAM] char 
  3873 ;;  flag            1   21[COMRAM] unsigned char 
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  2   12[COMRAM] int 
  3876 ;; Registers used:
  3877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3883 ;;      Params:         6       0       0       0       0       0       0
  3884 ;;      Locals:         7       0       0       0       0       0       0
  3885 ;;      Temps:          1       0       0       0       0       0       0
  3886 ;;      Totals:        14       0       0       0       0       0       0
  3887 ;;Total ram usage:       14 bytes
  3888 ;; Hardware stack levels used: 1
  3889 ;; Hardware stack levels required when called: 2
  3890 ;; This function calls:
  3891 ;;		___lwdiv
  3892 ;;		___lwmod
  3893 ;; This function is called by:
  3894 ;;		_Set_Display_Message
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           	psect	text20
  3899  001098                     __ptext20:
  3900                           	callstack 0
  3901  001098                     _sprintf:
  3902                           	callstack 26
  3903  001098                     
  3904                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  3905  001098  0E11               	movlw	low (?_sprintf+4)
  3906  00109A  6E14               	movwf	sprintf@ap^0,c
  3907  00109C  0E00               	movlw	high (?_sprintf+4)
  3908  00109E  6E15               	movwf	(sprintf@ap+1)^0,c
  3909                           
  3910                           ;doprnt.c: 553: while((c = *f++)) {
  3911  0010A0  EF04  F009         	goto	l2148
  3912  0010A4                     l2092:
  3913                           
  3914                           ;doprnt.c: 555: if(c != '%')
  3915  0010A4  0E25               	movlw	37
  3916  0010A6  181A               	xorwf	sprintf@c^0,w,c
  3917  0010A8  B4D8               	btfsc	status,2,c
  3918  0010AA  EF59  F008         	goto	u1541
  3919  0010AE  EF5B  F008         	goto	u1540
  3920  0010B2                     u1541:
  3921  0010B2  EF65  F008         	goto	l2098
  3922  0010B6                     u1540:
  3923  0010B6                     l2094:
  3924                           
  3925                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  3926  0010B6  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3927  0010BA  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3928  0010BE  C01A  FFDF         	movff	sprintf@c,indf2
  3929  0010C2  4A0D               	infsnz	sprintf@sp^0,f,c
  3930  0010C4  2A0E               	incf	(sprintf@sp+1)^0,f,c
  3931                           
  3932                           ;doprnt.c: 559: continue;
  3933  0010C6  EF04  F009         	goto	l2148
  3934  0010CA                     l2098:
  3935                           
  3936                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  3937  0010CA  0E00               	movlw	0
  3938  0010CC  6E16               	movwf	sprintf@flag^0,c
  3939  0010CE  C00F  FFF6         	movff	sprintf@f,tblptrl
  3940  0010D2  C010  FFF7         	movff	sprintf@f+1,tblptrh
  3941  0010D6  4A0F               	infsnz	sprintf@f^0,f,c
  3942  0010D8  2A10               	incf	(sprintf@f+1)^0,f,c
  3943  0010DA                     	if	0	;tblptru may be non-zero
  3944  0010DA                     	endif
  3945  0010DA                     	if	0	;tblptru may be non-zero
  3946  0010DA                     	endif
  3947  0010DA  0008               	tblrd		*
  3948  0010DC  CFF5 F01A          	movff	tablat,sprintf@c
  3949  0010E0  501A               	movf	sprintf@c^0,w,c
  3950                           
  3951                           ; Switch size 1, requested type "simple"
  3952                           ; Number of cases is 3, Range of values is 0 to 105
  3953                           ; switch strategies available:
  3954                           ; Name         Instructions Cycles
  3955                           ; simple_byte           10     6 (average)
  3956                           ;	Chosen strategy is simple_byte
  3957  0010E2  0A00               	xorlw	0	; case 0
  3958  0010E4  B4D8               	btfsc	status,2,c
  3959  0010E6  EF15  F009         	goto	l2150
  3960  0010EA  0A64               	xorlw	100	; case 100
  3961  0010EC  B4D8               	btfsc	status,2,c
  3962  0010EE  EF7F  F008         	goto	l2108
  3963  0010F2  0A0D               	xorlw	13	; case 105
  3964  0010F4  B4D8               	btfsc	status,2,c
  3965  0010F6  EF7F  F008         	goto	l2108
  3966  0010FA  EF5B  F008         	goto	l2094
  3967  0010FE                     l2108:
  3968                           
  3969                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  3970  0010FE  C014  FFD9         	movff	sprintf@ap,fsr2l
  3971  001102  C015  FFDA         	movff	sprintf@ap+1,fsr2h
  3972  001106  CFDE F018          	movff	postinc2,sprintf@val
  3973  00110A  CFDD F019          	movff	postdec2,sprintf@val+1
  3974  00110E  0E02               	movlw	2
  3975  001110  2614               	addwf	sprintf@ap^0,f,c
  3976  001112  0E00               	movlw	0
  3977  001114  2215               	addwfc	(sprintf@ap+1)^0,f,c
  3978  001116                     
  3979                           ;doprnt.c: 1287: if((int)val < 0) {
  3980  001116  BE19               	btfsc	(sprintf@val+1)^0,7,c
  3981  001118  EF92  F008         	goto	u1550
  3982  00111C  EF90  F008         	goto	u1551
  3983  001120                     u1551:
  3984  001120  EF98  F008         	goto	l2118
  3985  001124                     u1550:
  3986  001124                     
  3987                           ;doprnt.c: 1288: flag |= 0x03;
  3988  001124  0E03               	movlw	3
  3989  001126  1216               	iorwf	sprintf@flag^0,f,c
  3990  001128                     
  3991                           ;doprnt.c: 1289: val = -val;
  3992  001128  6C18               	negf	sprintf@val^0,c
  3993  00112A  1E19               	comf	(sprintf@val+1)^0,f,c
  3994  00112C  B0D8               	btfsc	status,0,c
  3995  00112E  2A19               	incf	(sprintf@val+1)^0,f,c
  3996  001130                     l2118:
  3997                           
  3998                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  3999  001130  0E01               	movlw	1
  4000  001132  6E1A               	movwf	sprintf@c^0,c
  4001  001134                     l2124:
  4002                           
  4003                           ;doprnt.c: 1332: if(val < dpowers[c])
  4004  001134  501A               	movf	sprintf@c^0,w,c
  4005  001136  0D02               	mullw	2
  4006  001138  0E01               	movlw	low _dpowers
  4007  00113A  24F3               	addwf	243,w,c
  4008  00113C  6EF6               	movwf	tblptrl,c
  4009  00113E  0E06               	movlw	high _dpowers
  4010  001140  20F4               	addwfc	244,w,c
  4011  001142  6EF7               	movwf	tblptrh,c
  4012  001144                     	if	0	;There are less than 3 active tblptr bytes
  4013  001144                     	endif
  4014  001144  0009               	tblrd		*+
  4015  001146  50F5               	movf	tablat,w,c
  4016  001148  5C18               	subwf	sprintf@val^0,w,c
  4017  00114A  0009               	tblrd		*+
  4018  00114C  50F5               	movf	tablat,w,c
  4019  00114E  5819               	subwfb	(sprintf@val+1)^0,w,c
  4020  001150  B0D8               	btfsc	status,0,c
  4021  001152  EFAD  F008         	goto	u1561
  4022  001156  EFAF  F008         	goto	u1560
  4023  00115A                     u1561:
  4024  00115A  EFB1  F008         	goto	l2128
  4025  00115E                     u1560:
  4026  00115E  EFBB  F008         	goto	l2132
  4027  001162                     l2128:
  4028  001162  2A1A               	incf	sprintf@c^0,f,c
  4029  001164  0E05               	movlw	5
  4030  001166  181A               	xorwf	sprintf@c^0,w,c
  4031  001168  A4D8               	btfss	status,2,c
  4032  00116A  EFB9  F008         	goto	u1571
  4033  00116E  EFBB  F008         	goto	u1570
  4034  001172                     u1571:
  4035  001172  EF9A  F008         	goto	l2124
  4036  001176                     u1570:
  4037  001176                     l2132:
  4038                           
  4039                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  4040  001176  C016  F013         	movff	sprintf@flag,??_sprintf
  4041  00117A  0E03               	movlw	3
  4042  00117C  1613               	andwf	??_sprintf^0,f,c
  4043  00117E  B4D8               	btfsc	status,2,c
  4044  001180  EFC4  F008         	goto	u1581
  4045  001184  EFC6  F008         	goto	u1580
  4046  001188                     u1581:
  4047  001188  EFCE  F008         	goto	l2138
  4048  00118C                     u1580:
  4049  00118C                     
  4050                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  4051  00118C  C00D  FFD9         	movff	sprintf@sp,fsr2l
  4052  001190  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  4053  001194  0E2D               	movlw	45
  4054  001196  6EDF               	movwf	indf2,c
  4055  001198  4A0D               	infsnz	sprintf@sp^0,f,c
  4056  00119A  2A0E               	incf	(sprintf@sp+1)^0,f,c
  4057  00119C                     l2138:
  4058                           
  4059                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  4060  00119C  C01A  F017         	movff	sprintf@c,sprintf@prec
  4061                           
  4062                           ;doprnt.c: 1500: while(prec--) {
  4063  0011A0  EFFB  F008         	goto	l2146
  4064  0011A4                     l2140:
  4065                           
  4066                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  4067  0011A4  5017               	movf	sprintf@prec^0,w,c
  4068  0011A6  0D02               	mullw	2
  4069  0011A8  0E01               	movlw	low _dpowers
  4070  0011AA  24F3               	addwf	243,w,c
  4071  0011AC  6EF6               	movwf	tblptrl,c
  4072  0011AE  0E06               	movlw	high _dpowers
  4073  0011B0  20F4               	addwfc	244,w,c
  4074  0011B2  6EF7               	movwf	tblptrh,c
  4075  0011B4                     	if	0	;There are less than 3 active tblptr bytes
  4076  0011B4                     	endif
  4077  0011B4  0009               	tblrd		*+
  4078  0011B6  CFF5 F003          	movff	tablat,___lwdiv@divisor
  4079  0011BA  000A               	tblrd		*-
  4080  0011BC  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  4081  0011C0  C018  F001         	movff	sprintf@val,___lwdiv@dividend
  4082  0011C4  C019  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  4083  0011C8  ECDF  F00F         	call	___lwdiv	;wreg free
  4084  0011CC  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  4085  0011D0  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  4086  0011D4  0E00               	movlw	0
  4087  0011D6  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  4088  0011D8  0E0A               	movlw	10
  4089  0011DA  6E0A               	movwf	___lwmod@divisor^0,c
  4090  0011DC  EC19  F010         	call	___lwmod	;wreg free
  4091  0011E0  5008               	movf	?___lwmod^0,w,c
  4092  0011E2  0F30               	addlw	48
  4093  0011E4  6E1A               	movwf	sprintf@c^0,c
  4094  0011E6                     
  4095                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  4096  0011E6  C00D  FFD9         	movff	sprintf@sp,fsr2l
  4097  0011EA  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  4098  0011EE  C01A  FFDF         	movff	sprintf@c,indf2
  4099  0011F2  4A0D               	infsnz	sprintf@sp^0,f,c
  4100  0011F4  2A0E               	incf	(sprintf@sp+1)^0,f,c
  4101  0011F6                     l2146:
  4102  0011F6  0617               	decf	sprintf@prec^0,f,c
  4103  0011F8  2817               	incf	sprintf@prec^0,w,c
  4104  0011FA  A4D8               	btfss	status,2,c
  4105  0011FC  EF02  F009         	goto	u1591
  4106  001200  EF04  F009         	goto	u1590
  4107  001204                     u1591:
  4108  001204  EFD2  F008         	goto	l2140
  4109  001208                     u1590:
  4110  001208                     l2148:
  4111  001208  C00F  FFF6         	movff	sprintf@f,tblptrl
  4112  00120C  C010  FFF7         	movff	sprintf@f+1,tblptrh
  4113  001210  4A0F               	infsnz	sprintf@f^0,f,c
  4114  001212  2A10               	incf	(sprintf@f+1)^0,f,c
  4115  001214                     	if	0	;tblptru may be non-zero
  4116  001214                     	endif
  4117  001214                     	if	0	;tblptru may be non-zero
  4118  001214                     	endif
  4119  001214  0008               	tblrd		*
  4120  001216  CFF5 F01A          	movff	tablat,sprintf@c
  4121  00121A  501A               	movf	sprintf@c^0,w,c
  4122  00121C  A4D8               	btfss	status,2,c
  4123  00121E  EF13  F009         	goto	u1601
  4124  001222  EF15  F009         	goto	u1600
  4125  001226                     u1601:
  4126  001226  EF52  F008         	goto	l2092
  4127  00122A                     u1600:
  4128  00122A                     l2150:
  4129                           
  4130                           ;doprnt.c: 1564: *sp = 0;
  4131  00122A  C00D  FFD9         	movff	sprintf@sp,fsr2l
  4132  00122E  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  4133  001232  0E00               	movlw	0
  4134  001234  6EDF               	movwf	indf2,c
  4135  001236  0012               	return		;funcret
  4136  001238                     __end_of_sprintf:
  4137                           	callstack 0
  4138                           
  4139 ;; *************** function ___lwmod *****************
  4140 ;; Defined at:
  4141 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;  dividend        2    7[COMRAM] unsigned int 
  4144 ;;  divisor         2    9[COMRAM] unsigned int 
  4145 ;; Auto vars:     Size  Location     Type
  4146 ;;  counter         1   11[COMRAM] unsigned char 
  4147 ;; Return value:  Size  Location     Type
  4148 ;;                  2    7[COMRAM] unsigned int 
  4149 ;; Registers used:
  4150 ;;		wreg, status,2, status,0
  4151 ;; Tracked objects:
  4152 ;;		On entry : 0/0
  4153 ;;		On exit  : 0/0
  4154 ;;		Unchanged: 0/0
  4155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4156 ;;      Params:         4       0       0       0       0       0       0
  4157 ;;      Locals:         1       0       0       0       0       0       0
  4158 ;;      Temps:          0       0       0       0       0       0       0
  4159 ;;      Totals:         5       0       0       0       0       0       0
  4160 ;;Total ram usage:        5 bytes
  4161 ;; Hardware stack levels used: 1
  4162 ;; Hardware stack levels required when called: 1
  4163 ;; This function calls:
  4164 ;;		Nothing
  4165 ;; This function is called by:
  4166 ;;		_sprintf
  4167 ;; This function uses a non-reentrant model
  4168 ;;
  4169                           
  4170                           	psect	text21
  4171  002032                     __ptext21:
  4172                           	callstack 0
  4173  002032                     ___lwmod:
  4174                           	callstack 26
  4175  002032  500A               	movf	___lwmod@divisor^0,w,c
  4176  002034  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  4177  002036  B4D8               	btfsc	status,2,c
  4178  002038  EF20  F010         	goto	u1501
  4179  00203C  EF22  F010         	goto	u1500
  4180  002040                     u1501:
  4181  002040  EF46  F010         	goto	l808
  4182  002044                     u1500:
  4183  002044  0E01               	movlw	1
  4184  002046  6E0C               	movwf	___lwmod@counter^0,c
  4185  002048  EF2A  F010         	goto	l2058
  4186  00204C                     l2056:
  4187  00204C  90D8               	bcf	status,0,c
  4188  00204E  360A               	rlcf	___lwmod@divisor^0,f,c
  4189  002050  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  4190  002052  2A0C               	incf	___lwmod@counter^0,f,c
  4191  002054                     l2058:
  4192  002054  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  4193  002056  EF2F  F010         	goto	u1511
  4194  00205A  EF31  F010         	goto	u1510
  4195  00205E                     u1511:
  4196  00205E  EF26  F010         	goto	l2056
  4197  002062                     u1510:
  4198  002062                     l2060:
  4199  002062  500A               	movf	___lwmod@divisor^0,w,c
  4200  002064  5C08               	subwf	___lwmod@dividend^0,w,c
  4201  002066  500B               	movf	(___lwmod@divisor+1)^0,w,c
  4202  002068  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  4203  00206A  A0D8               	btfss	status,0,c
  4204  00206C  EF3A  F010         	goto	u1521
  4205  002070  EF3C  F010         	goto	u1520
  4206  002074                     u1521:
  4207  002074  EF40  F010         	goto	l2064
  4208  002078                     u1520:
  4209  002078  500A               	movf	___lwmod@divisor^0,w,c
  4210  00207A  5E08               	subwf	___lwmod@dividend^0,f,c
  4211  00207C  500B               	movf	(___lwmod@divisor+1)^0,w,c
  4212  00207E  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  4213  002080                     l2064:
  4214  002080  90D8               	bcf	status,0,c
  4215  002082  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  4216  002084  320A               	rrcf	___lwmod@divisor^0,f,c
  4217  002086  2E0C               	decfsz	___lwmod@counter^0,f,c
  4218  002088  EF31  F010         	goto	l2060
  4219  00208C                     l808:
  4220  00208C  C008  F008         	movff	___lwmod@dividend,?___lwmod
  4221  002090  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  4222  002094  0012               	return		;funcret
  4223  002096                     __end_of___lwmod:
  4224                           	callstack 0
  4225                           
  4226 ;; *************** function ___lwdiv *****************
  4227 ;; Defined at:
  4228 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  4229 ;; Parameters:    Size  Location     Type
  4230 ;;  dividend        2    0[COMRAM] unsigned int 
  4231 ;;  divisor         2    2[COMRAM] unsigned int 
  4232 ;; Auto vars:     Size  Location     Type
  4233 ;;  quotient        2    4[COMRAM] unsigned int 
  4234 ;;  counter         1    6[COMRAM] unsigned char 
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  2    0[COMRAM] unsigned int 
  4237 ;; Registers used:
  4238 ;;		wreg, status,2, status,0
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 0/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4244 ;;      Params:         4       0       0       0       0       0       0
  4245 ;;      Locals:         3       0       0       0       0       0       0
  4246 ;;      Temps:          0       0       0       0       0       0       0
  4247 ;;      Totals:         7       0       0       0       0       0       0
  4248 ;;Total ram usage:        7 bytes
  4249 ;; Hardware stack levels used: 1
  4250 ;; Hardware stack levels required when called: 1
  4251 ;; This function calls:
  4252 ;;		Nothing
  4253 ;; This function is called by:
  4254 ;;		_sprintf
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258                           	psect	text22
  4259  001FBE                     __ptext22:
  4260                           	callstack 0
  4261  001FBE                     ___lwdiv:
  4262                           	callstack 26
  4263  001FBE  0E00               	movlw	0
  4264  001FC0  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  4265  001FC2  0E00               	movlw	0
  4266  001FC4  6E05               	movwf	___lwdiv@quotient^0,c
  4267  001FC6  5003               	movf	___lwdiv@divisor^0,w,c
  4268  001FC8  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4269  001FCA  B4D8               	btfsc	status,2,c
  4270  001FCC  EFEA  F00F         	goto	u1471
  4271  001FD0  EFEC  F00F         	goto	u1470
  4272  001FD4                     u1471:
  4273  001FD4  EF14  F010         	goto	l798
  4274  001FD8                     u1470:
  4275  001FD8  0E01               	movlw	1
  4276  001FDA  6E07               	movwf	___lwdiv@counter^0,c
  4277  001FDC  EFF4  F00F         	goto	l2038
  4278  001FE0                     l2036:
  4279  001FE0  90D8               	bcf	status,0,c
  4280  001FE2  3603               	rlcf	___lwdiv@divisor^0,f,c
  4281  001FE4  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4282  001FE6  2A07               	incf	___lwdiv@counter^0,f,c
  4283  001FE8                     l2038:
  4284  001FE8  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  4285  001FEA  EFF9  F00F         	goto	u1481
  4286  001FEE  EFFB  F00F         	goto	u1480
  4287  001FF2                     u1481:
  4288  001FF2  EFF0  F00F         	goto	l2036
  4289  001FF6                     u1480:
  4290  001FF6                     l2040:
  4291  001FF6  90D8               	bcf	status,0,c
  4292  001FF8  3605               	rlcf	___lwdiv@quotient^0,f,c
  4293  001FFA  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4294  001FFC  5003               	movf	___lwdiv@divisor^0,w,c
  4295  001FFE  5C01               	subwf	___lwdiv@dividend^0,w,c
  4296  002000  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  4297  002002  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4298  002004  A0D8               	btfss	status,0,c
  4299  002006  EF07  F010         	goto	u1491
  4300  00200A  EF09  F010         	goto	u1490
  4301  00200E                     u1491:
  4302  00200E  EF0E  F010         	goto	l2048
  4303  002012                     u1490:
  4304  002012  5003               	movf	___lwdiv@divisor^0,w,c
  4305  002014  5E01               	subwf	___lwdiv@dividend^0,f,c
  4306  002016  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  4307  002018  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4308  00201A  8005               	bsf	___lwdiv@quotient^0,0,c
  4309  00201C                     l2048:
  4310  00201C  90D8               	bcf	status,0,c
  4311  00201E  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4312  002020  3203               	rrcf	___lwdiv@divisor^0,f,c
  4313  002022  2E07               	decfsz	___lwdiv@counter^0,f,c
  4314  002024  EFFB  F00F         	goto	l2040
  4315  002028                     l798:
  4316  002028  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  4317  00202C  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4318  002030  0012               	return		;funcret
  4319  002032                     __end_of___lwdiv:
  4320                           	callstack 0
  4321                           
  4322 ;; *************** function ___fltol *****************
  4323 ;; Defined at:
  4324 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  4325 ;; Parameters:    Size  Location     Type
  4326 ;;  f1              4    0[COMRAM] unsigned int 
  4327 ;; Auto vars:     Size  Location     Type
  4328 ;;  exp1            1    9[COMRAM] unsigned char 
  4329 ;;  sign1           1    8[COMRAM] unsigned char 
  4330 ;; Return value:  Size  Location     Type
  4331 ;;                  4    0[COMRAM] long 
  4332 ;; Registers used:
  4333 ;;		wreg, status,2, status,0
  4334 ;; Tracked objects:
  4335 ;;		On entry : 0/0
  4336 ;;		On exit  : 0/0
  4337 ;;		Unchanged: 0/0
  4338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4339 ;;      Params:         4       0       0       0       0       0       0
  4340 ;;      Locals:         2       0       0       0       0       0       0
  4341 ;;      Temps:          4       0       0       0       0       0       0
  4342 ;;      Totals:        10       0       0       0       0       0       0
  4343 ;;Total ram usage:       10 bytes
  4344 ;; Hardware stack levels used: 1
  4345 ;; Hardware stack levels required when called: 1
  4346 ;; This function calls:
  4347 ;;		Nothing
  4348 ;; This function is called by:
  4349 ;;		_Set_Display_Message
  4350 ;; This function uses a non-reentrant model
  4351 ;;
  4352                           
  4353                           	psect	text23
  4354  0017FC                     __ptext23:
  4355                           	callstack 0
  4356  0017FC                     ___fltol:
  4357                           	callstack 27
  4358  0017FC  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4359  0017FE  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4360  001800  6E0A               	movwf	___fltol@exp1^0,c
  4361  001802  500A               	movf	___fltol@exp1^0,w,c
  4362  001804  A4D8               	btfss	status,2,c
  4363  001806  EF07  F00C         	goto	u1621
  4364  00180A  EF09  F00C         	goto	u1620
  4365  00180E                     u1621:
  4366  00180E  EF13  F00C         	goto	l2166
  4367  001812                     u1620:
  4368  001812                     l2162:
  4369  001812  0E00               	movlw	0
  4370  001814  6E01               	movwf	?___fltol^0,c
  4371  001816  0E00               	movlw	0
  4372  001818  6E02               	movwf	(?___fltol+1)^0,c
  4373  00181A  0E00               	movlw	0
  4374  00181C  6E03               	movwf	(?___fltol+2)^0,c
  4375  00181E  0E00               	movlw	0
  4376  001820  6E04               	movwf	(?___fltol+3)^0,c
  4377  001822  EF80  F00C         	goto	l608
  4378  001826                     l2166:
  4379  001826  C001  F005         	movff	___fltol@f1,??___fltol
  4380  00182A  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4381  00182E  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4382  001832  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4383  001836  0E20               	movlw	32
  4384  001838  EF23  F00C         	goto	u1630
  4385  00183C                     u1635:
  4386  00183C  90D8               	bcf	status,0,c
  4387  00183E  3208               	rrcf	(??___fltol+3)^0,f,c
  4388  001840  3207               	rrcf	(??___fltol+2)^0,f,c
  4389  001842  3206               	rrcf	(??___fltol+1)^0,f,c
  4390  001844  3205               	rrcf	??___fltol^0,f,c
  4391  001846                     u1630:
  4392  001846  2EE8               	decfsz	wreg,f,c
  4393  001848  EF1E  F00C         	goto	u1635
  4394  00184C  5005               	movf	??___fltol^0,w,c
  4395  00184E  6E09               	movwf	___fltol@sign1^0,c
  4396  001850  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4397  001852  0EFF               	movlw	255
  4398  001854  1601               	andwf	___fltol@f1^0,f,c
  4399  001856  0EFF               	movlw	255
  4400  001858  1602               	andwf	(___fltol@f1+1)^0,f,c
  4401  00185A  0EFF               	movlw	255
  4402  00185C  1603               	andwf	(___fltol@f1+2)^0,f,c
  4403  00185E  0E00               	movlw	0
  4404  001860  1604               	andwf	(___fltol@f1+3)^0,f,c
  4405  001862  0E96               	movlw	150
  4406  001864  5E0A               	subwf	___fltol@exp1^0,f,c
  4407  001866  BE0A               	btfsc	___fltol@exp1^0,7,c
  4408  001868  EF3A  F00C         	goto	u1640
  4409  00186C  EF38  F00C         	goto	u1641
  4410  001870                     u1641:
  4411  001870  EF50  F00C         	goto	l2186
  4412  001874                     u1640:
  4413  001874  500A               	movf	___fltol@exp1^0,w,c
  4414  001876  0A80               	xorlw	128
  4415  001878  0F97               	addlw	151
  4416  00187A  B0D8               	btfsc	status,0,c
  4417  00187C  EF42  F00C         	goto	u1651
  4418  001880  EF44  F00C         	goto	u1650
  4419  001884                     u1651:
  4420  001884  EF46  F00C         	goto	l2182
  4421  001888                     u1650:
  4422  001888  EF09  F00C         	goto	l2162
  4423  00188C                     l2182:
  4424  00188C  90D8               	bcf	status,0,c
  4425  00188E  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4426  001890  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4427  001892  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4428  001894  3201               	rrcf	___fltol@f1^0,f,c
  4429  001896  3E0A               	incfsz	___fltol@exp1^0,f,c
  4430  001898  EF46  F00C         	goto	l2182
  4431  00189C  EF68  F00C         	goto	l2196
  4432  0018A0                     l2186:
  4433  0018A0  0E1F               	movlw	31
  4434  0018A2  640A               	cpfsgt	___fltol@exp1^0,c
  4435  0018A4  EF56  F00C         	goto	u1661
  4436  0018A8  EF58  F00C         	goto	u1660
  4437  0018AC                     u1661:
  4438  0018AC  EF60  F00C         	goto	l2194
  4439  0018B0                     u1660:
  4440  0018B0  EF09  F00C         	goto	l2162
  4441  0018B4                     l2192:
  4442  0018B4  90D8               	bcf	status,0,c
  4443  0018B6  3601               	rlcf	___fltol@f1^0,f,c
  4444  0018B8  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4445  0018BA  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4446  0018BC  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4447  0018BE  060A               	decf	___fltol@exp1^0,f,c
  4448  0018C0                     l2194:
  4449  0018C0  500A               	movf	___fltol@exp1^0,w,c
  4450  0018C2  A4D8               	btfss	status,2,c
  4451  0018C4  EF66  F00C         	goto	u1671
  4452  0018C8  EF68  F00C         	goto	u1670
  4453  0018CC                     u1671:
  4454  0018CC  EF5A  F00C         	goto	l2192
  4455  0018D0                     u1670:
  4456  0018D0                     l2196:
  4457  0018D0  5009               	movf	___fltol@sign1^0,w,c
  4458  0018D2  B4D8               	btfsc	status,2,c
  4459  0018D4  EF6E  F00C         	goto	u1681
  4460  0018D8  EF70  F00C         	goto	u1680
  4461  0018DC                     u1681:
  4462  0018DC  EF78  F00C         	goto	l2200
  4463  0018E0                     u1680:
  4464  0018E0  1E04               	comf	(___fltol@f1+3)^0,f,c
  4465  0018E2  1E03               	comf	(___fltol@f1+2)^0,f,c
  4466  0018E4  1E02               	comf	(___fltol@f1+1)^0,f,c
  4467  0018E6  6C01               	negf	___fltol@f1^0,c
  4468  0018E8  0E00               	movlw	0
  4469  0018EA  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4470  0018EC  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4471  0018EE  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4472  0018F0                     l2200:
  4473  0018F0  C001  F001         	movff	___fltol@f1,?___fltol
  4474  0018F4  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4475  0018F8  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4476  0018FC  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4477  001900                     l608:
  4478  001900  0012               	return		;funcret
  4479  001902                     __end_of___fltol:
  4480                           	callstack 0
  4481                           
  4482 ;; *************** function _CheckBit *****************
  4483 ;; Defined at:
  4484 ;;		line 18 in file "regoperations.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;  port            2    0[COMRAM] unsigned int 
  4487 ;;  pin             2    2[COMRAM] unsigned int 
  4488 ;; Auto vars:     Size  Location     Type
  4489 ;;		None
  4490 ;; Return value:  Size  Location     Type
  4491 ;;                  2    0[COMRAM] int 
  4492 ;; Registers used:
  4493 ;;		wreg, status,2, status,0
  4494 ;; Tracked objects:
  4495 ;;		On entry : 0/0
  4496 ;;		On exit  : 0/0
  4497 ;;		Unchanged: 0/0
  4498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4499 ;;      Params:         4       0       0       0       0       0       0
  4500 ;;      Locals:         0       0       0       0       0       0       0
  4501 ;;      Temps:          3       0       0       0       0       0       0
  4502 ;;      Totals:         7       0       0       0       0       0       0
  4503 ;;Total ram usage:        7 bytes
  4504 ;; Hardware stack levels used: 1
  4505 ;; Hardware stack levels required when called: 1
  4506 ;; This function calls:
  4507 ;;		Nothing
  4508 ;; This function is called by:
  4509 ;;		_Change_Mode
  4510 ;;		_Debounce
  4511 ;; This function uses a non-reentrant model
  4512 ;;
  4513                           
  4514                           	psect	text24
  4515  002282                     __ptext24:
  4516                           	callstack 0
  4517  002282                     _CheckBit:
  4518                           	callstack 27
  4519  002282                     
  4520                           ;regoperations.c: 20: return ((port >> pin) & 1U);
  4521  002282  C003  F005         	movff	CheckBit@pin,??_CheckBit
  4522  002286  C001  F006         	movff	CheckBit@port,??_CheckBit+1
  4523  00228A  C002  F007         	movff	CheckBit@port+1,??_CheckBit+2
  4524  00228E  2A05               	incf	??_CheckBit^0,f,c
  4525  002290  EF4D  F011         	goto	u1754
  4526  002294                     u1755:
  4527  002294  90D8               	bcf	status,0,c
  4528  002296  3207               	rrcf	(??_CheckBit+2)^0,f,c
  4529  002298  3206               	rrcf	(??_CheckBit+1)^0,f,c
  4530  00229A                     u1754:
  4531  00229A  2E05               	decfsz	??_CheckBit^0,f,c
  4532  00229C  EF4A  F011         	goto	u1755
  4533  0022A0  0E01               	movlw	1
  4534  0022A2  1406               	andwf	(??_CheckBit+1)^0,w,c
  4535  0022A4  6E01               	movwf	?_CheckBit^0,c
  4536  0022A6  6A02               	clrf	(?_CheckBit+1)^0,c
  4537  0022A8  0012               	return		;funcret
  4538  0022AA                     __end_of_CheckBit:
  4539                           	callstack 0
  4540                           
  4541 ;; *************** function _Lcd_Init *****************
  4542 ;; Defined at:
  4543 ;;		line 54 in file "flexlcd.h"
  4544 ;; Parameters:    Size  Location     Type
  4545 ;;		None
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;  data            1    4[COMRAM] unsigned char 
  4548 ;; Return value:  Size  Location     Type
  4549 ;;                  1    wreg      void 
  4550 ;; Registers used:
  4551 ;;		wreg, status,2, status,0, cstack
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4557 ;;      Params:         0       0       0       0       0       0       0
  4558 ;;      Locals:         1       0       0       0       0       0       0
  4559 ;;      Temps:          1       0       0       0       0       0       0
  4560 ;;      Totals:         2       0       0       0       0       0       0
  4561 ;;Total ram usage:        2 bytes
  4562 ;; Hardware stack levels used: 1
  4563 ;; Hardware stack levels required when called: 2
  4564 ;; This function calls:
  4565 ;;		_Lcd_Cmd
  4566 ;; This function is called by:
  4567 ;;		_main
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           	psect	text25
  4572  0015E0                     __ptext25:
  4573                           	callstack 0
  4574  0015E0                     _Lcd_Init:
  4575                           	callstack 28
  4576  0015E0                     
  4577                           ;flexlcd.h: 55: unsigned char data;;flexlcd.h: 56: TRISDbits.TRISD7 = 0;
  4578  0015E0  9E95               	bcf	149,7,c	;volatile
  4579                           
  4580                           ;flexlcd.h: 57: TRISDbits.TRISD6 = 0;
  4581  0015E2  9C95               	bcf	149,6,c	;volatile
  4582                           
  4583                           ;flexlcd.h: 58: TRISDbits.TRISD5 = 0;
  4584  0015E4  9A95               	bcf	149,5,c	;volatile
  4585                           
  4586                           ;flexlcd.h: 59: TRISDbits.TRISD4 = 0;
  4587  0015E6  9895               	bcf	149,4,c	;volatile
  4588                           
  4589                           ;flexlcd.h: 60: TRISEbits.TRISE2 = 0;
  4590  0015E8  9496               	bcf	150,2,c	;volatile
  4591                           
  4592                           ;flexlcd.h: 61: TRISEbits.TRISE1 = 0;
  4593  0015EA  9296               	bcf	150,1,c	;volatile
  4594                           
  4595                           ;flexlcd.h: 62: PORTDbits.RD7 = 0;
  4596  0015EC  9E83               	bcf	131,7,c	;volatile
  4597                           
  4598                           ;flexlcd.h: 63: PORTDbits.RD6 = 0;
  4599  0015EE  9C83               	bcf	131,6,c	;volatile
  4600                           
  4601                           ;flexlcd.h: 64: PORTDbits.RD5 = 0;
  4602  0015F0  9A83               	bcf	131,5,c	;volatile
  4603                           
  4604                           ;flexlcd.h: 65: PORTDbits.RD4 = 0;
  4605  0015F2  9883               	bcf	131,4,c	;volatile
  4606                           
  4607                           ;flexlcd.h: 66: PORTEbits.RE1 = 0;
  4608  0015F4  9284               	bcf	132,1,c	;volatile
  4609                           
  4610                           ;flexlcd.h: 67: PORTEbits.RE2 = 0;
  4611  0015F6  9484               	bcf	132,2,c	;volatile
  4612  0015F8                     
  4613                           ;flexlcd.h: 68: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  4614  0015F8  0E0F               	movlw	15
  4615  0015FA  6E04               	movwf	??_Lcd_Init^0,c
  4616  0015FC  0E48               	movlw	72
  4617  0015FE                     u2837:
  4618  0015FE  2EE8               	decfsz	wreg,f,c
  4619  001600  D7FE               	bra	u2837
  4620  001602  2E04               	decfsz	??_Lcd_Init^0,f,c
  4621  001604  D7FC               	bra	u2837
  4622                           
  4623                           ;flexlcd.h: 69: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  4624  001606  0E0F               	movlw	15
  4625  001608  6E04               	movwf	??_Lcd_Init^0,c
  4626  00160A  0E48               	movlw	72
  4627  00160C                     u2847:
  4628  00160C  2EE8               	decfsz	wreg,f,c
  4629  00160E  D7FE               	bra	u2847
  4630  001610  2E04               	decfsz	??_Lcd_Init^0,f,c
  4631  001612  D7FC               	bra	u2847
  4632                           
  4633                           ;flexlcd.h: 70: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  4634  001614  0E0F               	movlw	15
  4635  001616  6E04               	movwf	??_Lcd_Init^0,c
  4636  001618  0E48               	movlw	72
  4637  00161A                     u2857:
  4638  00161A  2EE8               	decfsz	wreg,f,c
  4639  00161C  D7FE               	bra	u2857
  4640  00161E  2E04               	decfsz	??_Lcd_Init^0,f,c
  4641  001620  D7FC               	bra	u2857
  4642                           
  4643                           ;flexlcd.h: 71: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  4644  001622  0E0F               	movlw	15
  4645  001624  6E04               	movwf	??_Lcd_Init^0,c
  4646  001626  0E48               	movlw	72
  4647  001628                     u2867:
  4648  001628  2EE8               	decfsz	wreg,f,c
  4649  00162A  D7FE               	bra	u2867
  4650  00162C  2E04               	decfsz	??_Lcd_Init^0,f,c
  4651  00162E  D7FC               	bra	u2867
  4652                           
  4653                           ;flexlcd.h: 72: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  4654  001630  0E0F               	movlw	15
  4655  001632  6E04               	movwf	??_Lcd_Init^0,c
  4656  001634  0E48               	movlw	72
  4657  001636                     u2877:
  4658  001636  2EE8               	decfsz	wreg,f,c
  4659  001638  D7FE               	bra	u2877
  4660  00163A  2E04               	decfsz	??_Lcd_Init^0,f,c
  4661  00163C  D7FC               	bra	u2877
  4662                           
  4663                           ;flexlcd.h: 73: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  4664  00163E  0E0F               	movlw	15
  4665  001640  6E04               	movwf	??_Lcd_Init^0,c
  4666  001642  0E48               	movlw	72
  4667  001644                     u2887:
  4668  001644  2EE8               	decfsz	wreg,f,c
  4669  001646  D7FE               	bra	u2887
  4670  001648  2E04               	decfsz	??_Lcd_Init^0,f,c
  4671  00164A  D7FC               	bra	u2887
  4672  00164C                     
  4673                           ;flexlcd.h: 74: for(data = 1; data < 4; data ++)
  4674  00164C  0E01               	movlw	1
  4675  00164E  6E05               	movwf	Lcd_Init@data^0,c
  4676  001650                     l89:
  4677                           
  4678                           ;flexlcd.h: 75: {;flexlcd.h: 76: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1
      +                          ; PORTDbits.RD4 = 1; PORTEbits.RE1 = 0;
  4679  001650  9E83               	bcf	131,7,c	;volatile
  4680  001652  9C83               	bcf	131,6,c	;volatile
  4681  001654  8A83               	bsf	131,5,c	;volatile
  4682  001656  8883               	bsf	131,4,c	;volatile
  4683  001658  9284               	bcf	132,1,c	;volatile
  4684                           
  4685                           ;flexlcd.h: 77: PORTEbits.RE2 = 0; PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 =
      +                           1; PORTDbits.RD4 = 1;
  4686  00165A  9484               	bcf	132,2,c	;volatile
  4687  00165C  9E83               	bcf	131,7,c	;volatile
  4688  00165E  9C83               	bcf	131,6,c	;volatile
  4689  001660  8A83               	bsf	131,5,c	;volatile
  4690  001662  8883               	bsf	131,4,c	;volatile
  4691                           
  4692                           ;flexlcd.h: 78: PORTEbits.RE1 = 1; PORTEbits.RE2 = 0;
  4693  001664  8284               	bsf	132,1,c	;volatile
  4694  001666  9484               	bcf	132,2,c	;volatile
  4695  001668                     
  4696                           ;flexlcd.h: 79: _delay((unsigned long)((5)*(8000000/4000000.0)));
  4697  001668  0E03               	movlw	3
  4698  00166A                     u2897:
  4699  00166A  2EE8               	decfsz	wreg,f,c
  4700  00166C  D7FE               	bra	u2897
  4701  00166E  F000               	nop	
  4702  001670                     
  4703                           ;flexlcd.h: 80: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 =
      +                           1; PORTEbits.RE1 = 0;
  4704  001670  9E83               	bcf	131,7,c	;volatile
  4705  001672  9C83               	bcf	131,6,c	;volatile
  4706  001674  8A83               	bsf	131,5,c	;volatile
  4707  001676  8883               	bsf	131,4,c	;volatile
  4708  001678  9284               	bcf	132,1,c	;volatile
  4709  00167A                     
  4710                           ;flexlcd.h: 81: PORTEbits.RE2 = 0;
  4711  00167A  9484               	bcf	132,2,c	;volatile
  4712                           
  4713                           ;flexlcd.h: 82: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  4714  00167C  0E0F               	movlw	15
  4715  00167E  6E04               	movwf	??_Lcd_Init^0,c
  4716  001680  0E48               	movlw	72
  4717  001682                     u2907:
  4718  001682  2EE8               	decfsz	wreg,f,c
  4719  001684  D7FE               	bra	u2907
  4720  001686  2E04               	decfsz	??_Lcd_Init^0,f,c
  4721  001688  D7FC               	bra	u2907
  4722  00168A  2A05               	incf	Lcd_Init@data^0,f,c
  4723  00168C  0E03               	movlw	3
  4724  00168E  6405               	cpfsgt	Lcd_Init@data^0,c
  4725  001690  EF4C  F00B         	goto	u2671
  4726  001694  EF4E  F00B         	goto	u2670
  4727  001698                     u2671:
  4728  001698  EF28  F00B         	goto	l89
  4729  00169C                     u2670:
  4730  00169C                     
  4731                           ;flexlcd.h: 83: };flexlcd.h: 84: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1
      +                          ; PORTDbits.RD4 = 0; PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
  4732  00169C  9E83               	bcf	131,7,c	;volatile
  4733  00169E  9C83               	bcf	131,6,c	;volatile
  4734  0016A0  8A83               	bsf	131,5,c	;volatile
  4735  0016A2  9883               	bcf	131,4,c	;volatile
  4736  0016A4  9284               	bcf	132,1,c	;volatile
  4737  0016A6  9484               	bcf	132,2,c	;volatile
  4738                           
  4739                           ;flexlcd.h: 85: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 =
      +                           0; PORTEbits.RE1 = 1; PORTEbits.RE2 = 0;
  4740  0016A8  9E83               	bcf	131,7,c	;volatile
  4741  0016AA  9C83               	bcf	131,6,c	;volatile
  4742  0016AC  8A83               	bsf	131,5,c	;volatile
  4743  0016AE  9883               	bcf	131,4,c	;volatile
  4744  0016B0  8284               	bsf	132,1,c	;volatile
  4745  0016B2  9484               	bcf	132,2,c	;volatile
  4746  0016B4                     
  4747                           ;flexlcd.h: 86: _delay((unsigned long)((5)*(8000000/4000000.0)));
  4748  0016B4  0E03               	movlw	3
  4749  0016B6                     u2917:
  4750  0016B6  2EE8               	decfsz	wreg,f,c
  4751  0016B8  D7FE               	bra	u2917
  4752  0016BA  F000               	nop	
  4753  0016BC                     
  4754                           ;flexlcd.h: 87: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 =
      +                           0; PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
  4755  0016BC  9E83               	bcf	131,7,c	;volatile
  4756  0016BE  9C83               	bcf	131,6,c	;volatile
  4757  0016C0  8A83               	bsf	131,5,c	;volatile
  4758  0016C2  9883               	bcf	131,4,c	;volatile
  4759  0016C4  9284               	bcf	132,1,c	;volatile
  4760  0016C6  9484               	bcf	132,2,c	;volatile
  4761                           
  4762                           ;flexlcd.h: 88: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  4763  0016C8  0E0F               	movlw	15
  4764  0016CA  6E04               	movwf	??_Lcd_Init^0,c
  4765  0016CC  0E48               	movlw	72
  4766  0016CE                     u2927:
  4767  0016CE  2EE8               	decfsz	wreg,f,c
  4768  0016D0  D7FE               	bra	u2927
  4769  0016D2  2E04               	decfsz	??_Lcd_Init^0,f,c
  4770  0016D4  D7FC               	bra	u2927
  4771  0016D6  0E28               	movlw	40
  4772  0016D8  EC5A  F00A         	call	_Lcd_Cmd
  4773  0016DC  0E10               	movlw	16
  4774  0016DE  EC5A  F00A         	call	_Lcd_Cmd
  4775  0016E2  0E01               	movlw	1
  4776  0016E4  EC5A  F00A         	call	_Lcd_Cmd
  4777  0016E8  0E0F               	movlw	15
  4778  0016EA  EC5A  F00A         	call	_Lcd_Cmd
  4779  0016EE  0012               	return		;funcret
  4780  0016F0                     __end_of_Lcd_Init:
  4781                           	callstack 0
  4782                           
  4783 ;; *************** function _Lcd_Cmd *****************
  4784 ;; Defined at:
  4785 ;;		line 152 in file "flexlcd.h"
  4786 ;; Parameters:    Size  Location     Type
  4787 ;;  data            1    wreg     unsigned char 
  4788 ;; Auto vars:     Size  Location     Type
  4789 ;;  data            1    2[COMRAM] unsigned char 
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  1    wreg      void 
  4792 ;; Registers used:
  4793 ;;		wreg, status,2, status,0
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4799 ;;      Params:         0       0       0       0       0       0       0
  4800 ;;      Locals:         1       0       0       0       0       0       0
  4801 ;;      Temps:          2       0       0       0       0       0       0
  4802 ;;      Totals:         3       0       0       0       0       0       0
  4803 ;;Total ram usage:        3 bytes
  4804 ;; Hardware stack levels used: 1
  4805 ;; Hardware stack levels required when called: 1
  4806 ;; This function calls:
  4807 ;;		Nothing
  4808 ;; This function is called by:
  4809 ;;		_Lcd_Init
  4810 ;;		_Lcd_Out
  4811 ;;		_main
  4812 ;;		_Lcd_Out2
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           
  4816                           	psect	text26
  4817  0014B4                     __ptext26:
  4818                           	callstack 0
  4819  0014B4                     _Lcd_Cmd:
  4820                           	callstack 26
  4821                           
  4822                           ;incstack = 0
  4823                           ;Lcd_Cmd@data stored from wreg
  4824  0014B4  6E03               	movwf	Lcd_Cmd@data^0,c
  4825  0014B6                     
  4826                           ;flexlcd.h: 153: PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
  4827  0014B6  9284               	bcf	132,1,c	;volatile
  4828  0014B8  9484               	bcf	132,2,c	;volatile
  4829  0014BA                     
  4830                           ;flexlcd.h: 154: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
  4831  0014BA  6A01               	clrf	??_Lcd_Cmd^0,c
  4832  0014BC  AE03               	btfss	Lcd_Cmd@data^0,7,c
  4833  0014BE  D001               	bra	u1415
  4834  0014C0  2A01               	incf	??_Lcd_Cmd^0,f,c
  4835  0014C2                     u1415:
  4836  0014C2  0E01               	movlw	1
  4837  0014C4  1601               	andwf	??_Lcd_Cmd^0,f,c
  4838  0014C6  3201               	rrcf	??_Lcd_Cmd^0,f,c
  4839  0014C8  3201               	rrcf	??_Lcd_Cmd^0,f,c
  4840  0014CA  5083               	movf	131,w,c	;volatile
  4841  0014CC  1801               	xorwf	??_Lcd_Cmd^0,w,c
  4842  0014CE  0B7F               	andlw	-129
  4843  0014D0  1801               	xorwf	??_Lcd_Cmd^0,w,c
  4844  0014D2  6E83               	movwf	131,c	;volatile
  4845  0014D4  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  4846  0014D8  0E06               	movlw	6
  4847  0014DA  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
  4848  0014DC                     u1425:
  4849  0014DC  90D8               	bcf	status,0,c
  4850  0014DE  3201               	rrcf	??_Lcd_Cmd^0,f,c
  4851  0014E0  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  4852  0014E2  EF6E  F00A         	goto	u1425
  4853  0014E6  0E01               	movlw	1
  4854  0014E8  1601               	andwf	??_Lcd_Cmd^0,f,c
  4855  0014EA  3A01               	swapf	??_Lcd_Cmd^0,f,c
  4856  0014EC  4601               	rlncf	??_Lcd_Cmd^0,f,c
  4857  0014EE  4601               	rlncf	??_Lcd_Cmd^0,f,c
  4858  0014F0  5083               	movf	131,w,c	;volatile
  4859  0014F2  1801               	xorwf	??_Lcd_Cmd^0,w,c
  4860  0014F4  0BBF               	andlw	-65
  4861  0014F6  1801               	xorwf	??_Lcd_Cmd^0,w,c
  4862  0014F8  6E83               	movwf	131,c	;volatile
  4863                           
  4864                           ;flexlcd.h: 155: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
  4865  0014FA  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  4866  0014FE  0E05               	movlw	5
  4867  001500  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
  4868  001502                     u1435:
  4869  001502  90D8               	bcf	status,0,c
  4870  001504  3201               	rrcf	??_Lcd_Cmd^0,f,c
  4871  001506  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  4872  001508  EF81  F00A         	goto	u1435
  4873  00150C  0E01               	movlw	1
  4874  00150E  1601               	andwf	??_Lcd_Cmd^0,f,c
  4875  001510  3A01               	swapf	??_Lcd_Cmd^0,f,c
  4876  001512  4601               	rlncf	??_Lcd_Cmd^0,f,c
  4877  001514  5083               	movf	131,w,c	;volatile
  4878  001516  1801               	xorwf	??_Lcd_Cmd^0,w,c
  4879  001518  0BDF               	andlw	-33
  4880  00151A  1801               	xorwf	??_Lcd_Cmd^0,w,c
  4881  00151C  6E83               	movwf	131,c	;volatile
  4882  00151E  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  4883  001522  3A01               	swapf	??_Lcd_Cmd^0,f,c
  4884  001524  0E0F               	movlw	15
  4885  001526  1601               	andwf	??_Lcd_Cmd^0,f,c
  4886  001528  0E01               	movlw	1
  4887  00152A  1601               	andwf	??_Lcd_Cmd^0,f,c
  4888  00152C  3A01               	swapf	??_Lcd_Cmd^0,f,c
  4889  00152E  5083               	movf	131,w,c	;volatile
  4890  001530  1801               	xorwf	??_Lcd_Cmd^0,w,c
  4891  001532  0BEF               	andlw	-17
  4892  001534  1801               	xorwf	??_Lcd_Cmd^0,w,c
  4893  001536  6E83               	movwf	131,c	;volatile
  4894  001538                     
  4895                           ;flexlcd.h: 156: _delay(10);
  4896  001538  0E03               	movlw	3
  4897  00153A                     u2937:
  4898  00153A  2EE8               	decfsz	wreg,f,c
  4899  00153C  D7FE               	bra	u2937
  4900  00153E  F000               	nop	
  4901  001540                     
  4902                           ;flexlcd.h: 157: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  4903  001540  8284               	bsf	132,1,c	;volatile
  4904  001542  0E03               	movlw	3
  4905  001544                     u2947:
  4906  001544  2EE8               	decfsz	wreg,f,c
  4907  001546  D7FE               	bra	u2947
  4908  001548  F000               	nop	
  4909  00154A  9284               	bcf	132,1,c	;volatile
  4910                           
  4911                           ;flexlcd.h: 158: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
  4912  00154C  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  4913  001550  90D8               	bcf	status,0,c
  4914  001552  3201               	rrcf	??_Lcd_Cmd^0,f,c
  4915  001554  90D8               	bcf	status,0,c
  4916  001556  3201               	rrcf	??_Lcd_Cmd^0,f,c
  4917  001558  90D8               	bcf	status,0,c
  4918  00155A  3201               	rrcf	??_Lcd_Cmd^0,f,c
  4919  00155C  0E01               	movlw	1
  4920  00155E  1601               	andwf	??_Lcd_Cmd^0,f,c
  4921  001560  3201               	rrcf	??_Lcd_Cmd^0,f,c
  4922  001562  3201               	rrcf	??_Lcd_Cmd^0,f,c
  4923  001564  5083               	movf	131,w,c	;volatile
  4924  001566  1801               	xorwf	??_Lcd_Cmd^0,w,c
  4925  001568  0B7F               	andlw	-129
  4926  00156A  1801               	xorwf	??_Lcd_Cmd^0,w,c
  4927  00156C  6E83               	movwf	131,c	;volatile
  4928  00156E  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  4929  001572  90D8               	bcf	status,0,c
  4930  001574  3201               	rrcf	??_Lcd_Cmd^0,f,c
  4931  001576  90D8               	bcf	status,0,c
  4932  001578  3201               	rrcf	??_Lcd_Cmd^0,f,c
  4933  00157A  0E01               	movlw	1
  4934  00157C  1601               	andwf	??_Lcd_Cmd^0,f,c
  4935  00157E  3A01               	swapf	??_Lcd_Cmd^0,f,c
  4936  001580  4601               	rlncf	??_Lcd_Cmd^0,f,c
  4937  001582  4601               	rlncf	??_Lcd_Cmd^0,f,c
  4938  001584  5083               	movf	131,w,c	;volatile
  4939  001586  1801               	xorwf	??_Lcd_Cmd^0,w,c
  4940  001588  0BBF               	andlw	-65
  4941  00158A  1801               	xorwf	??_Lcd_Cmd^0,w,c
  4942  00158C  6E83               	movwf	131,c	;volatile
  4943                           
  4944                           ;flexlcd.h: 159: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
  4945  00158E  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  4946  001592  90D8               	bcf	status,0,c
  4947  001594  3201               	rrcf	??_Lcd_Cmd^0,f,c
  4948  001596  0E01               	movlw	1
  4949  001598  1601               	andwf	??_Lcd_Cmd^0,f,c
  4950  00159A  3A01               	swapf	??_Lcd_Cmd^0,f,c
  4951  00159C  4601               	rlncf	??_Lcd_Cmd^0,f,c
  4952  00159E  5083               	movf	131,w,c	;volatile
  4953  0015A0  1801               	xorwf	??_Lcd_Cmd^0,w,c
  4954  0015A2  0BDF               	andlw	-33
  4955  0015A4  1801               	xorwf	??_Lcd_Cmd^0,w,c
  4956  0015A6  6E83               	movwf	131,c	;volatile
  4957  0015A8  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  4958  0015AC  0E01               	movlw	1
  4959  0015AE  1601               	andwf	??_Lcd_Cmd^0,f,c
  4960  0015B0  3A01               	swapf	??_Lcd_Cmd^0,f,c
  4961  0015B2  5083               	movf	131,w,c	;volatile
  4962  0015B4  1801               	xorwf	??_Lcd_Cmd^0,w,c
  4963  0015B6  0BEF               	andlw	-17
  4964  0015B8  1801               	xorwf	??_Lcd_Cmd^0,w,c
  4965  0015BA  6E83               	movwf	131,c	;volatile
  4966  0015BC                     
  4967                           ;flexlcd.h: 160: _delay(10);
  4968  0015BC  0E03               	movlw	3
  4969  0015BE                     u2957:
  4970  0015BE  2EE8               	decfsz	wreg,f,c
  4971  0015C0  D7FE               	bra	u2957
  4972  0015C2  F000               	nop	
  4973  0015C4                     
  4974                           ;flexlcd.h: 161: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  4975  0015C4  8284               	bsf	132,1,c	;volatile
  4976  0015C6  0E03               	movlw	3
  4977  0015C8                     u2967:
  4978  0015C8  2EE8               	decfsz	wreg,f,c
  4979  0015CA  D7FE               	bra	u2967
  4980  0015CC  F000               	nop	
  4981  0015CE  9284               	bcf	132,1,c	;volatile
  4982  0015D0                     
  4983                           ;flexlcd.h: 162: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  4984  0015D0  0E0F               	movlw	15
  4985  0015D2  6E01               	movwf	??_Lcd_Cmd^0,c
  4986  0015D4  0E48               	movlw	72
  4987  0015D6                     u2977:
  4988  0015D6  2EE8               	decfsz	wreg,f,c
  4989  0015D8  D7FE               	bra	u2977
  4990  0015DA  2E01               	decfsz	??_Lcd_Cmd^0,f,c
  4991  0015DC  D7FC               	bra	u2977
  4992  0015DE  0012               	return		;funcret
  4993  0015E0                     __end_of_Lcd_Cmd:
  4994                           	callstack 0
  4995                           
  4996 ;; *************** function _Initialize_Tanks *****************
  4997 ;; Defined at:
  4998 ;;		line 253 in file "main.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;		None
  5001 ;; Auto vars:     Size  Location     Type
  5002 ;;		None
  5003 ;; Return value:  Size  Location     Type
  5004 ;;                  1    wreg      void 
  5005 ;; Registers used:
  5006 ;;		wreg, status,2
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/0
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5012 ;;      Params:         0       0       0       0       0       0       0
  5013 ;;      Locals:         0       0       0       0       0       0       0
  5014 ;;      Temps:          0       0       0       0       0       0       0
  5015 ;;      Totals:         0       0       0       0       0       0       0
  5016 ;;Total ram usage:        0 bytes
  5017 ;; Hardware stack levels used: 1
  5018 ;; Hardware stack levels required when called: 1
  5019 ;; This function calls:
  5020 ;;		Nothing
  5021 ;; This function is called by:
  5022 ;;		_main
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           	psect	text27
  5027  002096                     __ptext27:
  5028                           	callstack 0
  5029  002096                     _Initialize_Tanks:
  5030                           	callstack 29
  5031  002096                     
  5032                           ;main.c: 256: tank1.level = 0;
  5033  002096  0E00               	movlw	0
  5034  002098  6E41               	movwf	_tank1^0,c	;volatile
  5035  00209A  0E00               	movlw	0
  5036  00209C  6E42               	movwf	(_tank1+1)^0,c	;volatile
  5037  00209E  0E00               	movlw	0
  5038  0020A0  6E43               	movwf	(_tank1+2)^0,c	;volatile
  5039  0020A2  0E00               	movlw	0
  5040  0020A4  6E44               	movwf	(_tank1+3)^0,c	;volatile
  5041                           
  5042                           ;main.c: 257: tank1.min_level = 0;
  5043  0020A6  0E00               	movlw	0
  5044  0020A8  6E45               	movwf	(_tank1+4)^0,c	;volatile
  5045  0020AA  0E00               	movlw	0
  5046  0020AC  6E46               	movwf	(_tank1+5)^0,c	;volatile
  5047  0020AE  0E00               	movlw	0
  5048  0020B0  6E47               	movwf	(_tank1+6)^0,c	;volatile
  5049  0020B2  0E00               	movlw	0
  5050  0020B4  6E48               	movwf	(_tank1+7)^0,c	;volatile
  5051                           
  5052                           ;main.c: 258: tank1.max_level = 100;
  5053  0020B6  0E00               	movlw	0
  5054  0020B8  6E49               	movwf	(_tank1+8)^0,c	;volatile
  5055  0020BA  0E00               	movlw	0
  5056  0020BC  6E4A               	movwf	(_tank1+9)^0,c	;volatile
  5057  0020BE  0EC8               	movlw	200
  5058  0020C0  6E4B               	movwf	(_tank1+10)^0,c	;volatile
  5059  0020C2  0E42               	movlw	66
  5060  0020C4  6E4C               	movwf	(_tank1+11)^0,c	;volatile
  5061                           
  5062                           ;main.c: 260: tank2.level = 0;
  5063  0020C6  0E00               	movlw	0
  5064  0020C8  6E35               	movwf	_tank2^0,c	;volatile
  5065  0020CA  0E00               	movlw	0
  5066  0020CC  6E36               	movwf	(_tank2+1)^0,c	;volatile
  5067  0020CE  0E00               	movlw	0
  5068  0020D0  6E37               	movwf	(_tank2+2)^0,c	;volatile
  5069  0020D2  0E00               	movlw	0
  5070  0020D4  6E38               	movwf	(_tank2+3)^0,c	;volatile
  5071                           
  5072                           ;main.c: 261: tank2.min_level = 0;
  5073  0020D6  0E00               	movlw	0
  5074  0020D8  6E39               	movwf	(_tank2+4)^0,c	;volatile
  5075  0020DA  0E00               	movlw	0
  5076  0020DC  6E3A               	movwf	(_tank2+5)^0,c	;volatile
  5077  0020DE  0E00               	movlw	0
  5078  0020E0  6E3B               	movwf	(_tank2+6)^0,c	;volatile
  5079  0020E2  0E00               	movlw	0
  5080  0020E4  6E3C               	movwf	(_tank2+7)^0,c	;volatile
  5081                           
  5082                           ;main.c: 262: tank2.max_level = 90;
  5083  0020E6  0E00               	movlw	0
  5084  0020E8  6E3D               	movwf	(_tank2+8)^0,c	;volatile
  5085  0020EA  0E00               	movlw	0
  5086  0020EC  6E3E               	movwf	(_tank2+9)^0,c	;volatile
  5087  0020EE  0EB4               	movlw	180
  5088  0020F0  6E3F               	movwf	(_tank2+10)^0,c	;volatile
  5089  0020F2  0E42               	movlw	66
  5090  0020F4  6E40               	movwf	(_tank2+11)^0,c	;volatile
  5091  0020F6  0012               	return		;funcret
  5092  0020F8                     __end_of_Initialize_Tanks:
  5093                           	callstack 0
  5094                           
  5095 ;; *************** function _Configure_Registers *****************
  5096 ;; Defined at:
  5097 ;;		line 281 in file "main.c"
  5098 ;; Parameters:    Size  Location     Type
  5099 ;;		None
  5100 ;; Auto vars:     Size  Location     Type
  5101 ;;		None
  5102 ;; Return value:  Size  Location     Type
  5103 ;;                  1    wreg      void 
  5104 ;; Registers used:
  5105 ;;		wreg, status,2, cstack
  5106 ;; Tracked objects:
  5107 ;;		On entry : 0/0
  5108 ;;		On exit  : 0/0
  5109 ;;		Unchanged: 0/0
  5110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5111 ;;      Params:         0       0       0       0       0       0       0
  5112 ;;      Locals:         0       0       0       0       0       0       0
  5113 ;;      Temps:          0       0       0       0       0       0       0
  5114 ;;      Totals:         0       0       0       0       0       0       0
  5115 ;;Total ram usage:        0 bytes
  5116 ;; Hardware stack levels used: 1
  5117 ;; Hardware stack levels required when called: 2
  5118 ;; This function calls:
  5119 ;;		_Configure_External_Interrupt
  5120 ;;		_Configure_Timer_Interrupt
  5121 ;; This function is called by:
  5122 ;;		_main
  5123 ;; This function uses a non-reentrant model
  5124 ;;
  5125                           
  5126                           	psect	text28
  5127  002140                     __ptext28:
  5128                           	callstack 0
  5129  002140                     _Configure_Registers:
  5130                           	callstack 28
  5131  002140                     
  5132                           ;main.c: 283: INTCON2bits.RBPU = 0;
  5133  002140  9EF1               	bcf	241,7,c	;volatile
  5134  002142                     
  5135                           ;main.c: 287: TRISB = 0x3f;
  5136  002142  0E3F               	movlw	63
  5137  002144  6E93               	movwf	147,c	;volatile
  5138                           
  5139                           ;main.c: 288: TRISC = 0x00;
  5140  002146  0E00               	movlw	0
  5141  002148  6E94               	movwf	148,c	;volatile
  5142                           
  5143                           ;main.c: 289: TRISD = 0x00;
  5144  00214A  0E00               	movlw	0
  5145  00214C  6E95               	movwf	149,c	;volatile
  5146                           
  5147                           ;main.c: 290: TRISE = 0x00;
  5148  00214E  0E00               	movlw	0
  5149  002150  6E96               	movwf	150,c	;volatile
  5150                           
  5151                           ;main.c: 293: PORTB = 0; LATB = 0;
  5152  002152  0E00               	movlw	0
  5153  002154  6E81               	movwf	129,c	;volatile
  5154  002156  0E00               	movlw	0
  5155  002158  6E8A               	movwf	138,c	;volatile
  5156                           
  5157                           ;main.c: 294: PORTC = 0; LATC = 0;
  5158  00215A  0E00               	movlw	0
  5159  00215C  6E82               	movwf	130,c	;volatile
  5160  00215E  0E00               	movlw	0
  5161  002160  6E8B               	movwf	139,c	;volatile
  5162                           
  5163                           ;main.c: 295: PORTD = 0; LATD = 0;
  5164  002162  0E00               	movlw	0
  5165  002164  6E83               	movwf	131,c	;volatile
  5166  002166  0E00               	movlw	0
  5167  002168  6E8C               	movwf	140,c	;volatile
  5168                           
  5169                           ;main.c: 296: PORTE = 0; LATE = 0;
  5170  00216A  0E00               	movlw	0
  5171  00216C  6E84               	movwf	132,c	;volatile
  5172  00216E  0E00               	movlw	0
  5173  002170  6E8D               	movwf	141,c	;volatile
  5174  002172                     
  5175                           ;main.c: 298: (INTCONbits.GIE = 1);
  5176  002172  8EF2               	bsf	242,7,c	;volatile
  5177  002174                     
  5178                           ;main.c: 299: Configure_External_Interrupt();
  5179  002174  EC97  F011         	call	_Configure_External_Interrupt	;wreg free
  5180                           
  5181                           ;main.c: 300: Configure_Timer_Interrupt();
  5182  002178  EC82  F011         	call	_Configure_Timer_Interrupt	;wreg free
  5183  00217C                     
  5184                           ;main.c: 302: ADCON1 = 0b00001111;
  5185  00217C  0E0F               	movlw	15
  5186  00217E  6EC1               	movwf	193,c	;volatile
  5187  002180  0012               	return		;funcret
  5188  002182                     __end_of_Configure_Registers:
  5189                           	callstack 0
  5190                           
  5191 ;; *************** function _Configure_Timer_Interrupt *****************
  5192 ;; Defined at:
  5193 ;;		line 273 in file "main.c"
  5194 ;; Parameters:    Size  Location     Type
  5195 ;;		None
  5196 ;; Auto vars:     Size  Location     Type
  5197 ;;		None
  5198 ;; Return value:  Size  Location     Type
  5199 ;;                  1    wreg      void 
  5200 ;; Registers used:
  5201 ;;		wreg, status,2
  5202 ;; Tracked objects:
  5203 ;;		On entry : 0/0
  5204 ;;		On exit  : 0/0
  5205 ;;		Unchanged: 0/0
  5206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5207 ;;      Params:         0       0       0       0       0       0       0
  5208 ;;      Locals:         0       0       0       0       0       0       0
  5209 ;;      Temps:          0       0       0       0       0       0       0
  5210 ;;      Totals:         0       0       0       0       0       0       0
  5211 ;;Total ram usage:        0 bytes
  5212 ;; Hardware stack levels used: 1
  5213 ;; Hardware stack levels required when called: 1
  5214 ;; This function calls:
  5215 ;;		Nothing
  5216 ;; This function is called by:
  5217 ;;		_Configure_Registers
  5218 ;; This function uses a non-reentrant model
  5219 ;;
  5220                           
  5221                           	psect	text29
  5222  002304                     __ptext29:
  5223                           	callstack 0
  5224  002304                     _Configure_Timer_Interrupt:
  5225                           	callstack 28
  5226  002304                     
  5227                           ;main.c: 275: INTCONbits.TMR0IE = 1;
  5228  002304  8AF2               	bsf	242,5,c	;volatile
  5229                           
  5230                           ;main.c: 276: INTCONbits.TMR0IF = 0;
  5231  002306  94F2               	bcf	242,2,c	;volatile
  5232  002308                     
  5233                           ;main.c: 277: T0CON = 0b11000101;
  5234  002308  0EC5               	movlw	197
  5235  00230A  6ED5               	movwf	213,c	;volatile
  5236                           
  5237                           ;main.c: 278: TMR0 = 131;
  5238  00230C  0E00               	movlw	0
  5239  00230E  6ED7               	movwf	215,c	;volatile
  5240  002310  0E83               	movlw	131
  5241  002312  6ED6               	movwf	214,c	;volatile
  5242  002314  0012               	return		;funcret
  5243  002316                     __end_of_Configure_Timer_Interrupt:
  5244                           	callstack 0
  5245                           
  5246 ;; *************** function _Configure_External_Interrupt *****************
  5247 ;; Defined at:
  5248 ;;		line 266 in file "main.c"
  5249 ;; Parameters:    Size  Location     Type
  5250 ;;		None
  5251 ;; Auto vars:     Size  Location     Type
  5252 ;;		None
  5253 ;; Return value:  Size  Location     Type
  5254 ;;                  1    wreg      void 
  5255 ;; Registers used:
  5256 ;;		None
  5257 ;; Tracked objects:
  5258 ;;		On entry : 0/0
  5259 ;;		On exit  : 0/0
  5260 ;;		Unchanged: 0/0
  5261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5262 ;;      Params:         0       0       0       0       0       0       0
  5263 ;;      Locals:         0       0       0       0       0       0       0
  5264 ;;      Temps:          0       0       0       0       0       0       0
  5265 ;;      Totals:         0       0       0       0       0       0       0
  5266 ;;Total ram usage:        0 bytes
  5267 ;; Hardware stack levels used: 1
  5268 ;; Hardware stack levels required when called: 1
  5269 ;; This function calls:
  5270 ;;		Nothing
  5271 ;; This function is called by:
  5272 ;;		_Configure_Registers
  5273 ;; This function uses a non-reentrant model
  5274 ;;
  5275                           
  5276                           	psect	text30
  5277  00232E                     __ptext30:
  5278                           	callstack 0
  5279  00232E                     _Configure_External_Interrupt:
  5280                           	callstack 28
  5281  00232E  0012               	return		;funcret
  5282  002330                     __end_of_Configure_External_Interrupt:
  5283                           	callstack 0
  5284                           
  5285 ;; *************** function _Automatic_Mode *****************
  5286 ;; Defined at:
  5287 ;;		line 212 in file "main.c"
  5288 ;; Parameters:    Size  Location     Type
  5289 ;;		None
  5290 ;; Auto vars:     Size  Location     Type
  5291 ;;  isFull          1   28[COMRAM] unsigned char 
  5292 ;; Return value:  Size  Location     Type
  5293 ;;                  1    wreg      void 
  5294 ;; Registers used:
  5295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5296 ;; Tracked objects:
  5297 ;;		On entry : 0/0
  5298 ;;		On exit  : 0/0
  5299 ;;		Unchanged: 0/0
  5300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5301 ;;      Params:         0       0       0       0       0       0       0
  5302 ;;      Locals:         1       0       0       0       0       0       0
  5303 ;;      Temps:          0       0       0       0       0       0       0
  5304 ;;      Totals:         1       0       0       0       0       0       0
  5305 ;;Total ram usage:        1 bytes
  5306 ;; Hardware stack levels used: 1
  5307 ;; Hardware stack levels required when called: 2
  5308 ;; This function calls:
  5309 ;;		_ClearBit
  5310 ;;		_SetBit
  5311 ;;		___flge
  5312 ;; This function is called by:
  5313 ;;		_main
  5314 ;; This function uses a non-reentrant model
  5315 ;;
  5316                           
  5317                           	psect	text31
  5318  0016F0                     __ptext31:
  5319                           	callstack 0
  5320  0016F0                     _Automatic_Mode:
  5321                           	callstack 28
  5322  0016F0                     
  5323                           ;main.c: 214: bool isFull = tank2.level >= tank2.max_level ? 1 : 0;
  5324  0016F0  C035  F011         	movff	_tank2,___flge@ff1	;volatile
  5325  0016F4  C036  F012         	movff	_tank2+1,___flge@ff1+1	;volatile
  5326  0016F8  C037  F013         	movff	_tank2+2,___flge@ff1+2	;volatile
  5327  0016FC  C038  F014         	movff	_tank2+3,___flge@ff1+3	;volatile
  5328  001700  C03D  F015         	movff	_tank2+8,___flge@ff2	;volatile
  5329  001704  C03E  F016         	movff	_tank2+9,___flge@ff2+1	;volatile
  5330  001708  C03F  F017         	movff	_tank2+10,___flge@ff2+2	;volatile
  5331  00170C  C040  F018         	movff	_tank2+11,___flge@ff2+3	;volatile
  5332  001710  EC81  F00C         	call	___flge	;wreg free
  5333  001714  B0D8               	btfsc	status,0,c
  5334  001716  EF8F  F00B         	goto	u2681
  5335  00171A  EF92  F00B         	goto	u2680
  5336  00171E                     u2681:
  5337  00171E  0E01               	movlw	1
  5338  001720  EF93  F00B         	goto	u2690
  5339  001724                     u2680:
  5340  001724  0E00               	movlw	0
  5341  001726                     u2690:
  5342  001726  6E1D               	movwf	Automatic_Mode@isFull^0,c
  5343                           
  5344                           ;main.c: 215: if ((tank1.level > tank1.min_level) && (tank2.level < tank2.min_level))
  5345  001728  C045  F011         	movff	_tank1+4,___flge@ff1	;volatile
  5346  00172C  C046  F012         	movff	_tank1+5,___flge@ff1+1	;volatile
  5347  001730  C047  F013         	movff	_tank1+6,___flge@ff1+2	;volatile
  5348  001734  C048  F014         	movff	_tank1+7,___flge@ff1+3	;volatile
  5349  001738  C041  F015         	movff	_tank1,___flge@ff2	;volatile
  5350  00173C  C042  F016         	movff	_tank1+1,___flge@ff2+1	;volatile
  5351  001740  C043  F017         	movff	_tank1+2,___flge@ff2+2	;volatile
  5352  001744  C044  F018         	movff	_tank1+3,___flge@ff2+3	;volatile
  5353  001748  EC81  F00C         	call	___flge	;wreg free
  5354  00174C  B0D8               	btfsc	status,0,c
  5355  00174E  EFAB  F00B         	goto	u2701
  5356  001752  EFAD  F00B         	goto	u2700
  5357  001756                     u2701:
  5358  001756  EFD2  F00B         	goto	l2788
  5359  00175A                     u2700:
  5360  00175A  C035  F011         	movff	_tank2,___flge@ff1	;volatile
  5361  00175E  C036  F012         	movff	_tank2+1,___flge@ff1+1	;volatile
  5362  001762  C037  F013         	movff	_tank2+2,___flge@ff1+2	;volatile
  5363  001766  C038  F014         	movff	_tank2+3,___flge@ff1+3	;volatile
  5364  00176A  C039  F015         	movff	_tank2+4,___flge@ff2	;volatile
  5365  00176E  C03A  F016         	movff	_tank2+5,___flge@ff2+1	;volatile
  5366  001772  C03B  F017         	movff	_tank2+6,___flge@ff2+2	;volatile
  5367  001776  C03C  F018         	movff	_tank2+7,___flge@ff2+3	;volatile
  5368  00177A  EC81  F00C         	call	___flge	;wreg free
  5369  00177E  B0D8               	btfsc	status,0,c
  5370  001780  EFC4  F00B         	goto	u2711
  5371  001784  EFC6  F00B         	goto	u2710
  5372  001788                     u2711:
  5373  001788  EFD2  F00B         	goto	l2788
  5374  00178C                     u2710:
  5375  00178C                     
  5376                           ;main.c: 216: {;main.c: 217: SetBit(&LATC, 0);
  5377  00178C  0E8B               	movlw	139
  5378  00178E  6E01               	movwf	SetBit@port^0,c
  5379  001790  0E0F               	movlw	15
  5380  001792  6E02               	movwf	(SetBit@port+1)^0,c
  5381  001794  0E00               	movlw	0
  5382  001796  6E04               	movwf	(SetBit@pin+1)^0,c
  5383  001798  0E00               	movlw	0
  5384  00179A  6E03               	movwf	SetBit@pin^0,c
  5385  00179C  EC13  F011         	call	_SetBit	;wreg free
  5386                           
  5387                           ;main.c: 218: }
  5388  0017A0  EFFD  F00B         	goto	l216
  5389  0017A4                     l2788:
  5390                           
  5391                           ;main.c: 219: else if (tank1.level <= tank1.min_level || isFull)
  5392  0017A4  C045  F011         	movff	_tank1+4,___flge@ff1	;volatile
  5393  0017A8  C046  F012         	movff	_tank1+5,___flge@ff1+1	;volatile
  5394  0017AC  C047  F013         	movff	_tank1+6,___flge@ff1+2	;volatile
  5395  0017B0  C048  F014         	movff	_tank1+7,___flge@ff1+3	;volatile
  5396  0017B4  C041  F015         	movff	_tank1,___flge@ff2	;volatile
  5397  0017B8  C042  F016         	movff	_tank1+1,___flge@ff2+1	;volatile
  5398  0017BC  C043  F017         	movff	_tank1+2,___flge@ff2+2	;volatile
  5399  0017C0  C044  F018         	movff	_tank1+3,___flge@ff2+3	;volatile
  5400  0017C4  EC81  F00C         	call	___flge	;wreg free
  5401  0017C8  B0D8               	btfsc	status,0,c
  5402  0017CA  EFE9  F00B         	goto	u2721
  5403  0017CE  EFEB  F00B         	goto	u2720
  5404  0017D2                     u2721:
  5405  0017D2  EFF3  F00B         	goto	l2792
  5406  0017D6                     u2720:
  5407  0017D6  501D               	movf	Automatic_Mode@isFull^0,w,c
  5408  0017D8  B4D8               	btfsc	status,2,c
  5409  0017DA  EFF1  F00B         	goto	u2731
  5410  0017DE  EFF3  F00B         	goto	u2730
  5411  0017E2                     u2731:
  5412  0017E2  EFFD  F00B         	goto	l216
  5413  0017E6                     u2730:
  5414  0017E6                     l2792:
  5415                           
  5416                           ;main.c: 220: {;main.c: 221: ClearBit(&LATC, 0);
  5417  0017E6  0E8B               	movlw	139
  5418  0017E8  6E01               	movwf	ClearBit@port^0,c
  5419  0017EA  0E0F               	movlw	15
  5420  0017EC  6E02               	movwf	(ClearBit@port+1)^0,c
  5421  0017EE  0E00               	movlw	0
  5422  0017F0  6E04               	movwf	(ClearBit@pin+1)^0,c
  5423  0017F2  0E00               	movlw	0
  5424  0017F4  6E03               	movwf	ClearBit@pin^0,c
  5425  0017F6  ECDF  F010         	call	_ClearBit	;wreg free
  5426  0017FA                     l216:
  5427  0017FA  0012               	return		;funcret
  5428  0017FC                     __end_of_Automatic_Mode:
  5429                           	callstack 0
  5430                           
  5431 ;; *************** function ___flge *****************
  5432 ;; Defined at:
  5433 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flge.c"
  5434 ;; Parameters:    Size  Location     Type
  5435 ;;  ff1             4   16[COMRAM] void 
  5436 ;;  ff2             4   20[COMRAM] void 
  5437 ;; Auto vars:     Size  Location     Type
  5438 ;;		None
  5439 ;; Return value:  Size  Location     Type
  5440 ;;		None               void
  5441 ;; Registers used:
  5442 ;;		wreg, status,2, status,0
  5443 ;; Tracked objects:
  5444 ;;		On entry : 0/0
  5445 ;;		On exit  : 0/0
  5446 ;;		Unchanged: 0/0
  5447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5448 ;;      Params:         8       0       0       0       0       0       0
  5449 ;;      Locals:         0       0       0       0       0       0       0
  5450 ;;      Temps:          4       0       0       0       0       0       0
  5451 ;;      Totals:        12       0       0       0       0       0       0
  5452 ;;Total ram usage:       12 bytes
  5453 ;; Hardware stack levels used: 1
  5454 ;; Hardware stack levels required when called: 1
  5455 ;; This function calls:
  5456 ;;		Nothing
  5457 ;; This function is called by:
  5458 ;;		_Min_Lv1_Incr
  5459 ;;		_Min_Lv2_Incr
  5460 ;;		_Automatic_Mode
  5461 ;; This function uses a non-reentrant model
  5462 ;;
  5463                           
  5464                           	psect	text32
  5465  001902                     __ptext32:
  5466                           	callstack 0
  5467  001902                     ___flge:
  5468                           	callstack 26
  5469  001902  0E00               	movlw	0
  5470  001904  1411               	andwf	___flge@ff1^0,w,c
  5471  001906  6E19               	movwf	??___flge^0,c
  5472  001908  0E00               	movlw	0
  5473  00190A  1412               	andwf	(___flge@ff1+1)^0,w,c
  5474  00190C  6E1A               	movwf	(??___flge+1)^0,c
  5475  00190E  0E80               	movlw	128
  5476  001910  1413               	andwf	(___flge@ff1+2)^0,w,c
  5477  001912  6E1B               	movwf	(??___flge+2)^0,c
  5478  001914  0E7F               	movlw	127
  5479  001916  1414               	andwf	(___flge@ff1+3)^0,w,c
  5480  001918  6E1C               	movwf	(??___flge+3)^0,c
  5481  00191A  5019               	movf	??___flge^0,w,c
  5482  00191C  101A               	iorwf	(??___flge+1)^0,w,c
  5483  00191E  101B               	iorwf	(??___flge+2)^0,w,c
  5484  001920  101C               	iorwf	(??___flge+3)^0,w,c
  5485  001922  A4D8               	btfss	status,2,c
  5486  001924  EF96  F00C         	goto	u2161
  5487  001928  EF98  F00C         	goto	u2160
  5488  00192C                     u2161:
  5489  00192C  EFA0  F00C         	goto	l2446
  5490  001930                     u2160:
  5491  001930  0E00               	movlw	0
  5492  001932  6E11               	movwf	___flge@ff1^0,c
  5493  001934  0E00               	movlw	0
  5494  001936  6E12               	movwf	(___flge@ff1+1)^0,c
  5495  001938  0E00               	movlw	0
  5496  00193A  6E13               	movwf	(___flge@ff1+2)^0,c
  5497  00193C  0E00               	movlw	0
  5498  00193E  6E14               	movwf	(___flge@ff1+3)^0,c
  5499  001940                     l2446:
  5500  001940  0E00               	movlw	0
  5501  001942  1415               	andwf	___flge@ff2^0,w,c
  5502  001944  6E19               	movwf	??___flge^0,c
  5503  001946  0E00               	movlw	0
  5504  001948  1416               	andwf	(___flge@ff2+1)^0,w,c
  5505  00194A  6E1A               	movwf	(??___flge+1)^0,c
  5506  00194C  0E80               	movlw	128
  5507  00194E  1417               	andwf	(___flge@ff2+2)^0,w,c
  5508  001950  6E1B               	movwf	(??___flge+2)^0,c
  5509  001952  0E7F               	movlw	127
  5510  001954  1418               	andwf	(___flge@ff2+3)^0,w,c
  5511  001956  6E1C               	movwf	(??___flge+3)^0,c
  5512  001958  5019               	movf	??___flge^0,w,c
  5513  00195A  101A               	iorwf	(??___flge+1)^0,w,c
  5514  00195C  101B               	iorwf	(??___flge+2)^0,w,c
  5515  00195E  101C               	iorwf	(??___flge+3)^0,w,c
  5516  001960  A4D8               	btfss	status,2,c
  5517  001962  EFB5  F00C         	goto	u2171
  5518  001966  EFB7  F00C         	goto	u2170
  5519  00196A                     u2171:
  5520  00196A  EFBF  F00C         	goto	l2450
  5521  00196E                     u2170:
  5522  00196E  0E00               	movlw	0
  5523  001970  6E15               	movwf	___flge@ff2^0,c
  5524  001972  0E00               	movlw	0
  5525  001974  6E16               	movwf	(___flge@ff2+1)^0,c
  5526  001976  0E00               	movlw	0
  5527  001978  6E17               	movwf	(___flge@ff2+2)^0,c
  5528  00197A  0E00               	movlw	0
  5529  00197C  6E18               	movwf	(___flge@ff2+3)^0,c
  5530  00197E                     l2450:
  5531  00197E  AE14               	btfss	(___flge@ff1+3)^0,7,c
  5532  001980  EFC4  F00C         	goto	u2181
  5533  001984  EFC6  F00C         	goto	u2180
  5534  001988                     u2181:
  5535  001988  EFCF  F00C         	goto	l2454
  5536  00198C                     u2180:
  5537  00198C  6C11               	negf	___flge@ff1^0,c
  5538  00198E  1E12               	comf	(___flge@ff1+1)^0,f,c
  5539  001990  B0D8               	btfsc	status,0,c
  5540  001992  2A12               	incf	(___flge@ff1+1)^0,f,c
  5541  001994  1E13               	comf	(___flge@ff1+2)^0,f,c
  5542  001996  B0D8               	btfsc	status,0,c
  5543  001998  2A13               	incf	(___flge@ff1+2)^0,f,c
  5544  00199A  0E80               	movlw	128
  5545  00199C  5614               	subfwb	(___flge@ff1+3)^0,f,c
  5546  00199E                     l2454:
  5547  00199E  AE18               	btfss	(___flge@ff2+3)^0,7,c
  5548  0019A0  EFD4  F00C         	goto	u2191
  5549  0019A4  EFD6  F00C         	goto	u2190
  5550  0019A8                     u2191:
  5551  0019A8  EFDF  F00C         	goto	l580
  5552  0019AC                     u2190:
  5553  0019AC  6C15               	negf	___flge@ff2^0,c
  5554  0019AE  1E16               	comf	(___flge@ff2+1)^0,f,c
  5555  0019B0  B0D8               	btfsc	status,0,c
  5556  0019B2  2A16               	incf	(___flge@ff2+1)^0,f,c
  5557  0019B4  1E17               	comf	(___flge@ff2+2)^0,f,c
  5558  0019B6  B0D8               	btfsc	status,0,c
  5559  0019B8  2A17               	incf	(___flge@ff2+2)^0,f,c
  5560  0019BA  0E80               	movlw	128
  5561  0019BC  5618               	subfwb	(___flge@ff2+3)^0,f,c
  5562  0019BE                     l580:
  5563  0019BE  0E00               	movlw	0
  5564  0019C0  1A11               	xorwf	___flge@ff1^0,f,c
  5565  0019C2  0E00               	movlw	0
  5566  0019C4  1A12               	xorwf	(___flge@ff1+1)^0,f,c
  5567  0019C6  0E00               	movlw	0
  5568  0019C8  1A13               	xorwf	(___flge@ff1+2)^0,f,c
  5569  0019CA  0E80               	movlw	128
  5570  0019CC  1A14               	xorwf	(___flge@ff1+3)^0,f,c
  5571  0019CE  0E00               	movlw	0
  5572  0019D0  1A15               	xorwf	___flge@ff2^0,f,c
  5573  0019D2  0E00               	movlw	0
  5574  0019D4  1A16               	xorwf	(___flge@ff2+1)^0,f,c
  5575  0019D6  0E00               	movlw	0
  5576  0019D8  1A17               	xorwf	(___flge@ff2+2)^0,f,c
  5577  0019DA  0E80               	movlw	128
  5578  0019DC  1A18               	xorwf	(___flge@ff2+3)^0,f,c
  5579  0019DE  5015               	movf	___flge@ff2^0,w,c
  5580  0019E0  5C11               	subwf	___flge@ff1^0,w,c
  5581  0019E2  5016               	movf	(___flge@ff2+1)^0,w,c
  5582  0019E4  5812               	subwfb	(___flge@ff1+1)^0,w,c
  5583  0019E6  5017               	movf	(___flge@ff2+2)^0,w,c
  5584  0019E8  5813               	subwfb	(___flge@ff1+2)^0,w,c
  5585  0019EA  5018               	movf	(___flge@ff2+3)^0,w,c
  5586  0019EC  5814               	subwfb	(___flge@ff1+3)^0,w,c
  5587  0019EE  B0D8               	btfsc	status,0,c
  5588  0019F0  EFFC  F00C         	goto	u2201
  5589  0019F4  EFFE  F00C         	goto	u2200
  5590  0019F8                     u2201:
  5591  0019F8  EF01  F00D         	goto	l2460
  5592  0019FC                     u2200:
  5593  0019FC  90D8               	bcf	status,0,c
  5594  0019FE  EF02  F00D         	goto	l581
  5595  001A02                     l2460:
  5596  001A02  80D8               	bsf	status,0,c
  5597  001A04                     l581:
  5598  001A04  0012               	return		;funcret
  5599  001A06                     __end_of___flge:
  5600                           	callstack 0
  5601                           
  5602 ;; *************** function _SetBit *****************
  5603 ;; Defined at:
  5604 ;;		line 3 in file "regoperations.c"
  5605 ;; Parameters:    Size  Location     Type
  5606 ;;  port            2    0[COMRAM] PTR unsigned int 
  5607 ;;		 -> LATC(1), 
  5608 ;;  pin             2    2[COMRAM] unsigned int 
  5609 ;; Auto vars:     Size  Location     Type
  5610 ;;		None
  5611 ;; Return value:  Size  Location     Type
  5612 ;;                  1    wreg      void 
  5613 ;; Registers used:
  5614 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5615 ;; Tracked objects:
  5616 ;;		On entry : 0/0
  5617 ;;		On exit  : 0/0
  5618 ;;		Unchanged: 0/0
  5619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5620 ;;      Params:         4       0       0       0       0       0       0
  5621 ;;      Locals:         0       0       0       0       0       0       0
  5622 ;;      Temps:          3       0       0       0       0       0       0
  5623 ;;      Totals:         7       0       0       0       0       0       0
  5624 ;;Total ram usage:        7 bytes
  5625 ;; Hardware stack levels used: 1
  5626 ;; Hardware stack levels required when called: 1
  5627 ;; This function calls:
  5628 ;;		Nothing
  5629 ;; This function is called by:
  5630 ;;		_Automatic_Mode
  5631 ;; This function uses a non-reentrant model
  5632 ;;
  5633                           
  5634                           	psect	text33
  5635  002226                     __ptext33:
  5636                           	callstack 0
  5637  002226                     _SetBit:
  5638                           	callstack 28
  5639  002226                     
  5640                           ;regoperations.c: 5: (*port) |= (1UL << pin);
  5641  002226  C003  F005         	movff	SetBit@pin,??_SetBit
  5642  00222A  0E01               	movlw	1
  5643  00222C  6E06               	movwf	(??_SetBit+1)^0,c
  5644  00222E  0E00               	movlw	0
  5645  002230  6E07               	movwf	(??_SetBit+2)^0,c
  5646  002232  2A05               	incf	??_SetBit^0,f,c
  5647  002234  EF1F  F011         	goto	u2314
  5648  002238                     u2315:
  5649  002238  90D8               	bcf	status,0,c
  5650  00223A  3606               	rlcf	(??_SetBit+1)^0,f,c
  5651  00223C  3607               	rlcf	(??_SetBit+2)^0,f,c
  5652  00223E                     u2314:
  5653  00223E  2E05               	decfsz	??_SetBit^0,f,c
  5654  002240  EF1C  F011         	goto	u2315
  5655  002244  C001  FFD9         	movff	SetBit@port,fsr2l
  5656  002248  C002  FFDA         	movff	SetBit@port+1,fsr2h
  5657  00224C  5006               	movf	(??_SetBit+1)^0,w,c
  5658  00224E  12DE               	iorwf	postinc2,f,c
  5659  002250  5007               	movf	(??_SetBit+2)^0,w,c
  5660  002252  12DD               	iorwf	postdec2,f,c
  5661  002254  0012               	return		;funcret
  5662  002256                     __end_of_SetBit:
  5663                           	callstack 0
  5664                           
  5665 ;; *************** function _ClearBit *****************
  5666 ;; Defined at:
  5667 ;;		line 8 in file "regoperations.c"
  5668 ;; Parameters:    Size  Location     Type
  5669 ;;  port            2    0[COMRAM] PTR unsigned int 
  5670 ;;		 -> LATC(1), 
  5671 ;;  pin             2    2[COMRAM] unsigned int 
  5672 ;; Auto vars:     Size  Location     Type
  5673 ;;		None
  5674 ;; Return value:  Size  Location     Type
  5675 ;;                  1    wreg      void 
  5676 ;; Registers used:
  5677 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5678 ;; Tracked objects:
  5679 ;;		On entry : 0/0
  5680 ;;		On exit  : 0/0
  5681 ;;		Unchanged: 0/0
  5682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5683 ;;      Params:         4       0       0       0       0       0       0
  5684 ;;      Locals:         0       0       0       0       0       0       0
  5685 ;;      Temps:          5       0       0       0       0       0       0
  5686 ;;      Totals:         9       0       0       0       0       0       0
  5687 ;;Total ram usage:        9 bytes
  5688 ;; Hardware stack levels used: 1
  5689 ;; Hardware stack levels required when called: 1
  5690 ;; This function calls:
  5691 ;;		Nothing
  5692 ;; This function is called by:
  5693 ;;		_Change_Mode
  5694 ;;		_Automatic_Mode
  5695 ;; This function uses a non-reentrant model
  5696 ;;
  5697                           
  5698                           	psect	text34
  5699  0021BE                     __ptext34:
  5700                           	callstack 0
  5701  0021BE                     _ClearBit:
  5702                           	callstack 26
  5703  0021BE                     
  5704                           ;regoperations.c: 10: (*port) &= ~(1UL << pin);
  5705  0021BE  C003  F005         	movff	ClearBit@pin,??_ClearBit
  5706  0021C2  0E01               	movlw	1
  5707  0021C4  6E06               	movwf	(??_ClearBit+1)^0,c
  5708  0021C6  0E00               	movlw	0
  5709  0021C8  6E07               	movwf	(??_ClearBit+2)^0,c
  5710  0021CA  2A05               	incf	??_ClearBit^0,f,c
  5711  0021CC  EFEB  F010         	goto	u1764
  5712  0021D0                     u1765:
  5713  0021D0  90D8               	bcf	status,0,c
  5714  0021D2  3606               	rlcf	(??_ClearBit+1)^0,f,c
  5715  0021D4  3607               	rlcf	(??_ClearBit+2)^0,f,c
  5716  0021D6                     u1764:
  5717  0021D6  2E05               	decfsz	??_ClearBit^0,f,c
  5718  0021D8  EFE8  F010         	goto	u1765
  5719  0021DC  1C06               	comf	(??_ClearBit+1)^0,w,c
  5720  0021DE  6E08               	movwf	(??_ClearBit+3)^0,c
  5721  0021E0  1C07               	comf	(??_ClearBit+2)^0,w,c
  5722  0021E2  6E09               	movwf	(??_ClearBit+4)^0,c
  5723  0021E4  C001  FFD9         	movff	ClearBit@port,fsr2l
  5724  0021E8  C002  FFDA         	movff	ClearBit@port+1,fsr2h
  5725  0021EC  5008               	movf	(??_ClearBit+3)^0,w,c
  5726  0021EE  16DE               	andwf	postinc2,f,c
  5727  0021F0  5009               	movf	(??_ClearBit+4)^0,w,c
  5728  0021F2  16DD               	andwf	postdec2,f,c
  5729  0021F4  0012               	return		;funcret
  5730  0021F6                     __end_of_ClearBit:
  5731                           	callstack 0
  5732                           
  5733 ;; *************** function _isr *****************
  5734 ;; Defined at:
  5735 ;;		line 92 in file "main.c"
  5736 ;; Parameters:    Size  Location     Type
  5737 ;;		None
  5738 ;; Auto vars:     Size  Location     Type
  5739 ;;		None
  5740 ;; Return value:  Size  Location     Type
  5741 ;;                  1    wreg      void 
  5742 ;; Registers used:
  5743 ;;		wreg, status,2, status,0
  5744 ;; Tracked objects:
  5745 ;;		On entry : 0/0
  5746 ;;		On exit  : 0/0
  5747 ;;		Unchanged: 0/0
  5748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5749 ;;      Params:         0       0       0       0       0       0       0
  5750 ;;      Locals:         0       0       0       0       0       0       0
  5751 ;;      Temps:          0       0       0       0       0       0       0
  5752 ;;      Totals:         0       0       0       0       0       0       0
  5753 ;;Total ram usage:        0 bytes
  5754 ;; Hardware stack levels used: 1
  5755 ;; This function calls:
  5756 ;;		Nothing
  5757 ;; This function is called by:
  5758 ;;		Interrupt level 2
  5759 ;; This function uses a non-reentrant model
  5760 ;;
  5761                           
  5762                           	psect	intcode
  5763  000008                     __pintcode:
  5764                           	callstack 0
  5765  000008                     _isr:
  5766                           	callstack 23
  5767                           
  5768                           ;incstack = 0
  5769  000008  8265               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5770  00000A  EDA2  F00F         	call	int_func,f	;refresh shadow registers
  5771  00000E                     
  5772                           	psect	intcode_body
  5773  001F44                     __pintcode_body:
  5774                           	callstack 23
  5775  001F44                     int_func:
  5776                           	callstack 23
  5777  001F44  0006               	pop		; remove dummy address from shadow register refresh
  5778  001F46                     
  5779                           ;main.c: 95: if (INTCONbits.TMR0IF == 1)
  5780  001F46  A4F2               	btfss	242,2,c	;volatile
  5781  001F48  EFA8  F00F         	goto	i2u135_41
  5782  001F4C  EFAA  F00F         	goto	i2u135_40
  5783  001F50                     i2u135_41:
  5784  001F50  EFDD  F00F         	goto	i2l166
  5785  001F54                     i2u135_40:
  5786  001F54                     
  5787                           ;main.c: 96: {;main.c: 97: INTCONbits.TMR0IF = 0;
  5788  001F54  94F2               	bcf	242,2,c	;volatile
  5789  001F56                     
  5790                           ;main.c: 98: TMR0 = 131;
  5791  001F56  0E00               	movlw	0
  5792  001F58  6ED7               	movwf	215,c	;volatile
  5793  001F5A  0E83               	movlw	131
  5794  001F5C  6ED6               	movwf	214,c	;volatile
  5795  001F5E                     
  5796                           ;main.c: 99: count_screen++;
  5797  001F5E  4A4F               	infsnz	_count_screen^0,f,c	;volatile
  5798  001F60  2A50               	incf	(_count_screen+1)^0,f,c	;volatile
  5799  001F62                     
  5800                           ;main.c: 100: count_refresh_display++;
  5801  001F62  4A4D               	infsnz	_count_refresh_display^0,f,c	;volatile
  5802  001F64  2A4E               	incf	(_count_refresh_display+1)^0,f,c	;volatile
  5803  001F66                     
  5804                           ;main.c: 103: if (count_screen == 500)
  5805  001F66  0EF4               	movlw	244
  5806  001F68  184F               	xorwf	_count_screen^0,w,c	;volatile
  5807  001F6A  E106               	bnz	i2u136_41
  5808  001F6C  0450               	decf	(_count_screen+1)^0,w,c	;volatile
  5809  001F6E  A4D8               	btfss	status,2,c
  5810  001F70  EFBC  F00F         	goto	i2u136_41
  5811  001F74  EFBE  F00F         	goto	i2u136_40
  5812  001F78                     i2u136_41:
  5813  001F78  EFCE  F00F         	goto	i2l1954
  5814  001F7C                     i2u136_40:
  5815  001F7C                     
  5816                           ;main.c: 104: {;main.c: 105: count_screen = 0;
  5817  001F7C  0E00               	movlw	0
  5818  001F7E  6E50               	movwf	(_count_screen+1)^0,c	;volatile
  5819  001F80  0E00               	movlw	0
  5820  001F82  6E4F               	movwf	_count_screen^0,c	;volatile
  5821  001F84                     
  5822                           ;main.c: 106: ++screen;
  5823  001F84  2A51               	incf	_screen^0,f,c	;volatile
  5824  001F86                     
  5825                           ;main.c: 107: if (screen == 3) screen = 0;
  5826  001F86  0E03               	movlw	3
  5827  001F88  1851               	xorwf	_screen^0,w,c	;volatile
  5828  001F8A  A4D8               	btfss	status,2,c
  5829  001F8C  EFCA  F00F         	goto	i2u137_41
  5830  001F90  EFCC  F00F         	goto	i2u137_40
  5831  001F94                     i2u137_41:
  5832  001F94  EFCE  F00F         	goto	i2l1954
  5833  001F98                     i2u137_40:
  5834  001F98  0E00               	movlw	0
  5835  001F9A  6E51               	movwf	_screen^0,c	;volatile
  5836  001F9C                     i2l1954:
  5837                           
  5838                           ;main.c: 108: };main.c: 111: if (count_refresh_display == 125)
  5839  001F9C  0E7D               	movlw	125
  5840  001F9E  184D               	xorwf	_count_refresh_display^0,w,c	;volatile
  5841  001FA0  104E               	iorwf	(_count_refresh_display+1)^0,w,c	;volatile
  5842  001FA2  A4D8               	btfss	status,2,c
  5843  001FA4  EFD6  F00F         	goto	i2u138_41
  5844  001FA8  EFD8  F00F         	goto	i2u138_40
  5845  001FAC                     i2u138_41:
  5846  001FAC  EFDD  F00F         	goto	i2l166
  5847  001FB0                     i2u138_40:
  5848  001FB0                     
  5849                           ;main.c: 112: {;main.c: 113: count_refresh_display = 0;
  5850  001FB0  0E00               	movlw	0
  5851  001FB2  6E4E               	movwf	(_count_refresh_display+1)^0,c	;volatile
  5852  001FB4  0E00               	movlw	0
  5853  001FB6  6E4D               	movwf	_count_refresh_display^0,c	;volatile
  5854  001FB8                     
  5855                           ;main.c: 114: refresh_display = 1;
  5856  001FB8  8064               	bsf	(_refresh_display/(0+8))^0,_refresh_display& (0+7),c	;volatile
  5857  001FBA                     i2l166:
  5858  001FBA  9265               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5859  001FBC  0011               	retfie		f
  5860  001FBE                     __end_of_isr:
  5861                           	callstack 0
  5862                           
  5863                           	psect	rparam
  5864  0000                     
  5865                           	psect	temp
  5866  000065                     btemp:
  5867                           	callstack 0
  5868  000065                     	ds	1
  5869  0000                     int$flags	set	btemp
  5870  0000                     wtemp8	set	btemp+1
  5871  0000                     ttemp5	set	btemp+1
  5872  0000                     ttemp6	set	btemp+4
  5873  0000                     ttemp7	set	btemp+8
  5874                           
  5875                           	psect	idloc
  5876                           
  5877                           ;Config register IDLOC0 @ 0x200000
  5878                           ;	unspecified, using default values
  5879  200000                     	org	2097152
  5880  200000  FF                 	db	255
  5881                           
  5882                           ;Config register IDLOC1 @ 0x200001
  5883                           ;	unspecified, using default values
  5884  200001                     	org	2097153
  5885  200001  FF                 	db	255
  5886                           
  5887                           ;Config register IDLOC2 @ 0x200002
  5888                           ;	unspecified, using default values
  5889  200002                     	org	2097154
  5890  200002  FF                 	db	255
  5891                           
  5892                           ;Config register IDLOC3 @ 0x200003
  5893                           ;	unspecified, using default values
  5894  200003                     	org	2097155
  5895  200003  FF                 	db	255
  5896                           
  5897                           ;Config register IDLOC4 @ 0x200004
  5898                           ;	unspecified, using default values
  5899  200004                     	org	2097156
  5900  200004  FF                 	db	255
  5901                           
  5902                           ;Config register IDLOC5 @ 0x200005
  5903                           ;	unspecified, using default values
  5904  200005                     	org	2097157
  5905  200005  FF                 	db	255
  5906                           
  5907                           ;Config register IDLOC6 @ 0x200006
  5908                           ;	unspecified, using default values
  5909  200006                     	org	2097158
  5910  200006  FF                 	db	255
  5911                           
  5912                           ;Config register IDLOC7 @ 0x200007
  5913                           ;	unspecified, using default values
  5914  200007                     	org	2097159
  5915  200007  FF                 	db	255
  5916                           
  5917                           	psect	config
  5918                           
  5919                           ; Padding undefined space
  5920  300000                     	org	3145728
  5921  300000  FF                 	db	255
  5922                           
  5923                           ;Config register CONFIG1H @ 0x300001
  5924                           ;	Oscillator Selection bits
  5925                           ;	OSC = HS, HS oscillator
  5926                           ;	Fail-Safe Clock Monitor Enable bit
  5927                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5928                           ;	Internal/External Oscillator Switchover bit
  5929                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5930  300001                     	org	3145729
  5931  300001  02                 	db	2
  5932                           
  5933                           ;Config register CONFIG2L @ 0x300002
  5934                           ;	Power-up Timer Enable bit
  5935                           ;	PWRT = OFF, PWRT disabled
  5936                           ;	Brown-out Reset Enable bits
  5937                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  5938                           ;	Brown Out Reset Voltage bits
  5939                           ;	BORV = 3, Minimum setting
  5940  300002                     	org	3145730
  5941  300002  1F                 	db	31
  5942                           
  5943                           ;Config register CONFIG2H @ 0x300003
  5944                           ;	Watchdog Timer Enable bit
  5945                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5946                           ;	Watchdog Timer Postscale Select bits
  5947                           ;	WDTPS = 32768, 1:32768
  5948  300003                     	org	3145731
  5949  300003  1E                 	db	30
  5950                           
  5951                           ; Padding undefined space
  5952  300004                     	org	3145732
  5953  300004  FF                 	db	255
  5954                           
  5955                           ;Config register CONFIG3H @ 0x300005
  5956                           ;	CCP2 MUX bit
  5957                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5958                           ;	PORTB A/D Enable bit
  5959                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5960                           ;	Low-Power Timer1 Oscillator Enable bit
  5961                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5962                           ;	MCLR Pin Enable bit
  5963                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5964  300005                     	org	3145733
  5965  300005  81                 	db	129
  5966                           
  5967                           ;Config register CONFIG4L @ 0x300006
  5968                           ;	Stack Full/Underflow Reset Enable bit
  5969                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5970                           ;	Single-Supply ICSP Enable bit
  5971                           ;	LVP = ON, Single-Supply ICSP enabled
  5972                           ;	Extended Instruction Set Enable bit
  5973                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5974                           ;	Background Debugger Enable bit
  5975                           ;	DEBUG = 0x1, unprogrammed default
  5976  300006                     	org	3145734
  5977  300006  85                 	db	133
  5978                           
  5979                           ; Padding undefined space
  5980  300007                     	org	3145735
  5981  300007  FF                 	db	255
  5982                           
  5983                           ;Config register CONFIG5L @ 0x300008
  5984                           ;	Code Protection bit
  5985                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  5986                           ;	Code Protection bit
  5987                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  5988                           ;	Code Protection bit
  5989                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  5990                           ;	Code Protection bit
  5991                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  5992  300008                     	org	3145736
  5993  300008  0F                 	db	15
  5994                           
  5995                           ;Config register CONFIG5H @ 0x300009
  5996                           ;	Boot Block Code Protection bit
  5997                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5998                           ;	Data EEPROM Code Protection bit
  5999                           ;	CPD = OFF, Data EEPROM not code-protected
  6000  300009                     	org	3145737
  6001  300009  C0                 	db	192
  6002                           
  6003                           ;Config register CONFIG6L @ 0x30000A
  6004                           ;	Write Protection bit
  6005                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  6006                           ;	Write Protection bit
  6007                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  6008                           ;	Write Protection bit
  6009                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  6010                           ;	Write Protection bit
  6011                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  6012  30000A                     	org	3145738
  6013  30000A  0F                 	db	15
  6014                           
  6015                           ;Config register CONFIG6H @ 0x30000B
  6016                           ;	Configuration Register Write Protection bit
  6017                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6018                           ;	Boot Block Write Protection bit
  6019                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  6020                           ;	Data EEPROM Write Protection bit
  6021                           ;	WRTD = OFF, Data EEPROM not write-protected
  6022  30000B                     	org	3145739
  6023  30000B  E0                 	db	224
  6024                           
  6025                           ;Config register CONFIG7L @ 0x30000C
  6026                           ;	Table Read Protection bit
  6027                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  6028                           ;	Table Read Protection bit
  6029                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  6030                           ;	Table Read Protection bit
  6031                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  6032                           ;	Table Read Protection bit
  6033                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6034  30000C                     	org	3145740
  6035  30000C  0F                 	db	15
  6036                           
  6037                           ;Config register CONFIG7H @ 0x30000D
  6038                           ;	Boot Block Table Read Protection bit
  6039                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6040  30000D                     	org	3145741
  6041  30000D  40                 	db	64
  6042                           tosu	equ	0xFFF
  6043                           tosh	equ	0xFFE
  6044                           tosl	equ	0xFFD
  6045                           stkptr	equ	0xFFC
  6046                           pclatu	equ	0xFFB
  6047                           pclath	equ	0xFFA
  6048                           pcl	equ	0xFF9
  6049                           tblptru	equ	0xFF8
  6050                           tblptrh	equ	0xFF7
  6051                           tblptrl	equ	0xFF6
  6052                           tablat	equ	0xFF5
  6053                           prodh	equ	0xFF4
  6054                           prodl	equ	0xFF3
  6055                           indf0	equ	0xFEF
  6056                           postinc0	equ	0xFEE
  6057                           postdec0	equ	0xFED
  6058                           preinc0	equ	0xFEC
  6059                           plusw0	equ	0xFEB
  6060                           fsr0h	equ	0xFEA
  6061                           fsr0l	equ	0xFE9
  6062                           wreg	equ	0xFE8
  6063                           indf1	equ	0xFE7
  6064                           postinc1	equ	0xFE6
  6065                           postdec1	equ	0xFE5
  6066                           preinc1	equ	0xFE4
  6067                           plusw1	equ	0xFE3
  6068                           fsr1h	equ	0xFE2
  6069                           fsr1l	equ	0xFE1
  6070                           bsr	equ	0xFE0
  6071                           indf2	equ	0xFDF
  6072                           postinc2	equ	0xFDE
  6073                           postdec2	equ	0xFDD
  6074                           preinc2	equ	0xFDC
  6075                           plusw2	equ	0xFDB
  6076                           fsr2h	equ	0xFDA
  6077                           fsr2l	equ	0xFD9
  6078                           status	equ	0xFD8

Data Sizes:
    Strings     125
    Constant    10
    Data        9
    BSS         70
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     52     100
    BANK0           128      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_5(CODE[16]), STR_4(CODE[16]), STR_3(CODE[17]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 32
		 -> display.line1(BANK0[16]), display.line0(BANK0[16]), display(BANK0[32]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 32
		 -> display.line1(BANK0[16]), display.line0(BANK0[16]), display(BANK0[32]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_7(CODE[18]), STR_6(CODE[18]), STR_2(CODE[20]), STR_1(CODE[20]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 32
		 -> display.line1(BANK0[16]), display.line0(BANK0[16]), display(BANK0[32]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    Debounce@ptr_f	PTR FTN()void  size(2) Largest target is 1
		 -> Tougle_Pump(), Min_Lv2_Incr(), Min_Lv1_Incr(), Change_Mode(), 

    Debounce@filter	PTR unsigned int  size(2) Largest target is 2
		 -> filter_bt_on_off_pump(COMRAM[2]), filter_bt_min_lv2_incr(COMRAM[2]), filter_bt_min_lv1_incr(COMRAM[2]), filter_bt_operation_mode(COMRAM[2]), 

    Debounce@bt_press	PTR unsigned int  size(2) Largest target is 2
		 -> bt_on_off_pump_press(COMRAM[2]), bt_min_lv2_incr_press(COMRAM[2]), bt_min_lv1_incr_press(COMRAM[2]), bt_operation_mode_press(COMRAM[2]), 

    TougleBit@port	PTR unsigned int  size(2) Largest target is 1
		 -> LATC(SFR[1]), 

    ClearBit@port	PTR unsigned int  size(2) Largest target is 1
		 -> LATC(SFR[1]), 

    SetBit@port	PTR unsigned int  size(2) Largest target is 1
		 -> LATC(SFR[1]), 

    Set_Display_Message$604	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_5(CODE[16]), STR_4(CODE[16]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 32
		 -> display.line1(BANK0[16]), display.line0(BANK0[16]), display(BANK0[32]), 

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 32
		 -> display.line1(COMRAM[16]), display.line0(COMRAM[16]), Show_Display@display(COMRAM[32]), 


Critical Paths under _main in COMRAM

    _main->_Debounce
    _Read_Level->___fldiv
    ___fldiv->___xxtofl
    _Manual_Mode->_Debounce
    _Tougle_Pump->_TougleBit
    _Refresh_Screen->_Show_Display
    _Show_Display->_Lcd_Out
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Set_Display_Message->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Change_Mode->_ClearBit
    _Lcd_Init->_Lcd_Cmd
    _Automatic_Mode->___flge
    ___flge->___fladd

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   44434
                     _Automatic_Mode
                _Configure_Registers
                           _Debounce
                   _Initialize_Tanks
                            _Lcd_Cmd
                           _Lcd_Init
                        _Manual_Mode
                         _Read_Level
                     _Refresh_Screen
                           _adc_init
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Read_Level                                           4     4      0    2365
                                             39 COMRAM     4     4      0
                            ___fldiv
                           ___xxtofl
                        _adc_amostra
 ---------------------------------------------------------------------------------
 (2) _adc_amostra                                          7     5      2      22
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     746
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1551
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Manual_Mode                                          0     0      0   18134
                           _Debounce
 ---------------------------------------------------------------------------------
 (2) _Debounce                                            12     2     10   18134
                                             40 COMRAM    12     2     10
                        _Change_Mode *
                           _CheckBit
                       _Min_Lv1_Incr *
                       _Min_Lv2_Incr *
                        _Tougle_Pump *
 ---------------------------------------------------------------------------------
 (3) _Tougle_Pump                                          0     0      0     196
                          _TougleBit
 ---------------------------------------------------------------------------------
 (4) _TougleBit                                            7     3      4     196
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _Min_Lv2_Incr                                         0     0      0    7588
                     _Refresh_Screen
                            ___fladd
                             ___flge
 ---------------------------------------------------------------------------------
 (3) _Min_Lv1_Incr                                         0     0      0    7588
                     _Refresh_Screen
                            ___fladd
                             ___flge
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    2844
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (1) _Refresh_Screen                                       0     0      0    3650
                _Set_Display_Message
                       _Show_Display
 ---------------------------------------------------------------------------------
 (2) _Show_Display                                        32     0     32     959
                                              8 COMRAM    32     0     32
                            _Lcd_Out
 ---------------------------------------------------------------------------------
 (3) _Lcd_Out                                              5     2      3     837
                                              3 COMRAM     5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (4) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Set_Display_Message                                  2     2      0    2691
                                             26 COMRAM     2     2      0
                            ___fltol
                            _sprintf
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4     379
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             23    17      6    1755
                                             12 COMRAM    14     8      6
                            ___fltol (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     533
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (3) _Change_Mode                                          1     1      0     696
                                              9 COMRAM     1     1      0
                           _CheckBit
                           _ClearBit
 ---------------------------------------------------------------------------------
 (3) _CheckBit                                             7     3      4     348
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (4) _Lcd_Cmd                                              3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Initialize_Tanks                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Configure_Registers                                  0     0      0       0
       _Configure_External_Interrupt
          _Configure_Timer_Interrupt
 ---------------------------------------------------------------------------------
 (2) _Configure_Timer_Interrupt                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Configure_External_Interrupt                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Automatic_Mode                                       1     1      0    1661
                                             28 COMRAM     1     1      0
                           _ClearBit
                             _SetBit
                             ___flge
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8    1094
                                             16 COMRAM    12     4      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetBit                                               7     3      4     196
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) _ClearBit                                             9     5      4     348
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Automatic_Mode
     _ClearBit
     _SetBit
     ___flge
       ___fladd (ARG)
   _Configure_Registers
     _Configure_External_Interrupt
     _Configure_Timer_Interrupt
   _Debounce
     _Change_Mode *
       _CheckBit
       _ClearBit
     _CheckBit *
     _Min_Lv1_Incr *
       _Refresh_Screen
         _Set_Display_Message
           ___fltol
           _sprintf
             ___fltol (ARG)
             ___lwdiv (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
           _strcpy
         _Show_Display
           _Lcd_Out
             _Lcd_Chr_CP
             _Lcd_Cmd
       ___fladd
       ___flge
     _Min_Lv2_Incr *
       _Refresh_Screen
       ___fladd
       ___flge
     _Tougle_Pump *
       _TougleBit
   _Initialize_Tanks
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Manual_Mode
     _Debounce
   _Read_Level
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _adc_amostra
   _Refresh_Screen
   _adc_init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      20       5       25.0%
BITCOMRAM           7E      0       1       0        0.8%
COMRAM              7E     34      64       1       79.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      84      15        0.0%
DATA                 0      0      84       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Apr 20 14:13:56 2021

                         ___fldiv@aexp 0027                           ___fldiv@bexp 0026  
                         ___fldiv@sign 001F                                     l90 169C  
                                   l91 16EE                                     l89 1650  
                 __size_of_adc_amostra 007C                                    l120 14B2  
                                  l104 1E40                                    l202 2302  
                                  l123 15DE                                    l222 1DB6  
                                  l231 20F6                                    l216 17FA  
                                  l240 2180                                    l208 1EC6  
                                  l225 22CE                                    l234 232E  
                                  l243 2254                                    l219 2280  
                                  l171 1A1C                                    l252 22A8  
                                  l316 1236                                    l228 22EC  
                                  l237 2314                                    l173 1A68  
                                  l246 21F4                                    l262 1B90  
                                  l249 2224                                    l194 1D00  
                                  l282 1F04                                    l189 137E  
                                  l285 1F06                                    l277 2322  
                                  l199 1C48                                    l608 1900  
                                  l288 1F42                                    l580 19BE  
                                  l900 0D88                                    l581 1A04  
                                  l805 2030                                    l902 0E00  
                                  l815 2094                                    l903 0DEE  
                                  l808 208C                                    l835 0878  
                                  l852 0992                                    l844 0B48  
                                  l836 0866                                    l861 0A62  
                                  l837 082C                                    l862 0A50  
                                  l962 0F3A                                    l891 0D42  
                                  l965 1096                                    l798 2028  
                                  l894 0D06                                    l984 21BC  
                                  l976 102E                                    l889 0EE2  
                                  l969 0FD2                                    _isr 0008  
                                  tosl 000FFD                                    wreg 000FE8  
                         ___fltol@exp1 000A                          ?_Min_Lv1_Incr 0001  
                        ?_Min_Lv2_Incr 0001                                   l2000 15C6  
                                 l2002 15CE                                   l2010 1404  
                                 l2004 15D0                                   l2020 1490  
                                 l2012 140C                                   l2030 1FBE  
                                 l2110 110E                                   l2022 1492  
                                 l2014 140E                                   l2006 1382  
                                 l2200 18F0                                   l2040 1FF6  
                                 l2032 1FC6                                   l2112 1116  
                                 l2024 149A                                   l2016 1416  
                                 l2008 1386                                   l2050 2022  
                                 l2042 1FFC                                   l2034 1FD8  
                                 l2130 1164                                   l2114 1124  
                                 l2106 10CE                                   l2210 12BC  
                                 l2026 149C                                   l2018 1488  
                                 l2044 2012                                   l2036 1FE0  
                                 l2060 2062                                   l2052 2032  
                                 l2140 11A4                                   l2132 1176  
                                 l2124 1134                                   l2116 1128  
                                 l2108 10FE                                   l2212 12D0  
                                 l2220 130C                                   l2204 1238  
                                 l2028 14A4                                   l2300 07A6  
                                 l2046 201A                                   l2038 1FE8  
                                 l2062 2078                                   l2054 2044  
                                 l2142 11E6                                   l2134 118C  
                                 l2118 1130                                   l2150 122A  
                                 l2222 131E                                   l2214 12E0  
                                 l2206 1248                                   l2070 1DBE  
                                 l2230 22EA                                   l2310 07BA  
                                 l2302 07AA                                   l2160 17FC  
                                 l2048 201C                                   l2064 2080  
                                 l2056 204C                                   l2144 11F2  
                                 l2136 1198                                   l2128 1162  
                                 l2216 12EC                                   l2208 12AC  
                                 l2072 1DC8                                   l2080 1DE6  
                                 l2224 22AA                                   l2400 0A20  
                                 l2320 07CE                                   l2312 07BE  
                                 l2304 07AE                                   l2240 068A  
                                 l2232 21F6                                   l2234 2282  
                                 l2170 1852                                   l2162 1812  
                                 l2066 2086                                   l2058 2054  
                                 l2146 11F6                                   l2138 119C  
                                 l2090 1098                                   l2154 2182  
                                 l2218 12F4                                   l2074 1DD2  
                                 l2082 1E0C                                   l2226 22D0  
                                 l2410 0A72                                   l2402 0A24  
                                 l2330 0846                                   l2322 07F8  
                                 l2314 07C2                                   l2306 07B2  
                                 l2250 06C6                                   l2242 0696  
                                 l2172 1862                                   l2092 10A4  
                                 l2148 1208                                   l2156 218E  
                                 l2084 1E16                                   l2076 1DDC  
                                 l2068 1DBA                                   l2228 22D4  
                                 l2420 0AD8                                   l2412 0A7E  
                                 l2404 0A32                                   l2340 0886  
                                 l2332 084A                                   l2324 0814  
                                 l2316 07C6                                   l2308 07B6  
                                 l2260 06F6                                   l2252 06D6  
                                 l2244 06A4                                   l2500 1E7A  
                                 l2238 21BE                                   l2182 188C  
                                 l2174 1866                                   l2166 1826  
                                 l2094 10B6                                   l2158 2196  
                                 l2086 1E24                                   l2430 0B20  
                                 l2422 0AE8                                   l2414 0A8C  
                                 l2406 0A48                                   l2350 08C8  
                                 l2342 0896                                   l2334 0858  
                                 l2326 0824                                   l2318 07CA  
                                 l2270 0720                                   l2262 0708  
                                 l2254 06D8                                   l2246 06A6  
                                 l2502 1E7E                                   l2510 1AFC  
                                 l1640 2308                                   l2192 18B4  
                                 l2184 1896                                   l2176 1874  
                                 l2168 1850                                   l2096 10C2  
                                 l2088 1E28                                   l2432 0B22  
                                 l2424 0B08                                   l2416 0AC6  
                                 l2360 08F6                                   l2352 08D6  
                                 l2336 085A                                   l2328 083A  
                                 l2272 0730                                   l2280 075A  
                                 l2264 070A                                   l2248 06B6  
                                 l2256 06E0                                   l2504 1E8E  
                                 l2512 1B16                                   l2520 1B70  
                                 l2600 0C9A                                   l2522 2226  
                                 l2450 197E                                   l2442 1902  
                                 l2194 18C0                                   l2186 18A0  
                                 l2098 10CA                                   l2434 0B28  
                                 l2426 0B0C                                   l2418 0AC8  
                                 l2370 0962                                   l2362 0900  
                                 l2354 08E2                                   l2346 08AA  
                                 l2338 0864                                   l2290 0792  
                                 l2282 076A                                   l2274 0740  
                                 l2266 0710                                   l2258 06F0  
                                 l2506 1EB2                                   l2514 1B30  
                                 l2610 0CE2                                   l2602 0CAA  
                                 l2530 1EDE                                   l2460 1A02  
                                 l2452 198C                                   l2444 1930  
                                 l2196 18D0                                   l2436 0B36  
                                 l2428 0B1A                                   l2372 0972  
                                 l2356 08E6                                   l2348 08BA  
                                 l2364 0906                                   l2292 0796  
                                 l2284 077C                                   l2276 0750  
                                 l2268 071E                                   l2516 1B42  
                                 l2508 1AD6                                   l2620 0D30  
                                 l2612 0CF6                                   l2604 0CBA  
                                 l2540 0B4A                                   l2700 0FC8  
                                 l2524 1ECA                                   l2454 199E  
                                 l2446 1940                                   l1638 2304  
                                 l2198 18E0                                   l2438 0B38  
                                 l2390 09F4                                   l2382 09CC  
                                 l2366 092C                                   l2374 0982  
                                 l2358 08F4                                   l2294 079A  
                                 l2286 078A                                   l2278 0752  
                                 l2470 1C5A                                   l2518 1B52  
                                 l2630 0D78                                   l2622 0D40  
                                 l2614 0D04                                   l2606 0CCA  
                                 l2550 0B86                                   l2542 0B56  
                                 l2710 103E                                   l2702 1004  
                                 l2526 1ECE                                   l2534 1EE6  
                                 l2456 19AC                                   l2448 196E  
                                 l2392 09FC                                   l2384 09D6  
                                 l2376 09A8                                   l2368 0960  
                                 l2296 079E                                   l2288 078E  
                                 l2472 1C62                                   l2464 1C4A  
                                 l2480 1B96                                   l2640 0DB8  
                                 l2632 0D86                                   l2624 0D52  
                                 l2616 0D10                                   l2608 0CD2  
                                 l2560 0BB6                                   l2552 0B96  
                                 l2544 0B64                                   l2720 1086  
                                 l2712 1042                                   l2704 1010  
                                 l2536 1F14                                   l2528 1ED6  
                                 l2458 19FC                                   l2394 0A00  
                                 l2386 09E4                                   l2378 09B8  
                                 l2298 07A2                                   l2474 1CB8  
                                 l2466 1C4E                                   l2490 1C38  
                                 l2482 1B9A                                   l2650 0E2A  
                                 l2642 0DE6                                   l2626 0D68  
                                 l2634 0D98                                   l2618 0D2E  
                                 l2570 0BEC                                   l2562 0BBC  
                                 l2554 0B98                                   l2546 0B66  
                                 l2714 1066                                   l2706 101E  
                                 l2740 1674                                   l2724 15E0  
                                 l2396 0A10                                   l2388 09E6  
                                 l2492 22EE                                   l2476 1CF0  
                                 l2468 1C52                                   l2484 1BA2  
                                 l2660 0EA2                                   l2652 0E54  
                                 l2636 0DA6                                   l2628 0D6E  
                                 l2580 0C2C                                   l2572 0BFC  
                                 l2564 0BCA                                   l2548 0B76  
                                 l2556 0BA0                                   l2716 1076  
                                 l2708 103C                                   l2820 1A0E  
                                 l2750 16B4                                   l2742 1676  
                                 l2734 1668                                   l2726 15F8  
                                 l2398 0A12                                   l2494 1E42  
                                 l2486 1BAA                                   l2478 1B92  
                                 l2670 0ED8                                   l2662 0EBE  
                                 l2646 0E10                                   l2654 0E58  
                                 l2638 0DAA                                   l2582 0C3C  
                                 l2590 0C5C                                   l2574 0BFE  
                                 l2566 0BCC                                   l2558 0BB0  
                                 l2718 1084                                   l2830 1A5C  
                                 l2822 1A12                                   l2760 16C4  
                                 l2752 16BC                                   l2744 1678  
                                 l2736 1670                                   l2728 164C  
                                 l2496 1E62                                   l2488 1C00  
                                 l2664 0EC2                                   l2656 0E72  
                                 l2648 0E1C                                   l2592 0C6C  
                                 l2584 0C44                                   l2568 0BDC  
                                 l2576 0C06                                   l2680 0EF6  
                                 l2832 1A64                                   l2824 1A1E  
                                 l1890 217C                                   l1882 2140  
                                 l2770 16DC                                   l2762 16C6  
                                 l2754 16BE                                   l2746 167A  
                                 l2738 1672                                   l2498 1E72  
                                 l2666 0ED0                                   l2658 0E88  
                                 l2594 0C6C                                   l2586 0C48  
                                 l2578 0C16                                   l2690 0F74  
                                 l2682 0F04                                   l2834 1ABC  
                                 l2826 1A22                                   l2818 1A06  
                                 l1884 2142                                   l2772 16E2  
                                 l2764 16D6                                   l2756 16C0  
                                 l2748 168A                                   l2668 0ED6  
                                 l2692 0F7C                                   l2684 0F4A  
                                 l2780 1D02                                   l1892 2316  
                                 l2836 1ACA                                   l2828 1A4C  
                                 l2790 17D6                                   l2782 16F0  
                                 l1886 2172                                   l1894 2096  
                                 l1990 1540                                   l2774 16E2  
                                 l2766 16D6                                   l2758 16C2  
                                 l2598 0C80                                   l2694 0F88  
                                 l2686 0F60                                   l2678 0EE6  
                                 l2792 17E6                                   l2784 175A  
                                 l1888 2174                                   l1992 1542  
                                 l1984 14B6                                   l2776 16E8  
                                 l2768 16DC                                   l2696 0FBA  
                                 l2786 178C                                   l1994 154A  
                                 l1986 14BA                                   l2778 16E8  
                                 l2794 2256                                   l2698 0FBC  
                                 l2788 17A4                                   l1996 15BC  
                                 l1988 1538                                   l1998 15C4  
                                 ?_isr 0001                                   STR_1 060B  
                                 STR_2 061F                                   STR_3 0657  
                                 STR_4 0678                                   STR_5 0668  
                                 STR_6 0633                                   STR_7 0645  
                                 u2000 09B8                                   u2001 09B4  
                                 u2010 09E4                                   u2011 09E0  
                                 u2100 0AC6                                   u2020 09F4  
                                 u2101 0AC2                                   u2021 09F0  
                                 u2110 0AD8                                   u2030 0A10  
                                 u2111 0AD4                                   u2031 0A0C  
                                 u2200 19FC                                   u2120 0AE8  
                                 u2040 0A20                                   u2201 19F8  
                                 u2121 0AE4                                   u2041 0A1C  
                                 u2130 0B08                                   u2050 0A32  
                                 u2210 1CB8                                   u2131 0B04  
                                 u2051 0A2E                                   u2211 1CB4  
                                 u1500 2044                                   u2140 0B1A  
                                 u2060 0A48                                   u2220 1C00  
                                 u1501 2040                                   u2141 0B16  
                                 u2061 0A44                                   u2221 1BFC  
                                 u1510 2062                                   u2150 0B36  
                                 u2070 0A5E                                   u2230 1E52  
                                 _LATB 000F8A                                   u1415 14C2  
                                 u1511 205E                                   u2151 0B32  
                                 u2071 0A5A                                   u2231 1E4C  
                                 _LATC 000F8B                                   u2160 1930  
                                 u1520 2078                                   u1600 122A  
                                 u2080 0A72                                   u2240 1E72  
                                 u2400 0C2C                                   u2320 1F14  
                                 _LATD 000F8C                                   u2161 192C  
                                 u1425 14DC                                   u1521 2074  
                                 u1601 1226                                   u2081 0A6E  
                                 u2241 1E6E                                   u2401 0C28  
                                 u2321 1F10                                   _LATE 000F8D  
                                 u2314 223E                                   u2170 196E  
                                 u1610 21BC                                   u1530 1E40  
                                 u2090 0A8C                                   u2250 1E8E  
                                 u2410 0C6C                                   u2315 2238  
                                 u2171 196A                                   u1435 1502  
                                 u1611 21B8                                   u1531 1E3C  
                                 u2091 0A88                                   u2251 1E8A  
                                 u2411 0C68                                   u2180 198C  
                                 u1620 1812                                   u1540 10B6  
                                 u1700 12BC                                   u2260 1EB2  
                                 u2236 1E54                                   u2308 1B58  
                                 u2500 0DE6                                   u2420 0CE2  
                                 u2340 0B64                                   u2181 1988  
                                 u1621 180E                                   u1541 10B2  
                                 u1701 12B8                                   u1445 138E  
                                 u2261 1EAE                                   u2309 1B6C  
                                 u2501 0DE2                                   u2421 0CDE  
                                 u2341 0B60                                   u2190 19AC  
                                 u1630 1846                                   u1470 1FD8  
                                 u1550 1124                                   u1710 12E0  
                                 u2270 1AFC                                   u2510 0DFC  
                                 u2430 0D04                                   u2350 0B76  
                                 u2191 19A8                                   u1471 1FD4  
                                 u1551 1120                                   u1711 12DC  
                                 u1455 13A8                                   u2271 1AF8  
                                 u2511 0DF8                                   u2431 0D00  
                                 u2351 0B72                                   u2335 1F1C  
                                 u1640 1874                                   u1480 1FF6  
                                 u1560 115E                                   u1720 131E  
                                 u1800 0708                                   u2280 1B16  
                                 u2520 0E10                                   u2440 0D2E  
                                 u2360 0B86                                   u2600 0FB6  
                                 u1641 1870                                   u1481 1FF2  
                                 u1561 115A                                   u1721 131A  
                                 u1465 13CE                                   u1801 0704  
                                 u2281 1B12                                   u2521 0E0C  
                                 u2441 0D2A                                   u2361 0B82  
                                 u2601 0FB2                                   u1650 1888  
                                 u1490 2012                                   u1570 1176  
                                 u1810 071E                                   u2290 1B30  
                                 u2530 0E2A                                   u2450 0D52  
                                 u2370 0BCA                                   u2610 1000  
                                 u1651 1884                                   u1635 183C  
                                 u1491 200E                                   u1571 1172  
                                 u1731 22DE                                   u1811 071A  
                                 u2291 1B2C                                   u2531 0E26  
                                 u2451 0D4E                                   u2371 0BC6  
                                 u2611 0FFC                                   u2700 175A  
                                 u1660 18B0                                   u1580 118C  
                                 u1900 0858                                   u1820 0730  
                                 u2540 0E72                                   u2460 0D68  
                                 u2380 0BDC                                   u2620 101E  
                                 u2701 1756                                   u1661 18AC  
                                 u1581 1188                                   u1901 0854  
                                 u1821 072C                                   u2541 0E6E  
                                 u2461 0D64                                   u2381 0BD8  
                                 u2621 101A                                   u2710 178C  
                                 u1670 18D0                                   u1590 1208  
                                 u1910 0878                                   u1830 0740  
                                 u2550 0EA2                                   u2470 0D86  
                                 u2390 0BEC                                   u2630 102E  
                                 u2711 1788                                   u1671 18CC  
                                 u1591 1204                                   u1911 0874  
                                 u1831 073C                                   u2551 0E9E  
                                 u2471 0D82                                   u2391 0BE8  
                                 u2631 102A                                   u2720 17D6  
                                 u1680 18E0                                   u1920 0886  
                                 u1840 077C                                   u1744 220E  
                                 u2560 0ED0                                   u2480 0DA6  
                                 u2640 103C                                   u2721 17D2  
                                 u1681 18DC                                   u1921 0882  
                                 u1841 0778                                   u1745 2208  
                                 u2561 0ECC                                   u2481 0DA2  
                                 u2641 1038                                   u2730 17E6  
                                 u1754 229A                                   u1690 1248  
                                 u1930 0896                                   u1850 078A  
                                 u1770 06A4                                   u2490 0DB8  
                                 u2650 1076                                   u2570 0EF6  
                                 u2731 17E2                                   u1755 2294  
                                 u1691 1244                                   u1931 0892  
                                 u1851 0786                                   u1771 06A0  
                                 u2491 0DB4                                   u2651 1072  
                                 u2571 0EF2                                   u1764 21D6  
                                 u1940 08C8                                   u1860 07F8  
                                 u1780 06B6                                   u2660 1084  
                                 u2580 0F04                                   u1765 21D0  
                                 u1941 08C4                                   u1861 07F4  
                                 u1781 06B2                                   u2661 1080  
                                 u2581 0F00                                   u2670 169C  
                                 u1950 08D6                                   u1870 0810  
                                 u1790 06C6                                   u2590 0F60  
                                 u2750 1A5C                                   u2671 1698  
                                 u2807 1494                                   u1951 08D2  
                                 u1871 080A                                   u1791 06C2  
                                 u2591 0F5C                                   u2751 1A58  
                                 u2680 1724                                   u1960 08F4  
                                 u1880 0812                                   u2760 1ACA  
                                 u2681 171E                                   u2817 149E  
                                 u1961 08F0                                   u2761 1AC6  
                                 u2690 1726                                   u1970 092C  
                                 u1890 083A                                   u2907 1682  
                                 u2827 14AA                                   u1971 0928  
                                 u1891 0836                                   u1980 0972  
                                 u2917 16B6                                   u2837 15FE  
                                 u1981 096E                                   u1990 09A8  
                                 u2927 16CE                                   u2847 160C  
                                 u1991 09A4                                   u2937 153A  
                                 u2857 161A                                   u2777 1406  
                                 u2947 1544                                   u2867 1628  
                                 u2787 1410                                   u2957 15BE  
                                 u2877 1636                                   u2797 148A  
                                 u2967 15C8                                   u2887 1644  
                                 u2977 15D6                                   u2897 166A  
                                 _TMR0 000FD6                         _Automatic_Mode 16F0  
                                 _main 1A06                                   fsr2h 000FDA  
                                 indf2 000FDF                                   fsr1l 000FE1  
                                 fsr2l 000FD9                                   btemp 0065  
                                 prodh 000FF4                                   prodl 000FF3  
                                 start 000E                          ??_Manual_Mode 0035  
                      ___fldiv@new_exp 0020                   _bt_on_off_pump_press 0057  
                      __end_of_Lcd_Cmd 15E0                        __end_of_Lcd_Out 1E42  
                         ___param_bank 000000                             _Lcd_Chr_CP 1380  
                                ??_isr 0001                          ___fltol@sign1 0009  
                          _Change_Mode 1E42                        __end_of___fladd 0B4A  
                                ?_main 0001                        __end_of___fldiv 0EE4  
                      __end_of___fltol 1902                                  _T0CON 000FD5  
                      __end_of___lwdiv 2032                        __end_of___lwmod 2096  
                                i2l166 1FBA                                  _PORTB 000F81  
                                _PORTC 000F82                                  _PORTD 000F83  
                                _PORTE 000F84                                  _TRISB 000F93  
                                _TRISC 000F94                                  _TRISD 000F95  
                                _TRISE 000F96                    _Configure_Registers 2140  
                       ??_Min_Lv1_Incr 0029                  _bt_min_lv1_incr_press 0055  
                       ??_Min_Lv2_Incr 0029                        __end_of_dpowers 060B  
                                _tank1 0041                                  _tank2 0035  
                        Debounce@ptr_f 0031                             SetBit@port 0001  
               __end_of_Automatic_Mode 17FC                         __pbitbssCOMRAM 0320  
                                pclath 000FFA                                  tablat 000FF5  
                                plusw0 000FEB                                  plusw2 000FDB  
                                ttemp5 0066                                  ttemp6 0069  
                                ttemp7 006D                       __end_of_CheckBit 22AA  
                                status 000FD8                                  wtemp8 0066  
                      __end_of_sprintf 1238                       __end_of_Debounce 1B92  
                     __end_of_ClearBit 21F6                   ?_Configure_Registers 0001  
                     __end_of_Lcd_Init 16F0                        __initialization 20F8  
                         __end_of_main 1AD6                  _bt_min_lv2_incr_press 0053  
                           _Read_Level 1D02                    __end_of_Manual_Mode 2282  
                         TougleBit@pin 0003              __size_of_Initialize_Tanks 0062  
                               ??_main 0035                          __activetblptr 000002  
                 Automatic_Mode@isFull 001D                                 _ADCON0 000FC2  
                               _ADCON1 000FC1                                 _ADCON2 000FC0  
                               _ADRESH 000FC4                                 _ADRESL 000FC3  
                      ?_Automatic_Mode 0001                       __end_of_adc_init 2324  
                               i2l1940 1F5E                                 i2l1950 1F86  
                               i2l1942 1F62                                 i2l1934 1F46  
                               i2l1952 1F98                                 i2l1944 1F66  
                               i2l1936 1F54                                 i2l1946 1F7C  
                               i2l1954 1F9C                                 i2l1938 1F56  
                               i2l1956 1FB0                                 i2l1948 1F84  
                               i2l1958 1FB8                              ??_Lcd_Cmd 0001  
                            ??_Lcd_Out 0007                       __end_of___xxtofl 1098  
          __end_of_Set_Display_Message 1380                  ??_Configure_Registers 0001  
                     ??_Refresh_Screen 0029                                 _SetBit 2226  
                               ___flge 1902                            ?_Lcd_Chr_CP 0001  
                            ??___fladd 0009                              ??___fldiv 0017  
                            ??___fltol 0005                              ??___lwdiv 0005  
                            ??___lwmod 000C                         Debounce@filter 002F  
                               clear_0 211E                                 clear_1 212C  
                               _screen 0051                                 isa$std 000001  
                               _strcpy 2182                           __pdataCOMRAM 005B  
                         __mediumconst 0000                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                            ??_sprintf 0013                     __size_of_TougleBit 0030  
                           ___flge@ff1 0011                             ___flge@ff2 0015  
                         ___xxtofl@arg 000B                           ___xxtofl@exp 000A  
                         ___xxtofl@val 0001                             __accesstop 0080  
              __end_of__initialization 2132                          ___rparam_used 000001  
                           ___fltol@f1 0001                            _Manual_Mode 2256  
                       __pcstackCOMRAM 0001                            ?_Read_Level 0001  
                 __end_of_Min_Lv1_Incr 1D02                   __end_of_Min_Lv2_Incr 1C4A  
                            ?_CheckBit 0001                          TougleBit@port 0001  
                            ?_Debounce 0029                              ?_ClearBit 0001  
                            ?_Lcd_Init 0001                          ??_Tougle_Pump 0008  
                  __size_of_Lcd_Chr_CP 0134                         fp__Change_Mode 000E  
                           __pbssBANK0 0080                _bt_operation_mode_press 0059  
                      _refresh_display 0320                                ?_SetBit 0001  
                              ?___flge 0011                          ??_adc_amostra 0003  
                    __end_of_TougleBit 2226             ?_Configure_Timer_Interrupt 0001  
                     _Initialize_Tanks 2096                           ?_Change_Mode 0001  
                            ?_adc_init 0001                                ?_strcpy 0001  
                           ??_CheckBit 0005                              ?___xxtofl 0001  
                           ??_Debounce 0033                             ??_ClearBit 0005  
                        ?_Show_Display 0009                             ??_Lcd_Init 0004  
                  __size_of_Read_Level 00B6                                _Lcd_Cmd 14B4  
                              _Lcd_Out 1DB8                _Set_Display_Message$604 001B  
                  __end_of_Tougle_Pump 2304                                __Hparam 0000  
                              __Lparam 0000                        __size_of_SetBit 0030  
                      __size_of___flge 0104                                ___fladd 068A  
                              ___fldiv 0B4A                                ___fltol 17FC  
                              ___lwdiv 1FBE                                ___lwmod 2032  
                         __psmallconst 0600                                __pcinit 20F8  
                         CheckBit@port 0001                                __ramtop 0600  
                           ??_adc_init 0001      __end_of_Configure_Timer_Interrupt 2316  
                              __ptext0 1A06                                __ptext1 2316  
                              __ptext2 1D02                                __ptext3 1EC8  
                              __ptext4 0EE4                                __ptext5 0B4A  
                              __ptext6 2256                                __ptext7 1AD6  
                              __ptext8 1B92                                __ptext9 1C4A  
                              _display 0080                        __size_of_strcpy 003C  
                              _dpowers 0601                    __end_of_adc_amostra 1F44  
                         __size_of_isr 1FB6                             ??___xxtofl 0005  
                       ??_Show_Display 0029                       ??_Automatic_Mode 001D  
                            _INCREMENT 005B                                _sprintf 1098  
                       __pintcode_body 1F44                   end_of_initialization 2132  
               _filter_bt_min_lv1_incr 005E                 _filter_bt_min_lv2_incr 005C  
                        __Lmediumconst 0000                                int_func 1F44  
                __size_of_Min_Lv1_Incr 00B8                  __size_of_Min_Lv2_Incr 00B8  
                         ??_Lcd_Chr_CP 0001                                postdec1 000FE5  
                              postdec2 000FDD                                postinc0 000FEE  
                              postinc2 000FDE                              _PORTDbits 000F83  
                            _PORTEbits 000F84                            ___fladd@grs 0010  
                        ___xxtofl@sign 0009                              _TRISDbits 000F95  
                            _TRISEbits 000F96                            ___fldiv@grs 0022  
                          ___fldiv@rem 001B                            _Tougle_Pump 22EE  
 __end_of_Configure_External_Interrupt 2330  __size_of_Configure_External_Interrupt 0002  
         _Configure_External_Interrupt 232E            __end_of_Configure_Registers 2182  
                         _Min_Lv1_Incr 1C4A                           _Min_Lv2_Incr 1B92  
                   __end_of_Lcd_Chr_CP 14B4                           ?_Manual_Mode 0001  
                         ??_Read_Level 0028                         __end_of_SetBit 2256  
         __size_of_Set_Display_Message 0148                         __end_of___flge 1A06  
                          _adc_amostra 1EC8                          __pidataCOMRAM 2324  
                            SetBit@pin 0003                           Debounce@port 0029  
                 __size_of_Change_Mode 0086                         __end_of_strcpy 21BE  
                  start_initialization 20F8                           ClearBit@port 0001  
                    __size_of_CheckBit 0028                            __end_of_isr 1FBE  
                    __size_of_Debounce 00BC                      __size_of_ClearBit 0038  
             _filter_bt_operation_mode 0062                          Lcd_Out@buffer 0005  
                    __size_of_Lcd_Init 0110                     __end_of_Read_Level 1DB8  
                         _count_screen 004F               __end_of_Initialize_Tanks 20F8  
        ?_Configure_External_Interrupt 0001                               ??_SetBit 0005  
                 __end_of_Show_Display 22D0                     Read_Level@adcTank1 0028  
                   Read_Level@adcTank2 002A                               ??___flge 0019  
          ??_Configure_Timer_Interrupt 0001                __size_of_Refresh_Screen 001E  
                             ??_strcpy 0005                              ___fladd@a 0005  
                            ___fladd@b 0001                              ___fldiv@a 0013  
                            ___fldiv@b 000F                              _TougleBit 21F6  
                    __size_of_adc_init 000E                            __pbssCOMRAM 0035  
                    __size_of___xxtofl 01B4                               ?_Lcd_Cmd 0001  
                          sprintf@flag 0016                               ?_Lcd_Out 0004  
                  Show_Display@display 0009                            sprintf@prec 0017  
                     ___lwdiv@dividend 0001                              __pintcode 0008  
                             ?___fladd 0001                               ?___fldiv 000F  
                             ?___fltol 0001                               ?___lwdiv 0001  
                             ?___lwmod 0008                            __smallconst 0600  
                           ?_TougleBit 0001                       ___lwdiv@quotient 0005  
                             ?_sprintf 000D                            CheckBit@pin 0003  
            _Configure_Timer_Interrupt 2304                               _LATDbits 000F8C  
       ??_Configure_External_Interrupt 0001                               i2u135_40 1F54  
                             i2u135_41 1F50                               i2u136_40 1F7C  
                             i2u136_41 1F78                               i2u137_40 1F98  
                             i2u137_41 1F94                               i2u138_40 1FB0  
                             i2u138_41 1FAC                              _operation 0052  
                       fp__Tougle_Pump 000E                               Lcd_Out@x 0004  
                             Lcd_Out@y 0007                   __size_of_Manual_Mode 002C  
                         Lcd_Init@data 0005                             _ADCON0bits 000FC2  
                             _CheckBit 2282                               _Debounce 1AD6  
                             _ClearBit 21BE                  _filter_bt_on_off_pump 0060  
                             _Lcd_Init 15E0                           ?_Tougle_Pump 0001  
                          _INTCON2bits 000FF1                    _Set_Display_Message 1238  
                            copy_data0 210C                            Debounce@pin 002B  
                          ClearBit@pin 0003                  __size_of_Show_Display 0026  
                     __size_of_Lcd_Cmd 012C                       __size_of_Lcd_Out 008A  
                             __Hrparam 0000                               __Lrparam 0000  
                 ?_Set_Display_Message 0001                           ?_adc_amostra 0001  
                     __size_of___fladd 04C0                       __size_of___fldiv 039A  
                     __size_of___fltol 0106                       __size_of___lwdiv 0074  
                     __size_of___lwmod 0064                         _Refresh_Screen 22D0  
                             _adc_init 2316                            ??_TougleBit 0005  
                           sprintf@val 0018                               ___xxtofl 0EE4  
                       Lcd_Chr_CP@data 0003                        ___lwdiv@divisor 0003  
                         _Show_Display 22AA                        ___lwdiv@counter 0007  
                             __ptext10 1E42                               __ptext11 22EE  
                             __ptext20 1098                               __ptext12 21F6  
                             __ptext21 2032                               __ptext13 068A  
                             __ptext30 232E                               __ptext22 1FBE  
                             __ptext14 22D0                               __ptext31 16F0  
                             __ptext23 17FC                               __ptext15 22AA  
                             __ptext32 1902                               __ptext24 2282  
                             __ptext16 1DB8                               __ptext33 2226  
                             __ptext25 15E0                               __ptext17 1380  
                             __ptext34 21BE                               __ptext26 14B4  
                             __ptext18 1238                               __ptext27 2096  
                             __ptext19 2182                               __ptext28 2140  
                             __ptext29 2304                       Debounce@bt_press 002D  
                     __size_of_sprintf 01A0                             strcpy@from 0003  
                          Lcd_Cmd@data 0003                      ?_Initialize_Tanks 0001  
                        __size_of_main 00D0                __size_of_Automatic_Mode 010C  
                _count_refresh_display 004D                     ??_Initialize_Tanks 0001  
         __size_of_Configure_Registers 0042                               isa$xinst 000000  
                ??_Set_Display_Message 001B                               int$flags 0065  
               __end_of_Refresh_Screen 22EE                          ??_Change_Mode 000A  
                          Lcd_Out@data 0008                             _INTCONbits 000FF2  
                             intlevel2 0000                              sprintf@ap 0014  
                            sprintf@sp 000D                       ___lwmod@dividend 0008  
   __size_of_Configure_Timer_Interrupt 0012                        ?_Refresh_Screen 0001  
                             sprintf@c 001A                               sprintf@f 000F  
                      ___lwmod@divisor 000A                        fp__Min_Lv1_Incr 000E  
                      fp__Min_Lv2_Incr 000E                               strcpy@cp 0005  
                             strcpy@to 0001                        ___lwmod@counter 000C  
                     adc_amostra@canal 0007                    __end_of_Change_Mode 1EC8  
                        ___fladd@signs 000D                   __size_of_Tougle_Pump 0016  
                         ___fladd@aexp 000E                           ___fladd@bexp 000F  
